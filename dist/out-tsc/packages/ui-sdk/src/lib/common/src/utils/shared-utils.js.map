{"version":3,"file":"shared-utils.js","sourceRoot":"","sources":["../../../../../../../../../packages/ui-sdk/src/lib/common/src/utils/shared-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpParams } from '@angular/common/http';\r\nimport moment from 'moment';\r\nimport * as timezone from 'moment-timezone';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport slugify from 'slugify';\r\n\r\n/**\r\n * Check string is null or undefined\r\n * From https://github.com/typeorm/typeorm/issues/873#issuecomment-502294597\r\n *\r\n * @param obj\r\n * @returns\r\n */\r\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\r\n\treturn value === undefined || value === null;\r\n}\r\n\r\n/**\r\n * Checks if a value is not null or undefined.\r\n * @param value The value to be checked.\r\n * @returns true if the value is not null or undefined, false otherwise.\r\n */\r\nexport function isNotNullOrUndefined<T>(value: T | undefined | null): value is T {\r\n\treturn value !== undefined && value !== null;\r\n}\r\n\r\n/**\r\n * Check if a value is null, undefined, or an empty string.\r\n * @param value The value to check.\r\n * @returns true if the value is null, undefined, or an empty string, false otherwise.\r\n */\r\nexport function isNotNullOrUndefinedOrEmpty<T>(value: T | undefined | null): boolean {\r\n\treturn isNotNullOrUndefined(value) && value !== '';\r\n}\r\n\r\n// It will use for pass nested object or array in query params in get method.\r\nexport function toParams(query: any) {\r\n\tlet params: HttpParams = new HttpParams();\r\n\tObject.keys(query).forEach((key) => {\r\n\t\tif (isJsObject(query[key])) {\r\n\t\t\tparams = toSubParams(params, key, query[key]);\r\n\t\t} else {\r\n\t\t\tparams = params.append(key.toString(), query[key]);\r\n\t\t}\r\n\t});\r\n\treturn params;\r\n}\r\n\r\n/**\r\n * Checks if the given value is a JavaScript object.\r\n * @param object The value to check.\r\n * @returns `true` if the value is a JavaScript object, `false` otherwise.\r\n */\r\nexport function isJsObject(object: any): boolean {\r\n\treturn object !== null && object !== undefined && typeof object === 'object';\r\n}\r\n\r\n/**\r\n * Check value not empty.\r\n * @param item\r\n * @returns {boolean}\r\n */\r\nexport function isNotEmpty(item: any): boolean {\r\n\treturn !isEmpty(item);\r\n}\r\n\r\n/**\r\n * Check value empty.\r\n * @param item\r\n * @returns {boolean}\r\n */\r\nexport function isEmpty(item: any): boolean {\r\n\tif (item instanceof Array) {\r\n\t\titem = item.filter((val) => !isEmpty(val));\r\n\t\treturn item.length === 0;\r\n\t} else if (item && typeof item === 'object') {\r\n\t\tfor (var key in item) {\r\n\t\t\tif (item[key] === null || item[key] === undefined || item[key] === '') {\r\n\t\t\t\tdelete item[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.keys(item).length === 0;\r\n\t} else {\r\n\t\treturn !item || (item + '').toLocaleLowerCase() === 'null' || (item + '').toLocaleLowerCase() === 'undefined';\r\n\t}\r\n}\r\n\r\nfunction toSubParams(params: HttpParams, key: string, object: any) {\r\n\tObject.keys(object).forEach((childKey) => {\r\n\t\tif (isJsObject(object[childKey])) {\r\n\t\t\tparams = toSubParams(params, `${key}[${childKey}]`, object[childKey]);\r\n\t\t} else {\r\n\t\t\tparams = params.append(`${key}[${childKey}]`, object[childKey]);\r\n\t\t}\r\n\t});\r\n\r\n\treturn params;\r\n}\r\n\r\n// It will use when file uploading from angular, just pass object of with file it will convert it to from data\r\nexport function toFormData(obj: any, form?: any, namespace?: any) {\r\n\tconst fd = form || new FormData();\r\n\tlet formKey;\r\n\tfor (const property in obj) {\r\n\t\tif (obj.hasOwnProperty(property) && obj[property]) {\r\n\t\t\tif (namespace) {\r\n\t\t\t\tformKey = namespace + '[' + property + ']';\r\n\t\t\t} else {\r\n\t\t\t\tformKey = property;\r\n\t\t\t}\r\n\r\n\t\t\t// if the property is an object, but not a File, use recursively.\r\n\t\t\tif (obj[property] instanceof Date) {\r\n\t\t\t\tfd.append(formKey, obj[property].toISOString());\r\n\t\t\t} else if (typeof obj[property] === 'object' && !(obj[property] instanceof File)) {\r\n\t\t\t\ttoFormData(obj[property], fd, formKey);\r\n\t\t\t} else {\r\n\t\t\t\t// if it's a string or a File object\r\n\t\t\t\tfd.append(formKey, obj[property]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn fd;\r\n}\r\n\r\nexport function progressStatus(value) {\r\n\tif (value <= 25) {\r\n\t\treturn 'danger';\r\n\t} else if (value <= 50) {\r\n\t\treturn 'warning';\r\n\t} else if (value <= 75) {\r\n\t\treturn 'info';\r\n\t} else {\r\n\t\treturn 'success';\r\n\t}\r\n}\r\n\r\n/**\r\n * Determines the contrasting color (black or white) based on the given hexadecimal color.\r\n * @param hex The hexadecimal color code (with or without the '#' prefix).\r\n * @returns The contrasting color ('#000000' for dark backgrounds, '#ffffff' for light backgrounds).\r\n */\r\nexport function getContrastColor(hex: string): string {\r\n\tconst threshold = 130;\r\n\tconst hexToRGB = (hex: string) => {\r\n\t\tconst hexValue = hex.charAt(0) === '#' ? hex.substring(1, 7) : hex;\r\n\t\treturn {\r\n\t\t\tred: parseInt(hexValue.substring(0, 2), 16),\r\n\t\t\tgreen: parseInt(hexValue.substring(2, 4), 16),\r\n\t\t\tblue: parseInt(hexValue.substring(4, 6), 16)\r\n\t\t};\r\n\t};\r\n\tconst { red, green, blue } = hexToRGB(hex);\r\n\tconst cBrightness = (red * 299 + green * 587 + blue * 114) / 1000;\r\n\r\n\treturn cBrightness > threshold ? '#000000' : '#ffffff';\r\n}\r\n\r\n/**\r\n * The precision for a decimal (exact numeric applies only for decimal column), which is the maximum\r\n * number of digits that are stored.\r\n */\r\nexport function convertPrecisionFloatDigit(val: number, digit: number = 6) {\r\n\treturn parseFloat(parseFloat(val.toString()).toFixed(digit));\r\n}\r\n\r\n/*\r\n * Retrieve name from email address\r\n */\r\nexport function retrieveNameFromEmail(email: string): string {\r\n\tif (email) {\r\n\t\treturn ucFirst(email.substring(0, email.lastIndexOf('@')), true);\r\n\t}\r\n\treturn;\r\n}\r\n\r\n// convert local time to another timezone\r\nexport function convertLocalToTimezone(\r\n\tlocalDt: string | Date,\r\n\tlocalDtFormat: string,\r\n\ttimeZone: string,\r\n\tformat = 'YYYY-MM-DD hh:mm:ss'\r\n) {\r\n\treturn timezone(localDt, localDtFormat).tz(timeZone).format(format);\r\n}\r\n\r\n/*\r\n * Capitalize the first letter of a string being\r\n */\r\nexport function ucFirst(str: string, force: boolean): string {\r\n\tstr = force ? str.toLowerCase() : str;\r\n\treturn str.replace(/(\\b)([a-zA-Z])/, function (firstLetter: string) {\r\n\t\treturn firstLetter.toUpperCase();\r\n\t});\r\n}\r\n\r\n/**\r\n * Get the UTC offset for a given timezone.\r\n *\r\n * @param timezone The timezone identifier (e.g., 'Europe/Paris').\r\n * @returns The UTC offset in minutes.\r\n */\r\nexport function getUTCOffsetForTimezone(timezone: string = 'UTC'): number {\r\n\treturn moment.tz(timezone).utcOffset();\r\n}\r\n\r\n/**\r\n * Converts a date to UTC using the offset of the specified timezone.\r\n *\r\n * @param date The date to convert, can be a string, Date object, or moment object.\r\n * @param timezone (Optional) The timezone identifier (e.g., 'Europe/Paris'). If not provided, the local timezone is used.\r\n * @returns A moment object representing the date in UTC.\r\n */\r\nexport function toUtcOffset(date: string | Date | moment.Moment, timezone?: string): moment.Moment {\r\n\t// Get the UTC offset for the specified timezone\r\n\tconst utcOffset = timezone ? getUTCOffsetForTimezone(timezone) : moment().utcOffset();\r\n\r\n\t// Clone the provided date to avoid mutating it, then subtract the UTC offset\r\n\treturn moment(date).clone().subtract(utcOffset, 'minutes');\r\n}\r\n\r\n/**\r\n * Converts the given date to the specified timezone.\r\n *\r\n * @param date The date to convert to the specified timezone.\r\n * @param timezone The IANA timezone identifier (e.g., 'America/New_York', 'Europe/London').\r\n * @returns A moment object representing the date in the specified timezone.\r\n */\r\nexport function toTimezone(date: string | Date | moment.Moment, timezone: string): moment.Moment {\r\n\treturn moment.utc(date).tz(timezone);\r\n}\r\n\r\n/**\r\n * Converts the given date to the local timezone.\r\n *\r\n * @param date The date to convert to local timezone.\r\n * @returns A moment object representing the date in the local timezone.\r\n */\r\nexport function toLocal(date: string | Date | moment.Moment): moment.Moment {\r\n\treturn moment.utc(date).local();\r\n}\r\n\r\n/**\r\n * Converts the given date to the UTC timezone.\r\n * @param date The date to convert to UTC timezone.\r\n * @returns A moment object representing the date in UTC timezone.\r\n */\r\nexport function toUTC(date: string | Date | moment.Moment): moment.Moment {\r\n\treturn moment(date).utc();\r\n}\r\n\r\n/**\r\n * Returns an operator function that filters out consecutive duplicate values in an observable sequence.\r\n * @returns An operator function that filters out consecutive duplicate values in an observable sequence.\r\n */\r\nexport function distinctUntilChange<T>(): (source: Observable<T>) => Observable<T> {\r\n\treturn (source: Observable<T>): Observable<T> => {\r\n\t\treturn source.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)));\r\n\t};\r\n}\r\n\r\n/**\r\n * Compares two dates.\r\n * @param date1 The first date to compare.\r\n * @param date2 The second date to compare.\r\n * @returns `true` if `date1` is greater than `date2`, `false` if they are equal or `date1` is less than `date2`.\r\n */\r\nexport const compareDate = (date1: any, date2: any): boolean => {\r\n\tconst d1 = new Date(date1);\r\n\tconst d2 = new Date(date2);\r\n\r\n\tconst same = d1.getTime() === d2.getTime();\r\n\tif (same) {\r\n\t\treturn false;\r\n\t}\r\n\treturn d1 > d2;\r\n};\r\n\r\n/**\r\n * Splits a camelCase or snake_case string into separate words.\r\n * @param word The input string to split.\r\n * @returns The input string split into separate words, with each word capitalized.\r\n * @throws If the input parameter is not a string.\r\n */\r\nexport function splitCamelCase(word: string): string {\r\n\tif (typeof word !== 'string') {\r\n\t\tthrow new Error('The \"word\" parameter must be a string.');\r\n\t}\r\n\r\n\tconst split = word.split('_');\r\n\tconst output = split.map((text: string) => ucFirst(text, true));\r\n\r\n\treturn output.join(' ');\r\n}\r\n\r\n/**\r\n * Deep Merge\r\n *\r\n * @param target\r\n * @param sources\r\n * @returns\r\n */\r\nexport function mergeDeep(target: any, ...sources: any) {\r\n\tif (!sources.length) return target;\r\n\tconst source = sources.shift();\r\n\r\n\tif (isJsObject(target) && isJsObject(source)) {\r\n\t\tfor (const key in source) {\r\n\t\t\tif (isJsObject(source[key])) {\r\n\t\t\t\tif (!target[key])\r\n\t\t\t\t\tObject.assign(target, {\r\n\t\t\t\t\t\t[key]: {}\r\n\t\t\t\t\t});\r\n\t\t\t\tmergeDeep(target[key], source[key]);\r\n\t\t\t} else {\r\n\t\t\t\tObject.assign(target, {\r\n\t\t\t\t\t[key]: source[key]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn mergeDeep(target, ...sources);\r\n}\r\n\r\n/**\r\n * Delete Keys from nested object\r\n *\r\n * @param data\r\n * @param deleteKeys\r\n * @returns\r\n */\r\nexport function cleanKeys(data: any, deleteKeys: any) {\r\n\t// There is nothing to be done if `data` is not an object,\r\n\tif (typeof data != 'object') return;\r\n\tif (!data) return; // null object\r\n\r\n\tfor (const key in data) {\r\n\t\tif (deleteKeys.includes(key)) {\r\n\t\t\tdelete data[key];\r\n\t\t} else {\r\n\t\t\t// If the key is not deleted from the current `data` object,\r\n\t\t\t// the value should be check for black-listed keys.\r\n\t\t\tcleanKeys(data[key], deleteKeys);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Maps a row of employee data to a partial employee state object.\r\n * @param row The row of employee data to map.\r\n * @returns A partial employee state object containing 'name', 'fullName', 'id', and 'imageUrl' properties.\r\n */\r\nexport function employeeMapper(row: any): {\r\n\tname: string | null;\r\n\tfullName: string | null;\r\n\tid: string | null;\r\n\timageUrl: string | null;\r\n} {\r\n\treturn {\r\n\t\tname: row.employee && row.employee.user ? row.employee.fullName : null,\r\n\t\tfullName: row.employee && row.employee.user ? row.employee.fullName : null,\r\n\t\tid: row.employee ? row.employee.id : null,\r\n\t\timageUrl: row.employee && row.employee.user ? row.employee.user.imageUrl : null\r\n\t};\r\n}\r\n\r\n/**\r\n * Adding Trailing Slash In URL\r\n *\r\n * \"/#/pages/home\"\r\n * console.log(addTrailingSlashIfMissing('#/pages/home'));\r\n *\r\n * \"/pages/home\"\r\n * console.log(addTrailingSlashIfMissing('pages/home'));\r\n *\r\n */\r\nexport function addTrailingSlash(str: string) {\r\n\tif (!str) {\r\n\t\treturn;\r\n\t}\r\n\tconst slashChar = str.startsWith('/') ? '' : '/';\r\n\treturn slashChar + str;\r\n}\r\n\r\n/**\r\n * Removing Trailing Slash In URL\r\n *\r\n * \"example.com\"\r\n * console.log(stripTrailingSlash('example.com/'));\r\n *\r\n */\r\nexport function removeTrailingSlash(str: string) {\r\n\tif (!str) {\r\n\t\treturn;\r\n\t}\r\n\treturn str.endsWith('/') ? str.replace(/\\/+$/, '') : str;\r\n}\r\n\r\n/**\r\n * Prepare external URL\r\n *\r\n * @param url\r\n * @returns\r\n */\r\nexport function __prepareExternalUrlLocation(url: string) {\r\n\treturn [removeTrailingSlash(location.origin), addTrailingSlash(url)].join('');\r\n}\r\n\r\n/**\r\n * Generate slug from string value\r\n *\r\n * @param string\r\n * @param replacement\r\n * @returns {string}\r\n */\r\nexport function sluggable(string: string, replacement: any = '-'): string {\r\n\treturn slugify(string, {\r\n\t\treplacement: replacement, // replace spaces with replacement character, defaults to `-`\r\n\t\tremove: /[*+~()'\"!:@,.]/g, // remove characters that match regex, defaults to `undefined`\r\n\t\tlower: true, // convert to lower case, defaults to `false`\r\n\t\ttrim: true // trim leading and trailing replacement chars, defaults to `true`\r\n\t}).replace(/[_]/g, replacement);\r\n}\r\n\r\n/**\r\n * It takes a base64 image, compresses it to a given width and height, and returns a promise that\r\n * resolves to the compressed image\r\n * @param {string} base64Image - The base64 image string\r\n * @param {number} width - The width of the image you want to compress.\r\n * @param {number} height - The height of the image in pixels.\r\n * @returns A promise that resolves to a string.\r\n */\r\nexport function compressImage(base64Image: string, width: number, height: number): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst img = new Image();\r\n\t\timg.src = base64Image;\r\n\t\timg.onload = () => {\r\n\t\t\tconst elem = document.createElement('canvas');\r\n\t\t\telem.width = width;\r\n\t\t\telem.height = height;\r\n\t\t\tconst ctx = elem.getContext('2d');\r\n\t\t\tctx.drawImage(img, 0, 0, width, height);\r\n\t\t\tconst data = ctx.canvas.toDataURL();\r\n\t\t\tresolve(data);\r\n\t\t};\r\n\t\timg.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n/**\r\n * How To Make A Sleep Function In TypeScript?\r\n *\r\n * @param ms\r\n * @returns\r\n */\r\nexport function sleep(ms: number) {\r\n\treturn new Promise((r) => setTimeout(r, ms));\r\n}\r\n\r\n/**\r\n * Convert an array of objects to an object with specified key-value pairs.\r\n *\r\n * @param array - The array of objects.\r\n * @param key - The property to use as the key in the resulting object.\r\n * @param value - The property to use as the value in the resulting object.\r\n * @returns An object with key-value pairs based on the specified properties.\r\n */\r\nexport function arrayToObject<T extends Record<string, any>>(\r\n\tarray: T[],\r\n\tkey: keyof T,\r\n\tvalue: keyof T\r\n): Record<string, any> {\r\n\treturn array.reduce((prev, current) => {\r\n\t\treturn {\r\n\t\t\t...prev,\r\n\t\t\t[String(current[key])]: current[value]\r\n\t\t};\r\n\t}, {});\r\n}\r\n\r\n/**\r\n * Converts a given input into a boolean value.\r\n * If the input is `undefined` or `null`, it returns `false`.\r\n *\r\n * @param value - The input to convert to a boolean.\r\n * @returns {boolean} - A boolean representation of the given input.\r\n */\r\nexport const parseToBoolean = (value: any): boolean => {\r\n\tif (value === undefined || value === null) {\r\n\t\treturn false; // Return false for undefined or null\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst parsed = JSON.parse(value); // Attempt to parse as JSON\r\n\t\tif (typeof parsed === 'boolean') {\r\n\t\t\treturn parsed; // Return if it's already a boolean\r\n\t\t}\r\n\r\n\t\t// Convert numbers: 0 is false, other numbers are true\r\n\t\tif (typeof parsed === 'number') {\r\n\t\t\treturn parsed !== 0;\r\n\t\t}\r\n\r\n\t\t// Convert common truthy/falsy strings\r\n\t\tif (typeof parsed === 'string') {\r\n\t\t\tconst lowerCase = parsed.toLowerCase().trim();\r\n\t\t\treturn lowerCase === 'true' || lowerCase === '1'; // Consider 'true' and '1' as true\r\n\t\t}\r\n\r\n\t\treturn Boolean(parsed); // Fallback to Boolean conversion\r\n\t} catch (error) {\r\n\t\t// Handle JSON parse errors\r\n\t\treturn false; // Return false on parsing errors\r\n\t}\r\n};\r\n\r\n/**\r\n * Replaces all occurrences of a substring in a given string with another substring.\r\n *\r\n * @param {string} value - The input value.\r\n * @param {string} search - The substring to search for.\r\n * @param {string} replace - The substring to replace the search substring with.\r\n * @return {string} The modified string with all occurrences of the search substring replaced.\r\n */\r\nexport function replaceAll(value: string, search: string, replace: string): string {\r\n\treturn value.split(search).join(replace);\r\n}\r\n"]}