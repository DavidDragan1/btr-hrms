{"version":3,"file":"store.service.js","sourceRoot":"","sources":["../../../../../../../../../../../packages/ui-sdk/src/lib/common/src/providers/services/store/store.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { StoreConfig, Store as AkitaStore, Query } from '@datorama/akita';\r\nimport { merge, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { uniq } from 'underscore';\r\nimport {\r\n\tIOrganization,\r\n\tPermissionsEnum,\r\n\tIRolePermission,\r\n\tIUser,\r\n\tLanguagesEnum,\r\n\tIOrganizationProject,\r\n\tILanguage,\r\n\tIProposalViewModel,\r\n\tIFeatureToggle,\r\n\tIFeatureOrganization,\r\n\tFeatureEnum,\r\n\tISelectedEmployee,\r\n\tComponentLayoutStyleEnum,\r\n\tIOrganizationTeam\r\n} from '@gauzy/contracts';\r\nimport { GuiDrag } from '../../../interfaces';\r\nimport { ComponentEnum, SYSTEM_DEFAULT_LAYOUT } from '../../../constants';\r\n\r\nexport interface AppState {\r\n\tuser: IUser;\r\n\tuserRolePermissions: IRolePermission[];\r\n\tselectedOrganization: IOrganization;\r\n\tselectedEmployee: ISelectedEmployee;\r\n\tselectedProposal: IProposalViewModel;\r\n\tselectedProject: IOrganizationProject;\r\n\tselectedTeam: IOrganizationTeam;\r\n\tsystemLanguages: ILanguage[];\r\n\tfeatureToggles: IFeatureToggle[];\r\n\tfeatureOrganizations: IFeatureOrganization[];\r\n\tfeatureTenant: IFeatureOrganization[];\r\n}\r\n\r\nexport interface PersistState {\r\n\torganizationId?: string;\r\n\tclientId?: string;\r\n\ttoken: string;\r\n\trefresh_token: string;\r\n\tuserId: string;\r\n\tserverConnection: number;\r\n\tpreferredLanguage: LanguagesEnum;\r\n\tpreferredComponentLayout: ComponentLayoutStyleEnum;\r\n\tcomponentLayout: any[]; //This would be a Map but since Maps can't be serialized/deserialized it is stored as an array\r\n\tthemeName: string;\r\n\twindows: Partial<GuiDrag>[];\r\n\twidgets: Partial<GuiDrag>[];\r\n\ttenantId: string;\r\n}\r\n\r\nexport function createInitialAppState(): AppState {\r\n\treturn {\r\n\t\tuserRolePermissions: [],\r\n\t\tfeatureToggles: [],\r\n\t\tfeatureOrganizations: [],\r\n\t\tfeatureTenant: []\r\n\t} as AppState;\r\n}\r\n\r\nexport function createInitialPersistState(): PersistState {\r\n\tconst token = localStorage.getItem('token') || null;\r\n\tconst refresh_token = localStorage.getItem('refresh_token') || null;\r\n\tconst userId = localStorage.getItem('_userId') || null;\r\n\tconst organizationId = localStorage.getItem('_organizationId') || null;\r\n\tconst serverConnection = parseInt(localStorage.getItem('serverConnection')) || null;\r\n\tconst preferredLanguage = localStorage.getItem('preferredLanguage') || null;\r\n\tconst componentLayout = localStorage.getItem('componentLayout') || [];\r\n\tconst themeName = localStorage.getItem('themeName') || null;\r\n\tconst widgets = JSON.parse(localStorage.getItem('_widgets'));\r\n\tconst windows = JSON.parse(localStorage.getItem('_windows'));\r\n\tconst tenantId = localStorage.getItem('_tenantId') || null;\r\n\r\n\treturn {\r\n\t\ttoken,\r\n\t\trefresh_token,\r\n\t\tuserId,\r\n\t\torganizationId,\r\n\t\tserverConnection,\r\n\t\tpreferredLanguage,\r\n\t\tcomponentLayout,\r\n\t\tthemeName,\r\n\t\twidgets,\r\n\t\twindows,\r\n\t\ttenantId\r\n\t} as PersistState;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'app' })\r\nexport class AppStore extends AkitaStore<AppState> {\r\n\tconstructor() {\r\n\t\tsuper(createInitialAppState());\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'persist' })\r\nexport class PersistStore extends AkitaStore<PersistState> {\r\n\tconstructor() {\r\n\t\tsuper(createInitialPersistState());\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppQuery extends Query<AppState> {\r\n\tconstructor(protected readonly store: AppStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PersistQuery extends Query<PersistState> {\r\n\tconstructor(protected readonly store: PersistStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class Store {\r\n\tconstructor(\r\n\t\tprotected readonly appStore: AppStore,\r\n\t\tprotected readonly appQuery: AppQuery,\r\n\t\tprotected readonly persistStore: PersistStore,\r\n\t\tprotected readonly persistQuery: PersistQuery\r\n\t) {}\r\n\r\n\tuser$ = this.appQuery.select((state) => state.user);\r\n\tselectedOrganization$ = this.appQuery.select((state) => state.selectedOrganization);\r\n\tselectedEmployee$ = this.appQuery.select((state) => state.selectedEmployee);\r\n\tselectedProject$ = this.appQuery.select((state) => state.selectedProject);\r\n\tselectedTeam$ = this.appQuery.select((state) => state.selectedTeam);\r\n\tuserRolePermissions$ = this.appQuery.select((state) => state.userRolePermissions);\r\n\tfeatureToggles$ = this.appQuery.select((state) => state.featureToggles);\r\n\tfeatureOrganizations$ = this.appQuery.select((state) => state.featureOrganizations);\r\n\tfeatureTenant$ = this.appQuery.select((state) => state.featureTenant);\r\n\tpreferredLanguage$ = this.persistQuery.select((state) => state.preferredLanguage);\r\n\tpreferredComponentLayout$ = this.persistQuery.select((state) => state.preferredComponentLayout);\r\n\tcomponentLayoutMap$ = this.persistQuery\r\n\t\t.select((state) => state.componentLayout)\r\n\t\t.pipe(map((componentLayout) => new Map(componentLayout)));\r\n\tsystemLanguages$ = this.appQuery.select((state) => state.systemLanguages);\r\n\r\n\tsubject = new Subject<ComponentEnum>();\r\n\r\n\t/**\r\n\t * Observe any change to the component layout.\r\n\t * Returns the layout for the component given in the params in the following order of preference\r\n\t * 1. If overridden at component level, return that.\r\n\t * Else\r\n\t * 2. If preferred layout set, then return that\r\n\t * Else\r\n\t * 3. Return the system default layout\r\n\t */\r\n\tcomponentLayout$(component: ComponentEnum) {\r\n\t\treturn merge(\r\n\t\t\tthis.persistQuery\r\n\t\t\t\t.select((state) => state.preferredComponentLayout)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((preferredLayout) => {\r\n\t\t\t\t\t\tconst dataLayout = this.getLayoutForComponent(component);\r\n\t\t\t\t\t\treturn dataLayout || preferredLayout || SYSTEM_DEFAULT_LAYOUT;\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\tthis.persistQuery\r\n\t\t\t\t.select((state) => state.componentLayout)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((componentLayout) => {\r\n\t\t\t\t\t\tconst componentMap = new Map(componentLayout);\r\n\t\t\t\t\t\treturn componentMap.get(component) || this.preferredComponentLayout || SYSTEM_DEFAULT_LAYOUT;\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tget selectedOrganization(): IOrganization {\r\n\t\tconst { selectedOrganization } = this.appQuery.getValue();\r\n\t\treturn selectedOrganization;\r\n\t}\r\n\r\n\tset selectedEmployee(employee: ISelectedEmployee) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedEmployee: employee\r\n\t\t});\r\n\t}\r\n\r\n\tget selectedEmployee(): ISelectedEmployee {\r\n\t\tconst { selectedEmployee } = this.appQuery.getValue();\r\n\t\treturn selectedEmployee;\r\n\t}\r\n\r\n\tset selectedOrganization(organization: IOrganization) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedOrganization: organization\r\n\t\t});\r\n\t}\r\n\r\n\tset selectedProject(project: IOrganizationProject) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedProject: project\r\n\t\t});\r\n\t}\r\n\r\n\tset selectedTeam(team: IOrganizationTeam) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedTeam: team\r\n\t\t});\r\n\t}\r\n\r\n\tset systemLanguages(languages: ILanguage[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tsystemLanguages: languages\r\n\t\t});\r\n\t}\r\n\r\n\tget systemLanguages(): ILanguage[] {\r\n\t\tconst { systemLanguages } = this.appQuery.getValue();\r\n\t\treturn systemLanguages;\r\n\t}\r\n\r\n\tget refresh_token(): string | null {\r\n\t\tconst { refresh_token } = this.persistQuery.getValue();\r\n\t\treturn refresh_token;\r\n\t}\r\n\r\n\tset refresh_token(refresh_token: string) {\r\n\t\tthis.persistStore.update({\r\n\t\t\trefresh_token: refresh_token\r\n\t\t});\r\n\t}\r\n\r\n\tget token(): string | null {\r\n\t\tconst { token } = this.persistQuery.getValue();\r\n\t\treturn token;\r\n\t}\r\n\r\n\tset token(token: string) {\r\n\t\tthis.persistStore.update({\r\n\t\t\ttoken: token\r\n\t\t});\r\n\t}\r\n\r\n\tget userId(): IUser['id'] | null {\r\n\t\tconst { userId } = this.persistQuery.getValue();\r\n\t\treturn userId;\r\n\t}\r\n\r\n\tset userId(id: IUser['id'] | null) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tuserId: id\r\n\t\t});\r\n\t}\r\n\r\n\tget organizationId(): IOrganization['id'] | null {\r\n\t\tconst { organizationId } = this.persistQuery.getValue();\r\n\t\treturn organizationId;\r\n\t}\r\n\r\n\tset organizationId(id: IOrganization['id'] | null) {\r\n\t\tthis.persistStore.update({\r\n\t\t\torganizationId: id\r\n\t\t});\r\n\t}\r\n\r\n\tget user(): IUser {\r\n\t\tconst { user } = this.appQuery.getValue();\r\n\t\treturn user;\r\n\t}\r\n\r\n\tset user(user: IUser) {\r\n\t\tthis.appStore.update({\r\n\t\t\tuser: user\r\n\t\t});\r\n\t}\r\n\r\n\tget selectedProposal(): IProposalViewModel {\r\n\t\tconst { selectedProposal } = this.appQuery.getValue();\r\n\t\treturn selectedProposal;\r\n\t}\r\n\r\n\tset selectedProposal(proposal: IProposalViewModel) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedProposal: proposal\r\n\t\t});\r\n\t}\r\n\r\n\tget featureToggles(): IFeatureToggle[] {\r\n\t\tconst { featureToggles } = this.appQuery.getValue();\r\n\t\treturn featureToggles;\r\n\t}\r\n\r\n\tset featureToggles(featureToggles: IFeatureToggle[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tfeatureToggles: featureToggles\r\n\t\t});\r\n\t}\r\n\r\n\tget featureTenant(): IFeatureOrganization[] {\r\n\t\tconst { featureTenant } = this.appQuery.getValue();\r\n\t\treturn featureTenant;\r\n\t}\r\n\r\n\tset featureTenant(featureOrganizations: IFeatureOrganization[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tfeatureTenant: featureOrganizations\r\n\t\t});\r\n\t}\r\n\r\n\tget featureOrganizations(): IFeatureOrganization[] {\r\n\t\tconst { featureOrganizations } = this.appQuery.getValue();\r\n\t\treturn featureOrganizations;\r\n\t}\r\n\r\n\tset featureOrganizations(featureOrganizations: IFeatureOrganization[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tfeatureOrganizations: featureOrganizations\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t * Check features are enabled/disabled for tenant organization\r\n\t */\r\n\thasFeatureEnabled(feature: FeatureEnum) {\r\n\t\tconst { featureTenant = [], featureOrganizations = [], featureToggles = [] } = this.appQuery.getValue();\r\n\t\tconst filtered = uniq([...featureOrganizations, ...featureTenant], (x) => x.featureId);\r\n\r\n\t\tconst unleashToggle = featureToggles.find((toggle) => toggle.name === feature && toggle.enabled === false);\r\n\t\tif (unleashToggle) {\r\n\t\t\treturn unleashToggle.enabled;\r\n\t\t}\r\n\r\n\t\treturn !!filtered.find((item) => item.feature.code === feature && item.isEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the user role permissions from the application state.\r\n\t *\r\n\t * @return {IRolePermission[]} The user role permissions.\r\n\t */\r\n\tget userRolePermissions(): IRolePermission[] {\r\n\t\tconst { userRolePermissions } = this.appQuery.getValue();\r\n\t\treturn userRolePermissions;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the user role permissions in the application state.\r\n\t *\r\n\t * @param {IRolePermission[]} userRolePermissions - The new user role permissions.\r\n\t */\r\n\tset userRolePermissions(userRolePermissions: IRolePermission[]) {\r\n\t\tthis.appStore.update({ userRolePermissions });\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the user has a specific permission.\r\n\t *\r\n\t * @param {PermissionsEnum} permission - The permission to check.\r\n\t * @return {boolean} Returns true if the user has the permission, false otherwise.\r\n\t */\r\n\thasPermission(permission: PermissionsEnum): boolean {\r\n\t\tconst { userRolePermissions } = this.appQuery.getValue();\r\n\t\treturn !!(userRolePermissions || []).find((p) => p.permission === permission && p.enabled);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the user has all the specified permissions.\r\n\t *\r\n\t * @param {...PermissionsEnum[]} permissions - The permissions to check.\r\n\t * @return {boolean} Returns true if the user has all the permissions, false otherwise.\r\n\t */\r\n\thasAllPermissions(...permissions: PermissionsEnum[]): boolean {\r\n\t\treturn permissions.reduce((acc, permission) => {\r\n\t\t\treturn this.hasPermission(permission) && acc;\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the user has any of the specified permissions.\r\n\t *\r\n\t * @param {...PermissionsEnum[]} permissions - The permissions to check.\r\n\t * @return {boolean} Returns true if the user has any of the permissions, false otherwise.\r\n\t */\r\n\thasAnyPermission(...permissions: PermissionsEnum[]): boolean {\r\n\t\tconst { userRolePermissions } = this.appQuery.getValue();\r\n\t\treturn !!(userRolePermissions || []).find(\r\n\t\t\t(p: IRolePermission) => permissions.includes(p.permission as PermissionsEnum) && p.enabled\r\n\t\t);\r\n\t}\r\n\r\n\tget serverConnection() {\r\n\t\tconst { serverConnection } = this.persistQuery.getValue();\r\n\t\treturn serverConnection;\r\n\t}\r\n\r\n\tset serverConnection(val: number) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tserverConnection: val\r\n\t\t});\r\n\t}\r\n\r\n\tget preferredLanguage(): any | null {\r\n\t\tconst { preferredLanguage } = this.persistQuery.getValue();\r\n\t\treturn preferredLanguage;\r\n\t}\r\n\r\n\tset preferredLanguage(preferredLanguage) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tpreferredLanguage: preferredLanguage\r\n\t\t});\r\n\t}\r\n\r\n\tget preferredComponentLayout(): any | null {\r\n\t\tconst { preferredComponentLayout } = this.persistQuery.getValue();\r\n\t\treturn preferredComponentLayout;\r\n\t}\r\n\r\n\tset preferredComponentLayout(preferredComponentLayout) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tpreferredComponentLayout: preferredComponentLayout\r\n\t\t});\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.appStore.reset();\r\n\t\tthis.persistStore.reset();\r\n\t}\r\n\r\n\tgetLayoutForComponent(componentName: ComponentEnum): ComponentLayoutStyleEnum {\r\n\t\tconst { componentLayout } = this.persistQuery.getValue();\r\n\t\tconst componentLayoutMap = new Map(componentLayout);\r\n\t\treturn componentLayoutMap.get(componentName) as ComponentLayoutStyleEnum;\r\n\t}\r\n\r\n\tsetLayoutForComponent(componentName: ComponentEnum, style: ComponentLayoutStyleEnum) {\r\n\t\tconst { componentLayout } = this.persistQuery.getValue();\r\n\t\tconst componentLayoutMap = new Map(componentLayout);\r\n\t\tcomponentLayoutMap.set(componentName, style);\r\n\t\tconst componentLayoutArray = Array.from(componentLayoutMap.entries()) as any;\r\n\t\tthis.persistStore.update({\r\n\t\t\tcomponentLayout: componentLayoutArray\r\n\t\t});\r\n\t}\r\n\r\n\tset componentLayout(componentLayout: any[]) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tcomponentLayout\r\n\t\t});\r\n\t}\r\n\r\n\tget currentTheme(): string | null {\r\n\t\tconst { themeName } = this.persistQuery.getValue();\r\n\t\treturn themeName;\r\n\t}\r\n\r\n\tset currentTheme(name: string) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tthemeName: name\r\n\t\t});\r\n\t}\r\n\r\n\tget windows(): Partial<GuiDrag>[] {\r\n\t\tconst { windows } = this.persistQuery.getValue();\r\n\t\treturn windows as Partial<GuiDrag>[];\r\n\t}\r\n\r\n\tset windows(values: Partial<GuiDrag>[]) {\r\n\t\tthis.persistStore.update({\r\n\t\t\twindows: values\r\n\t\t});\r\n\t}\r\n\r\n\tget widgets(): Partial<GuiDrag>[] {\r\n\t\tconst { widgets } = this.persistQuery.getValue();\r\n\t\treturn widgets as Partial<GuiDrag>[];\r\n\t}\r\n\r\n\tset widgets(values: Partial<GuiDrag>[]) {\r\n\t\tthis.persistStore.update({\r\n\t\t\twidgets: values\r\n\t\t});\r\n\t}\r\n\r\n\tget tenantId(): string | null {\r\n\t\tconst { tenantId } = this.persistQuery.getValue();\r\n\t\treturn tenantId;\r\n\t}\r\n\r\n\tset tenantId(value: string) {\r\n\t\tthis.persistStore.update({\r\n\t\t\ttenantId: value\r\n\t\t});\r\n\t}\r\n}\r\n"]}