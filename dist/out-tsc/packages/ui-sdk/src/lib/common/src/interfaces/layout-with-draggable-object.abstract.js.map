{"version":3,"file":"layout-with-draggable-object.abstract.js","sourceRoot":"","sources":["../../../../../../../../../packages/ui-sdk/src/lib/common/src/interfaces/layout-with-draggable-object.abstract.ts"],"names":[],"mappings":";;;AAGA,mDAAgD;AAEhD,MAAsB,yBAAyB;IAA/C;QACW,oBAAe,GAA+B,EAAE,CAAC;QACnD,WAAM,GAAiB,IAAI,iBAAO,EAAO,CAAC;IASnD,CAAC;IARU,IAAI,CAAC,KAA0B,IAAS,CAAC;IACzC,WAAW,CAAC,KAAa;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,IAAc,KAAK;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IACnC,CAAC;CACD;AAXD,8DAWC","sourcesContent":["import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { TemplateRef } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\n\r\nexport abstract class LayoutWithDraggableObject {\r\n\tprotected draggableObject: TemplateRef<HTMLElement>[] = [];\r\n\tprivate _event: Subject<any> = new Subject<any>();\r\n\tprotected drop(event: CdkDragDrop<number>): void {}\r\n\tprotected onDragEnded(event: Object) {\r\n\t\tthis._event.next(event);\r\n\t}\r\n\r\n\tprotected get event(): Observable<any> {\r\n\t\treturn this._event.asObservable();\r\n\t}\r\n}\r\n"]}