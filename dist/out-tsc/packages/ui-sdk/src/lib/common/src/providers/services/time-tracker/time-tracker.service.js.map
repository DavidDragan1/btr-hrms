{"version":3,"file":"time-tracker.service.js","sourceRoot":"","sources":["../../../../../../../../../../../packages/ui-sdk/src/lib/common/src/providers/services/time-tracker/time-tracker.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { firstValueFrom, Observable, timer } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport moment from 'moment';\r\nimport { StoreConfig, Store, Query } from '@datorama/akita';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { environment } from '@gauzy/ui-config';\r\nimport {\r\n\tITimeLog,\r\n\tITimerToggleInput,\r\n\tTimeLogType,\r\n\tITimerStatus,\r\n\tIOrganization,\r\n\tTimerState,\r\n\tTimeLogSourceEnum,\r\n\tITimerStatusInput\r\n} from '@gauzy/contracts';\r\nimport { Store as AppStore } from '../store/store.service';\r\nimport { ITimerSynced } from './interfaces';\r\nimport { toLocal, toParams, toUTC } from '../../../utils/shared-utils';\r\nimport { API_PREFIX, BACKGROUND_SYNC_INTERVAL } from '../../../constants';\r\n\r\nexport function createInitialTimerState(): TimerState {\r\n\tlet timerConfig = {\r\n\t\tisBillable: true,\r\n\t\torganizationId: null,\r\n\t\ttenantId: null,\r\n\t\tprojectId: null,\r\n\t\ttaskId: null,\r\n\t\torganizationContactId: null,\r\n\t\tdescription: '',\r\n\t\tlogType: TimeLogType.TRACKED,\r\n\t\tsource: TimeLogSourceEnum.WEB_TIMER,\r\n\t\ttags: [],\r\n\t\tstartedAt: null,\r\n\t\tstoppedAt: null\r\n\t};\r\n\ttry {\r\n\t\tconst config = localStorage.getItem('timerConfig');\r\n\t\tif (config) {\r\n\t\t\ttimerConfig = {\r\n\t\t\t\t...timerConfig,\r\n\t\t\t\t...JSON.parse(config)\r\n\t\t\t};\r\n\t\t}\r\n\t} catch (error) {}\r\n\treturn {\r\n\t\tshowTimerWindow: false,\r\n\t\tduration: 0,\r\n\t\tcurrentSessionDuration: 0,\r\n\t\trunning: false,\r\n\t\tposition: { x: 0, y: 0 },\r\n\t\ttimerConfig\r\n\t} as TimerState;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'timer' })\r\nexport class TimerStore extends Store<TimerState> {\r\n\tconstructor() {\r\n\t\tsuper(createInitialTimerState());\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TimerQuery extends Query<TimerState> {\r\n\tconstructor(protected readonly store: TimerStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\n@UntilDestroy()\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class TimeTrackerService implements OnDestroy {\r\n\tinterval: any;\r\n\tshowTimerWindow$ = this.timerQuery.select((state) => state.showTimerWindow);\r\n\tduration$ = this.timerQuery.select((state) => state.duration);\r\n\tcurrentSessionDuration$ = this.timerQuery.select((state) => state.currentSessionDuration);\r\n\t$running = this.timerQuery.select((state) => state.running);\r\n\t$timerConfig = this.timerQuery.select((state) => state.timerConfig);\r\n\torganization: IOrganization;\r\n\r\n\tprivate _trackType$: BehaviorSubject<string> = new BehaviorSubject(this.timeType);\r\n\tpublic trackType$: Observable<string> = this._trackType$.asObservable();\r\n\tprivate _worker: Worker;\r\n\tprivate _timerSynced: ITimerSynced;\r\n\tpublic timer$: Observable<number> = timer(BACKGROUND_SYNC_INTERVAL);\r\n\r\n\tconstructor(\r\n\t\tprotected readonly timerStore: TimerStore,\r\n\t\tprotected readonly timerQuery: TimerQuery,\r\n\t\tprotected readonly store: AppStore,\r\n\t\tprivate readonly http: HttpClient\r\n\t) {\r\n\t\tthis._runWorker();\r\n\t\tthis.store.selectedOrganization$\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((organization: IOrganization) => !!organization),\r\n\t\t\t\ttap((organization: IOrganization) => (this.organization = organization)),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe((organization: IOrganization) => {\r\n\t\t\t\tthis.timerStore.update({\r\n\t\t\t\t\ttimerConfig: {\r\n\t\t\t\t\t\t...this.timerConfig,\r\n\t\t\t\t\t\torganizationId: organization.id,\r\n\t\t\t\t\t\ttenantId: organization.tenantId\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t * Check current timer status for employee only\r\n\t */\r\n\tpublic async checkTimerStatus(payload: ITimerStatusInput) {\r\n\t\tdelete payload.source;\r\n\t\tawait this.getTimerStatus(payload)\r\n\t\t\t.then((status: ITimerStatus) => {\r\n\t\t\t\tthis.duration = status.duration;\r\n\t\t\t\tif (status.lastLog && status.lastLog.isRunning) {\r\n\t\t\t\t\tthis.currentSessionDuration = moment().diff(toLocal(status.lastLog.startedAt), 'seconds');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentSessionDuration = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// On refresh/delete TimeLog, we need to clear interval to prevent duplicate interval\r\n\t\t\t\tthis.turnOffTimer();\r\n\t\t\t\tif (status.running) {\r\n\t\t\t\t\tthis.turnOnTimer();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(() => {});\r\n\t}\r\n\r\n\tpublic get showTimerWindow(): boolean {\r\n\t\tconst { showTimerWindow } = this.timerQuery.getValue();\r\n\t\treturn showTimerWindow;\r\n\t}\r\n\tpublic set showTimerWindow(value: boolean) {\r\n\t\tthis.timerStore.update({\r\n\t\t\tshowTimerWindow: value\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get duration(): number {\r\n\t\tconst { duration } = this.timerQuery.getValue();\r\n\t\treturn duration;\r\n\t}\r\n\tpublic set duration(value: number) {\r\n\t\tthis.timerStore.update({\r\n\t\t\tduration: value\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get currentSessionDuration(): number {\r\n\t\tconst { currentSessionDuration } = this.timerQuery.getValue();\r\n\t\treturn currentSessionDuration;\r\n\t}\r\n\tpublic set currentSessionDuration(value: number) {\r\n\t\tthis.timerStore.update({\r\n\t\t\tcurrentSessionDuration: value\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get timerConfig(): ITimerToggleInput {\r\n\t\tconst { timerConfig } = this.timerQuery.getValue();\r\n\t\treturn timerConfig;\r\n\t}\r\n\tpublic set timerConfig(value: ITimerToggleInput) {\r\n\t\tthis.timerStore.update({\r\n\t\t\ttimerConfig: value\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get running(): boolean {\r\n\t\tconst { running } = this.timerQuery.getValue();\r\n\t\treturn running;\r\n\t}\r\n\tpublic set running(value: boolean) {\r\n\t\tthis.timerStore.update({\r\n\t\t\trunning: value\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get position() {\r\n\t\tconst { position } = this.timerQuery.getValue();\r\n\t\treturn position;\r\n\t}\r\n\tpublic set position(offSet: any) {\r\n\t\tthis.timerStore.update({\r\n\t\t\tposition: offSet\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the timer status using the provided parameters.\r\n\t * @param params The input parameters for retrieving timer status.\r\n\t * @returns A promise that resolves to the timer status.\r\n\t */\r\n\tgetTimerStatus(params: ITimerStatusInput): Promise<ITimerStatus> {\r\n\t\tconst todayStart = toUTC(moment().startOf('day')).format('YYYY-MM-DD HH:mm:ss');\r\n\t\tconst todayEnd = toUTC(moment().endOf('day')).format('YYYY-MM-DD HH:mm:ss');\r\n\t\treturn firstValueFrom(\r\n\t\t\tthis.http.get<ITimerStatus>(`${API_PREFIX}/timesheet/timer/status`, {\r\n\t\t\t\tparams: toParams({\r\n\t\t\t\t\t...params,\r\n\t\t\t\t\ttodayStart,\r\n\t\t\t\t\ttodayEnd\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t// toggleTimer(request: ITimerToggleInput): Promise<ITimeLog> {\r\n\t// \treturn firstValueFrom(\r\n\t// \t\tthis.http.post<ITimeLog>(`${API_PREFIX}/timesheet/timer/toggle`, request)\r\n\t// \t);\r\n\t// }\r\n\r\n\topenAndStartTimer() {\r\n\t\tthis.showTimerWindow = true;\r\n\t\tif (!this.running) {\r\n\t\t\tif (this.canStartTimer()) {\r\n\t\t\t\tthis.currentSessionDuration = 0;\r\n\t\t\t\tthis.toggle();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(): Promise<ITimeLog> {\r\n\t\tif (this.running) {\r\n\t\t\tthis.turnOffTimer();\r\n\t\t\tdelete this.timerConfig.source;\r\n\t\t\tthis.timerConfig = {\r\n\t\t\t\t...this.timerConfig,\r\n\t\t\t\tstoppedAt: toUTC(moment()).toDate()\r\n\t\t\t};\r\n\t\t\tthis.currentSessionDuration = 0;\r\n\t\t\treturn firstValueFrom(this.http.post<ITimeLog>(`${API_PREFIX}/timesheet/timer/stop`, this.timerConfig));\r\n\t\t} else {\r\n\t\t\tthis.currentSessionDuration = 0;\r\n\t\t\tthis.turnOnTimer();\r\n\t\t\tthis.timerConfig = {\r\n\t\t\t\t...this.timerConfig,\r\n\t\t\t\tstartedAt: toUTC(moment()).toDate(),\r\n\t\t\t\tsource: TimeLogSourceEnum.WEB_TIMER\r\n\t\t\t};\r\n\t\t\treturn firstValueFrom(this.http.post<ITimeLog>(`${API_PREFIX}/timesheet/timer/start`, this.timerConfig));\r\n\t\t}\r\n\t}\r\n\r\n\tturnOnTimer() {\r\n\t\tthis.running = true;\r\n\t\t// post state of timer to worker on start timer\r\n\t\tthis._worker.postMessage({\r\n\t\t\tisRunning: this.running,\r\n\t\t\tsession: this.currentSessionDuration,\r\n\t\t\tduration: this.duration\r\n\t\t});\r\n\t}\r\n\r\n\tturnOffTimer() {\r\n\t\tthis.running = false;\r\n\t\t// post running state to worker on turning off\r\n\t\tthis._worker.postMessage({\r\n\t\t\tisRunning: this.running\r\n\t\t});\r\n\t}\r\n\r\n\tcanStartTimer() {\r\n\t\tlet isValid = true;\r\n\t\tif (this.organization) {\r\n\t\t\tif (this.organization.requireProject && !this.timerConfig.projectId) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\t\t\tif (this.organization.requireTask && !this.timerConfig.taskId) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\t\t\tif (this.organization.requireDescription && !this.timerConfig.description) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tsetTimeLogType(timeType: string) {\r\n\t\tthis._trackType$.next(timeType);\r\n\t\tthis.timeType = timeType === TimeLogType.TRACKED ? TimeLogType.TRACKED : TimeLogType.MANUAL;\r\n\t}\r\n\r\n\tpublic get timeType(): TimeLogType {\r\n\t\treturn this.timerConfig.logType;\r\n\t}\r\n\tpublic set timeType(value: TimeLogType) {\r\n\t\tthis.timerConfig = {\r\n\t\t\t...this.timerConfig,\r\n\t\t\tlogType: value\r\n\t\t};\r\n\t}\r\n\r\n\t/*\r\n\t * Clear time tracker local store\r\n\t */\r\n\tclearTimeTracker() {\r\n\t\tthis.timerStore.reset();\r\n\t}\r\n\r\n\tprivate _runWorker(): void {\r\n\t\tif (typeof Worker !== 'undefined') {\r\n\t\t\ttry {\r\n\t\t\t\tthis._worker = new Worker(new URL(environment.CLIENT_BASE_URL + '/assets/workers/time-tracker.js'), {\r\n\t\t\t\t\ttype: 'module'\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// retrieve message post from time tracker worker\r\n\t\t\t\tthis._worker.onmessage = ({ data }) => {\r\n\t\t\t\t\tthis.currentSessionDuration = data.session;\r\n\t\t\t\t\tthis.duration = data.todayWorked;\r\n\t\t\t\t};\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log('Invalid Time Tracker worker configuration', err.message);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Web worker does not supported on your browser');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic remoteToggle(): ITimeLog {\r\n\t\tif (this.running) {\r\n\t\t\tthis.turnOffTimer();\r\n\t\t\tthis.timerConfig = {\r\n\t\t\t\t...this.timerConfig,\r\n\t\t\t\tsource: this.timerSynced.source,\r\n\t\t\t\tstartedAt: this.timerSynced.startedAt,\r\n\t\t\t\tstoppedAt: this.timerSynced.stoppedAt\r\n\t\t\t};\r\n\t\t\tthis.currentSessionDuration = 0;\r\n\t\t\treturn this.timerSynced.lastLog;\r\n\t\t} else {\r\n\t\t\tthis.duration = this.timerSynced.lastLog.duration;\r\n\t\t\tthis.timerConfig = {\r\n\t\t\t\t...this.timerConfig,\r\n\t\t\t\torganizationId: this.timerSynced.lastLog.organizationId,\r\n\t\t\t\ttenantId: this.timerSynced.lastLog.tenantId,\r\n\t\t\t\tprojectId: this.timerSynced.lastLog.projectId,\r\n\t\t\t\ttaskId: this.timerSynced.lastLog.taskId,\r\n\t\t\t\torganizationContactId: this.timerSynced.lastLog.organizationContactId,\r\n\t\t\t\tdescription: this.timerSynced.lastLog.description,\r\n\t\t\t\tsource: this.timerSynced.source,\r\n\t\t\t\ttags: this.timerSynced.lastLog.tags,\r\n\t\t\t\tstartedAt: this.timerSynced.startedAt,\r\n\t\t\t\tstoppedAt: this.timerSynced.stoppedAt\r\n\t\t\t};\r\n\t\t\tthis.turnOnTimer();\r\n\t\t\treturn this.timerSynced.lastLog;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get timerSynced(): ITimerSynced {\r\n\t\treturn this._timerSynced;\r\n\t}\r\n\r\n\tpublic set timerSynced(value: ITimerSynced) {\r\n\t\tthis._timerSynced = value;\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis._worker.terminate();\r\n\t}\r\n}\r\n"]}