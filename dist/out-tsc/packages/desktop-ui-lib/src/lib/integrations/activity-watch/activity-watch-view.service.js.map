{"version":3,"file":"activity-watch-view.service.js","sourceRoot":"","sources":["../../../../../../../../packages/desktop-ui-lib/src/lib/integrations/activity-watch/activity-watch-view.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, filter, tap } from 'rxjs';\r\nimport { ActivityWatchEventService } from './activity-watch-event.service';\r\nimport { GAUZY_ENV } from '../../constants';\r\nimport { ActivityWatchElectronService } from './activity-watch-electron.service';\r\nimport { distinctUntilChange } from '@gauzy/ui-sdk/common';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\n@UntilDestroy({ checkProperties: true })\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ActivityWatchViewService {\r\n\tprivate readonly _isTimerRunning$: BehaviorSubject<boolean>;\r\n\tprivate readonly _aw$: BehaviorSubject<boolean>;\r\n\tprivate readonly _icon$: BehaviorSubject<string>;\r\n\tprivate readonly _status$: BehaviorSubject<string>;\r\n\tprivate readonly _log$: BehaviorSubject<string>;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly activityWatchElectronService: ActivityWatchElectronService,\r\n\t\tprivate readonly activityWatchEventService: ActivityWatchEventService,\r\n\t\t@Inject(GAUZY_ENV)\r\n\t\tprivate readonly environment: any\r\n\t) {\r\n\t\tthis._isTimerRunning$ = new BehaviorSubject(false);\r\n\t\tthis._aw$ = new BehaviorSubject(false);\r\n\t\tthis._icon$ = new BehaviorSubject('close-square-outline');\r\n\t\tthis._status$ = new BehaviorSubject('success');\r\n\t\tthis._log$ = new BehaviorSubject(null);\r\n\t\tthis._status$\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((status) => !!status),\r\n\t\t\t\ttap((status) => {\r\n\t\t\t\t\tthis.activityWatchElectronService.send('aw_status', status === 'success');\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t\tthis.aw$\r\n\t\t\t.pipe(\r\n\t\t\t\tdistinctUntilChange(),\r\n\t\t\t\ttap(async (isChecked: boolean) => {\r\n\t\t\t\t\tawait this.pingActivityWatchServer();\r\n\t\t\t\t\tthis.activityWatchElectronService.send('set_tp_aw', {\r\n\t\t\t\t\t\thost: this.environment?.AWHost,\r\n\t\t\t\t\t\tisAw: isChecked\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\tpublic get isTimerRunning$(): BehaviorSubject<boolean> {\r\n\t\treturn this._isTimerRunning$;\r\n\t}\r\n\r\n\tpublic get aw$(): BehaviorSubject<boolean> {\r\n\t\treturn this._aw$;\r\n\t}\r\n\r\n\tpublic get aw(): boolean {\r\n\t\treturn this._aw$.getValue();\r\n\t}\r\n\r\n\tpublic get icon$(): BehaviorSubject<string> {\r\n\t\treturn this._icon$;\r\n\t}\r\n\r\n\tpublic get status$(): BehaviorSubject<string> {\r\n\t\treturn this._status$;\r\n\t}\r\n\r\n\tpublic get log$(): BehaviorSubject<string> {\r\n\t\treturn this._log$;\r\n\t}\r\n\r\n\tpublic async pingActivityWatchServer(): Promise<void> {\r\n\t\tif (!this.aw) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst isAlive = await this.activityWatchEventService.ping();\r\n\t\tif (isAlive) {\r\n\t\t\tthis.icon$.next('checkmark-square-outline');\r\n\t\t\tthis.status$.next('success');\r\n\t\t\tthis.log$.next('TIMER_TRACKER.AW_CONNECTED');\r\n\t\t} else {\r\n\t\t\tthis.icon$.next('close-square-outline');\r\n\t\t\tthis.status$.next('danger');\r\n\t\t\tthis.log$.next('TIMER_TRACKER.AW_DISCONNECTED');\r\n\t\t}\r\n\t}\r\n}\r\n"]}