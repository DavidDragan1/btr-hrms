{"version":3,"file":"activity-watch-electron.service.js","sourceRoot":"","sources":["../../../../../../../../packages/desktop-ui-lib/src/lib/integrations/activity-watch/activity-watch-electron.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { ActivityWatchEventService, ElectronService } from '@gauzy/desktop-ui-lib';\r\nimport { Observable, mergeMap, tap } from 'rxjs';\r\nimport {\r\n\tIActivityWatchEventResult,\r\n\tIActivityWatchCollectEventData,\r\n\tIActivityWatchEventCollection,\r\n\tActivityWatchEventType,\r\n\tActivityWatchCollectEvent\r\n} from '@gauzy/contracts';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\ninterface IActivity {\r\n\ttype: ActivityWatchEventType;\r\n\tipcEvent: string;\r\n\tcollectEventFn: (arg: IActivityWatchCollectEventData) => Promise<IActivityWatchEventCollection>;\r\n\tsendEventFn: (arg: IActivityWatchEventResult) => void;\r\n}\r\n\r\n@UntilDestroy({ checkProperties: true })\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ActivityWatchElectronService {\r\n\tprivate readonly activities: IActivity[];\r\n\tprivate isSetupLocked: boolean;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly electronService: ElectronService,\r\n\t\tprivate readonly activityWatchEventService: ActivityWatchEventService,\r\n\t\tprivate readonly ngZone: NgZone\r\n\t) {\r\n\t\tthis.isSetupLocked = false;\r\n\t\tthis.activities = [\r\n\t\t\t{\r\n\t\t\t\ttype: ActivityWatchEventType.APP,\r\n\t\t\t\tipcEvent: ActivityWatchCollectEvent.WINDOW,\r\n\t\t\t\tcollectEventFn: async (arg) => this.activityWatchEventService.collectWindowsEvents(arg),\r\n\t\t\t\tsendEventFn: (result) => this.send('push_window_activity', result)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: ActivityWatchEventType.AFK,\r\n\t\t\t\tipcEvent: ActivityWatchCollectEvent.AFK,\r\n\t\t\t\tcollectEventFn: async (arg) => this.activityWatchEventService.collectAfkEvents(arg),\r\n\t\t\t\tsendEventFn: (result) => this.send('push_afk_activity', result)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: ActivityWatchEventType.URL,\r\n\t\t\t\tipcEvent: ActivityWatchCollectEvent.CHROME,\r\n\t\t\t\tcollectEventFn: async (arg) => this.activityWatchEventService.collectChromeEvents(arg),\r\n\t\t\t\tsendEventFn: (result) => this.send('push_chrome_activity', result)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: ActivityWatchEventType.URL,\r\n\t\t\t\tipcEvent: ActivityWatchCollectEvent.FIREFOX,\r\n\t\t\t\tcollectEventFn: async (arg) => this.activityWatchEventService.collectFirefoxEvents(arg),\r\n\t\t\t\tsendEventFn: (result) => this.send('push_firefox_activity', result)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: ActivityWatchEventType.URL,\r\n\t\t\t\tipcEvent: ActivityWatchCollectEvent.EDGE,\r\n\t\t\t\tcollectEventFn: async (arg) => this.activityWatchEventService.collectEdgeEvents(arg),\r\n\t\t\t\tsendEventFn: (result) => this.send('push_edge_activity', result)\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tpublic setupActivitiesCollection(): void {\r\n\t\tif (this.isSetupLocked) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isSetupLocked = true;\r\n\t\tthis.activities.forEach((activity) => {\r\n\t\t\tthis.collectActivity(activity)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\ttap((result) => {\r\n\t\t\t\t\t\tthis.ngZone.run(() => {\r\n\t\t\t\t\t\t\tactivity.sendEventFn(result);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tuntilDestroyed(this)\r\n\t\t\t\t)\r\n\t\t\t\t.subscribe();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic send<T>(channel: string, message?: T): void {\r\n\t\tthis.electronService.ipcRenderer.send(channel, message);\r\n\t}\r\n\r\n\tprivate fromIpcEvent<T>(ipcEvent: string): Observable<T> {\r\n\t\treturn new Observable((observer) => {\r\n\t\t\tthis.electronService.ipcRenderer.on(ipcEvent, (_, arg: T) => {\r\n\t\t\t\tobserver.next(arg);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate collectActivity(activity: IActivity): Observable<IActivityWatchEventResult> {\r\n\t\treturn this.fromIpcEvent<IActivityWatchCollectEventData>(activity.ipcEvent).pipe(\r\n\t\t\tmergeMap(async (arg) => {\r\n\t\t\t\tconst event = await activity.collectEventFn(arg);\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttimerId: arg.timerId,\r\n\t\t\t\t\ttype: activity.type,\r\n\t\t\t\t\tevent\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t\tuntilDestroyed(this)\r\n\t\t);\r\n\t}\r\n}\r\n"]}