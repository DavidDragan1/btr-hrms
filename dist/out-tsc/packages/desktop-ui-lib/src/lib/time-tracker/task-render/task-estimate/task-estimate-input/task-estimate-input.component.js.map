{"version":3,"file":"task-estimate-input.component.js","sourceRoot":"","sources":["../../../../../../../../../../packages/desktop-ui-lib/src/lib/time-tracker/task-render/task-estimate/task-estimate-input/task-estimate-input.component.ts"],"names":[],"mappings":";;;;AAAA,wCAOuB;AACvB,0CAAkF;AAClF,iCAAiC;AACjC,+BAAuC;AACvC,yDAAqE;AAe9D,IAAM,0BAA0B,wCAAhC,MAAM,0BAA0B;IAQtC,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAY,EAAU,CAAC;IAC1C,CAAC;IAEM,QAAQ;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,OAAO,EAAE;gBACR,EAAE;gBACF,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC3D;YACD,QAAQ,EAAE;gBACT,EAAE;gBACF,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC3D;YACD,SAAS,EAAE;gBACV,EAAE;gBACF,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC3D;YACD,UAAU,EAAE;gBACX,EAAE;gBACF,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC3D;SACD,CAAC,CAAC;IACJ,CAAC;IAEM,eAAe;QACrB,IAAI,CAAC,SAAS;aACZ,IAAI,CACJ,IAAA,UAAG,EAAC,CAAC,QAAgB,EAAE,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,EACF,IAAA,8BAAc,EAAC,IAAI,CAAC,CACpB;aACA,SAAS,EAAE,CAAC;IACf,CAAC;IAEM,QAAQ;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC;YACvC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC;YACzC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC;YAC3C,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC;SAC7C,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACrE,CAAC;IAEO,OAAO,CAAC,QAAgB;QAC/B,MAAM,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;QACzD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;QAC7D,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;IACrD,CAAC;IAEO,OAAO,CAAC,aAA6B;QAC5C,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,aAAa,CAAC;QACnE,MAAM,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC;YACtC,KAAK,EAAE,OAAO,GAAG,EAAE,GAAG,QAAQ;YAC9B,OAAO,EAAE,SAAS,GAAG,EAAE,GAAG,UAAU;SACpC,CAAC,CAAC;QACH,OAAO,cAAc,CAAC,SAAS,EAAE,CAAC;IACnC,CAAC;CACD,CAAA;AAtEO;IADN,IAAA,aAAM,GAAE;sCACM,mBAAY;0DAAS;AAG7B;IADN,IAAA,YAAK,GAAE;sCACU,iBAAU;6DAAS;qCALzB,0BAA0B;IANtC,IAAA,4BAAY,EAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;IACvC,IAAA,gBAAS,EAAC;QACV,QAAQ,EAAE,2BAA2B;QACrC,WAAW,EAAE,sCAAsC;QACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;KACnD,CAAC;6CASgC,0BAAkB;GARvC,0BAA0B,CAwEtC","sourcesContent":["import {\r\n\tAfterViewInit,\r\n\tComponent,\r\n\tEventEmitter,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput,\r\n} from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\nexport interface IEstimateInput {\r\n\thourTen: number;\r\n\thourUnit: number;\r\n\tminuteTen: number;\r\n\tminuteUnit: number;\r\n}\r\n\r\n@UntilDestroy({ checkProperties: true })\r\n@Component({\r\n\tselector: 'gauzy-task-estimate-input',\r\n\ttemplateUrl: './task-estimate-input.component.html',\r\n\tstyleUrls: ['./task-estimate-input.component.scss'],\r\n})\r\nexport class TaskEstimateInputComponent implements OnInit, AfterViewInit {\r\n\t@Output()\r\n\tpublic submit: EventEmitter<number>;\r\n\tpublic timeForm: UntypedFormGroup;\r\n\t@Input()\r\n\tpublic estimate$: Observable<number>;\r\n\tprivate estimate: number;\r\n\r\n\tconstructor(private formBuilder: UntypedFormBuilder) {\r\n\t\tthis.submit = new EventEmitter<number>();\r\n\t}\r\n\r\n\tpublic ngOnInit() {\r\n\t\tthis.timeForm = this.formBuilder.group({\r\n\t\t\thourTen: [\r\n\t\t\t\t'',\r\n\t\t\t\t[Validators.required, Validators.min(0), Validators.max(9)],\r\n\t\t\t],\r\n\t\t\thourUnit: [\r\n\t\t\t\t'',\r\n\t\t\t\t[Validators.required, Validators.min(0), Validators.max(9)],\r\n\t\t\t],\r\n\t\t\tminuteTen: [\r\n\t\t\t\t'',\r\n\t\t\t\t[Validators.required, Validators.min(0), Validators.max(5)],\r\n\t\t\t],\r\n\t\t\tminuteUnit: [\r\n\t\t\t\t'',\r\n\t\t\t\t[Validators.required, Validators.min(0), Validators.max(9)],\r\n\t\t\t],\r\n\t\t});\r\n\t}\r\n\r\n\tpublic ngAfterViewInit(): void {\r\n\t\tthis.estimate$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((estimate: number) => {\r\n\t\t\t\t\tthis.estimate = estimate;\r\n\t\t\t\t\tthis.timeForm.patchValue(this.convert(estimate));\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\tpublic onSubmit(): void {\r\n\t\tconst estimate = this.reverse({\r\n\t\t\thourTen: this.timeForm.value['hourTen'],\r\n\t\t\thourUnit: this.timeForm.value['hourUnit'],\r\n\t\t\tminuteTen: this.timeForm.value['minuteTen'],\r\n\t\t\tminuteUnit: this.timeForm.value['minuteUnit'],\r\n\t\t});\r\n\t\tthis.submit.emit(estimate === this.estimate ? undefined : estimate);\r\n\t}\r\n\r\n\tprivate convert(estimate: number): IEstimateInput {\r\n\t\tconst durationMoment = moment.duration(estimate, 'seconds');\r\n\t\tconst hourTen = Math.floor(durationMoment.asHours() / 10);\r\n\t\tconst hourUnit = Math.floor(durationMoment.hours() % 10);\r\n\t\tconst minuteTen = Math.floor(durationMoment.minutes() / 10);\r\n\t\tconst minuteUnit = Math.floor(durationMoment.minutes() % 10);\r\n\t\treturn { hourTen, hourUnit, minuteTen, minuteUnit };\r\n\t}\r\n\r\n\tprivate reverse(estimateInput: IEstimateInput): number {\r\n\t\tconst { hourTen, hourUnit, minuteTen, minuteUnit } = estimateInput;\r\n\t\tconst estimateMoment = moment.duration({\r\n\t\t\thours: hourTen * 10 + hourUnit,\r\n\t\t\tminutes: minuteTen * 10 + minuteUnit,\r\n\t\t});\r\n\t\treturn estimateMoment.asSeconds();\r\n\t}\r\n}\r\n"]}