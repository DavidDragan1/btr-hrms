{"version":3,"file":"task-detail.component.js","sourceRoot":"","sources":["../../../../../../../../../packages/desktop-ui-lib/src/lib/time-tracker/task-render/task-detail/task-detail.component.ts"],"names":[],"mappings":";;;;AAAA,wCAAuE;AAGvE,8CAAuD;AACvD,0CAA6C;AAOtC,IAAM,mBAAmB,iCAAzB,MAAM,mBAAmB;IAO/B,YAAoB,iBAAmC,EAAU,UAA4C;QAAzF,sBAAiB,GAAjB,iBAAiB,CAAkB;QAAU,eAAU,GAAV,UAAU,CAAkC;QAC5G,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAY,EAAW,CAAC;IAC3C,CAAC;IAED,IAAW,KAAK;QACf,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;IACzB,CAAC;IAED,IAAW,MAAM;QAChB,OAAO,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;IAC9B,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;IACxB,CAAC;IAED,IAAW,WAAW;QACrB,OAAO,CACN,IAAI,CAAC,IAAI,EAAE,WAAW;YACtB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAC3D,CAAC;IACH,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;IAC5B,CAAC;IAED,IAAW,QAAQ;QAClB,OAAO,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;IAChC,CAAC;IAED,IAAW,MAAM;QAChB,OAAO,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;IAC9B,CAAC;IAEM,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAEM,OAAO;QACb,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CACD,CAAA;AAhDO;IADN,IAAA,YAAK,GAAE;;iDACiB;AAGlB;IADN,IAAA,aAAM,GAAE;sCACM,mBAAY;mDAAU;8BALzB,mBAAmB;IAL/B,IAAA,gBAAS,EAAC;QACV,QAAQ,EAAE,mBAAmB;QAC7B,WAAW,EAAE,8BAA8B;QAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;KAC3C,CAAC;6CAQsC,uBAAgB,EAAsB,mBAAW;GAP5E,mBAAmB,CAkD/B","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ITaskRender } from '../task-render.component';\r\nimport { ITag, ITaskPriority, ITaskSize, ITaskStatus } from '@gauzy/contracts';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NbDialogRef } from '@nebular/theme';\r\n\r\n@Component({\r\n\tselector: 'gauzy-task-detail',\r\n\ttemplateUrl: './task-detail.component.html',\r\n\tstyleUrls: ['./task-detail.component.scss'],\r\n})\r\nexport class TaskDetailComponent {\r\n\t@Input()\r\n\tpublic task: ITaskRender;\r\n\r\n\t@Output()\r\n\tpublic hidden: EventEmitter<Boolean>;\r\n\r\n\tconstructor(private _translateService: TranslateService, private _dialogRef: NbDialogRef<TaskDetailComponent>) {\r\n\t\tthis.hidden = new EventEmitter<Boolean>();\r\n\t}\r\n\r\n\tpublic get title(): string {\r\n\t\treturn this.task?.title;\r\n\t}\r\n\r\n\tpublic get number(): string {\r\n\t\treturn this.task?.taskNumber;\r\n\t}\r\n\r\n\tpublic get tags(): ITag[] {\r\n\t\treturn this.task?.tags;\r\n\t}\r\n\r\n\tpublic get description(): string {\r\n\t\treturn (\r\n\t\t\tthis.task?.description ||\r\n\t\t\tthis._translateService.instant('GOALS_PAGE.NO_DESCRIPTION')\r\n\t\t);\r\n\t}\r\n\r\n\tpublic get size(): ITaskSize {\r\n\t\treturn this.task?.taskSize;\r\n\t}\r\n\r\n\tpublic get priority(): ITaskPriority {\r\n\t\treturn this.task?.taskPriority;\r\n\t}\r\n\r\n\tpublic get status(): ITaskStatus {\r\n\t\treturn this.task?.taskStatus;\r\n\t}\r\n\r\n\tpublic hide(): void {\r\n\t\tthis.hidden.emit(true);\r\n\t}\r\n\r\n\tpublic dismiss(): void {\r\n\t\tthis.hide();\r\n\t\tthis._dialogRef.close();\r\n\t}\r\n}\r\n"]}