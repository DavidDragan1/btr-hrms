{"version":3,"file":"task-badge-view.component.js","sourceRoot":"","sources":["../../../../../../../../../packages/desktop-ui-lib/src/lib/time-tracker/task-render/task-badge-view/task-badge-view.component.ts"],"names":[],"mappings":";;;;AAAA,wCAAiD;AAEjD,0CAA8C;AAC9C,0DAA0D;AAWnD,IAAM,sBAAsB,oCAA5B,MAAM,sBAAsB;IAClC,YAAoB,kBAAqC;QAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;QACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAID,IAAW,SAAS;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAED,IACW,SAAS,CAAC,KAAiB;QACrC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,IAAW,SAAS;QACnB,OAAO,oBAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,IAAW,eAAe;QACzB,OAAO,oBAAY,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED,IAAW,KAAK;QACf,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW;YAAE,OAAO,IAAI,CAAC;QAC9C,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;IAC5B,CAAC;IAED,IAAW,WAAW;QACrB,OAAO,oBAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;CACD,CAAA;AAzBA;IAAC,IAAA,YAAK,GAAE;;;uDAGP;iCAdW,sBAAsB;IALlC,IAAA,gBAAS,EAAC;QACV,QAAQ,EAAE,uBAAuB;QACjC,WAAW,EAAE,kCAAkC;QAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;KAC/C,CAAC;6CAEuC,kCAAiB;GAD7C,sBAAsB,CAoClC","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { ITaskPriority, ITaskSize, ITaskStatus } from '@gauzy/contracts';\r\nimport { ColorAdapter } from '../../../utils';\r\nimport { StatusIconService } from '@gauzy/desktop-ui-lib';\r\nimport { Observable } from 'rxjs';\r\nimport { SafeUrl } from '@angular/platform-browser';\r\n\r\nexport type ITaskBadge = ITaskStatus | ITaskSize | ITaskPriority;\r\n\r\n@Component({\r\n\tselector: 'gauzy-task-badge-view',\r\n\ttemplateUrl: './task-badge-view.component.html',\r\n\tstyleUrls: ['./task-badge-view.component.scss'],\r\n})\r\nexport class TaskBadgeViewComponent {\r\n\tconstructor(private _statusIconService: StatusIconService) {\r\n\t\tthis._taskBadge = null;\r\n\t}\r\n\r\n\tprivate _taskBadge: ITaskBadge;\r\n\r\n\tpublic get taskBadge(): ITaskBadge {\r\n\t\treturn this._taskBadge;\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic set taskBadge(value: ITaskBadge) {\r\n\t\tthis._taskBadge = value;\r\n\t}\r\n\r\n\tpublic get textColor() {\r\n\t\treturn ColorAdapter.contrast(this.taskBadge.color);\r\n\t}\r\n\r\n\tpublic get backgroundColor() {\r\n\t\treturn ColorAdapter.background(this.taskBadge.color);\r\n\t}\r\n\r\n\tpublic get icon$(): Observable<SafeUrl> {\r\n\t\tif (!this.taskBadge?.fullIconUrl) return null;\r\n\t\treturn this._statusIconService.load(this.taskBadge?.fullIconUrl);\r\n\t}\r\n\r\n\tpublic get name() {\r\n\t\treturn this.taskBadge.name;\r\n\t}\r\n\r\n\tpublic get imageFilter() {\r\n\t\treturn ColorAdapter.hexToHsl(this.taskBadge.color);\r\n\t}\r\n}\r\n"]}