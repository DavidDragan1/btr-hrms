{"version":3,"file":"humanize.pipe.js","sourceRoot":"","sources":["../../../../../../../../packages/desktop-ui-lib/src/lib/time-tracker/pipes/humanize.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2019-2023 Ever Co. LTD\r\n\r\n// Modified code from https://github.com/urish/ngx-moment.\r\n// Originally MIT Licensed\r\n// - see https://github.com/urish/ngx-moment/blob/master/LICENSE\r\n// - original code `ngx-moment (c) 2015, 2016 Uri Shaked`;\r\n\r\nimport { Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'humanize', pure: false })\r\nexport class HumanizePipe implements PipeTransform, OnDestroy {\r\n\tprivate _currentTimer: number | null;\r\n\tprivate _lastTime: Number;\r\n\tprivate _lastValue: moment.MomentInput;\r\n\tprivate _lastOmitSuffix: boolean;\r\n\tprivate _lastLocale?: string;\r\n\tprivate _lastText: string;\r\n\tprivate _formatFn: (m: moment.Moment) => string;\r\n\r\n\tconstructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) { }\r\n\r\n\tpublic format(m: moment.Moment) {\r\n\t\treturn m.from(moment(), this._lastOmitSuffix);\r\n\t}\r\n\r\n\tpublic transform(\r\n\t\tvalue: moment.MomentInput,\r\n\t\tomitSuffix?: boolean,\r\n\t\tformatFn?: (m: moment.Moment) => string,\r\n\t): string {\r\n\t\tif (this._hasChanged(value, omitSuffix)) {\r\n\t\t\tthis._lastTime = this._time(value);\r\n\t\t\tthis._lastValue = value;\r\n\t\t\tthis._lastOmitSuffix = omitSuffix;\r\n\t\t\tthis._lastLocale = this._locale(value);\r\n\t\t\tthis._formatFn = formatFn || this.format.bind(this);\r\n\t\t\tthis._removeTimer();\r\n\t\t\tthis._createTimer();\r\n\t\t\tthis._lastText = this._formatFn(moment(value));\r\n\t\t} else {\r\n\t\t\tthis._createTimer();\r\n\t\t}\r\n\r\n\t\treturn this._lastText;\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis._removeTimer();\r\n\t}\r\n\r\n\tprivate _createTimer() {\r\n\t\tif (this._currentTimer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst momentInstance = moment(this._lastValue);\r\n\t\tconst timeToUpdate = this._secondsUntilUpdate(momentInstance) * 1000;\r\n\r\n\t\tthis._currentTimer = this.ngZone.runOutsideAngular(() => {\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\treturn window.setTimeout(() => {\r\n\t\t\t\t\tthis._lastText = this._formatFn(moment(this._lastValue));\r\n\r\n\t\t\t\t\tthis._currentTimer = null;\r\n\t\t\t\t\tthis.ngZone.run(() => this.cdRef.markForCheck());\r\n\t\t\t\t}, timeToUpdate);\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _removeTimer() {\r\n\t\tif (this._currentTimer) {\r\n\t\t\twindow.clearTimeout(this._currentTimer);\r\n\t\t\tthis._currentTimer = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _secondsUntilUpdate(momentInstance: moment.Moment) {\r\n\t\tconst howOld = Math.abs(moment().diff(momentInstance, 'minute'));\r\n\t\tif (howOld < 1) {\r\n\t\t\treturn 1;\r\n\t\t} else if (howOld < 60) {\r\n\t\t\treturn 30;\r\n\t\t} else if (howOld < 180) {\r\n\t\t\treturn 300;\r\n\t\t} else {\r\n\t\t\treturn 3600;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _hasChanged(value: moment.MomentInput, omitSuffix?: boolean): boolean {\r\n\t\treturn (\r\n\t\t\tthis._time(value) !== this._lastTime ||\r\n\t\t\tthis._locale(value) !== this._lastLocale ||\r\n\t\t\tomitSuffix !== this._lastOmitSuffix\r\n\t\t);\r\n\t}\r\n\r\n\tprivate _time(value: moment.MomentInput): number {\r\n\t\tif (moment.isDate(value)) {\r\n\t\t\treturn value.getTime();\r\n\t\t} else if (moment.isMoment(value)) {\r\n\t\t\treturn value.valueOf();\r\n\t\t} else {\r\n\t\t\treturn moment(value).valueOf();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _locale(value: moment.MomentInput): string | null {\r\n\t\treturn moment.isMoment(value) ? value.locale() : moment.locale();\r\n\t}\r\n}\r\n"]}