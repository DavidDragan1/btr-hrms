{"version":3,"file":"time-tracker-status.service.js","sourceRoot":"","sources":["../../../../../../../../packages/desktop-ui-lib/src/lib/time-tracker/time-tracker-status/time-tracker-status.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { distinctUntilChange } from '@gauzy/ui-sdk/common';\r\nimport { ITimerStatus } from '@gauzy/contracts';\r\nimport {\r\n\tBehaviorSubject,\r\n\tcatchError,\r\n\tdefer,\r\n\tEMPTY,\r\n\tfrom,\r\n\tObservable,\r\n\tof,\r\n\trepeat,\r\n\tSubject,\r\n\tswitchMap,\r\n\ttap,\r\n\ttimer\r\n} from 'rxjs';\r\nimport { TimerIconFactory } from './factory';\r\nimport { ITimerIcon, IRemoteTimer } from './interfaces';\r\nimport { RemoteTimer } from './concretes';\r\nimport { TimeTrackerService } from '../time-tracker.service';\r\nimport { Store } from '../../services';\r\nimport { BACKGROUND_SYNC_INTERVAL } from '../../constants/app.constants';\r\n\r\n@UntilDestroy({ checkProperties: true })\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class TimeTrackerStatusService {\r\n\tprivate _icon$: BehaviorSubject<ITimerIcon> = new BehaviorSubject<ITimerIcon>(null);\r\n\tprivate _external$: Subject<IRemoteTimer> = new Subject<IRemoteTimer>();\r\n\tprivate _backgroundSync$: Observable<number> = timer(BACKGROUND_SYNC_INTERVAL);\r\n\tprivate _remoteTimer: IRemoteTimer;\r\n\tconstructor(private readonly _timeTrackerService: TimeTrackerService, private readonly _store: Store) {\r\n\t\tdefer(() =>\r\n\t\t\tof<boolean>(\r\n\t\t\t\t!!this._store.token && !this._store.isOffline && !!this._store.user.employeeId && !!this._store.tenantId\r\n\t\t\t).pipe(\r\n\t\t\t\tswitchMap((isEmployeeLoggedIn: boolean) =>\r\n\t\t\t\t\tisEmployeeLoggedIn\r\n\t\t\t\t\t\t? from(this.status()).pipe(\r\n\t\t\t\t\t\t\t\tcatchError(() => EMPTY),\r\n\t\t\t\t\t\t\t\tuntilDestroyed(this)\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: EMPTY\r\n\t\t\t\t),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t)\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((status: ITimerStatus) => {\r\n\t\t\t\t\tconst remoteTimer = new RemoteTimer({\r\n\t\t\t\t\t\t...status.lastLog,\r\n\t\t\t\t\t\tduration: status.duration\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._icon$.next(TimerIconFactory.create(remoteTimer.source));\r\n\t\t\t\t\tif (!remoteTimer.running || !remoteTimer.isExternalSource) this._icon$.next(null);\r\n\t\t\t\t\tthis._external$.next(remoteTimer);\r\n\t\t\t\t}),\r\n\t\t\t\trepeat({\r\n\t\t\t\t\tdelay: () => this._backgroundSync$\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t\tthis.external$\r\n\t\t\t.pipe(\r\n\t\t\t\tdistinctUntilChange(),\r\n\t\t\t\ttap((remoteTimer: IRemoteTimer) => (this.remoteTimer = remoteTimer)),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\tpublic get icon$(): Observable<any> {\r\n\t\treturn this._icon$.asObservable();\r\n\t}\r\n\r\n\tpublic get external$(): Observable<any> {\r\n\t\treturn this._external$.asObservable();\r\n\t}\r\n\r\n\tpublic status(): Promise<ITimerStatus> {\r\n\t\tif (!this._store?.tenantId || !this._store?.organizationId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst { tenantId, organizationId } = this._store;\r\n\t\treturn this._timeTrackerService.getTimerStatus({\r\n\t\t\ttenantId,\r\n\t\t\torganizationId\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get remoteTimer(): IRemoteTimer {\r\n\t\treturn this._remoteTimer;\r\n\t}\r\n\r\n\tpublic set remoteTimer(value: IRemoteTimer) {\r\n\t\tthis._remoteTimer = value;\r\n\t}\r\n}\r\n"]}