{"version":3,"file":"time-tracker.component.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/time-tracker/time-tracker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tAfterViewInit,\r\n\tComponent,\r\n\tElementRef,\r\n\tforwardRef,\r\n\tInject,\r\n\tNgZone,\r\n\tOnInit,\r\n\tTemplateRef,\r\n\tViewChild\r\n} from '@angular/core';\r\nimport { NbDialogRef, NbDialogService, NbIconLibraries, NbToastrService } from '@nebular/theme';\r\nimport { TimeTrackerService } from './time-tracker.service';\r\nimport * as moment from 'moment';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport { LocalDataSource, Angular2SmartTableComponent, Cell } from 'angular2-smart-table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport {\r\n\tasapScheduler,\r\n\tasyncScheduler,\r\n\tBehaviorSubject,\r\n\tconcatMap,\r\n\tdebounceTime,\r\n\tfilter,\r\n\tfirstValueFrom,\r\n\tfrom,\r\n\tlastValueFrom,\r\n\tObservable,\r\n\tof,\r\n\tSubject,\r\n\ttap\r\n} from 'rxjs';\r\nimport { ElectronService, LoggerService } from '../electron/services';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport 'moment-duration-format';\r\nimport {\r\n\tContactType,\r\n\tIOrganization,\r\n\tIOrganizationContact,\r\n\tIOrganizationTeam,\r\n\tITask,\r\n\tITasksStatistics,\r\n\tITaskStatus,\r\n\tITaskUpdateInput,\r\n\tLanguagesEnum,\r\n\tPermissionsEnum,\r\n\tProjectOwnerEnum,\r\n\tTaskStatusEnum\r\n} from '@gauzy/contracts';\r\nimport { compressImage, distinctUntilChange } from '@gauzy/ui-sdk/common';\r\nimport {\r\n\tErrorHandlerService,\r\n\tNativeNotificationService,\r\n\tStore,\r\n\tTimeTrackerDateManager,\r\n\tTimeZoneManager,\r\n\tToastrNotificationService,\r\n\tZoneEnum\r\n} from '../services';\r\nimport { TimeTrackerStatusService } from './time-tracker-status/time-tracker-status.service';\r\nimport { IRemoteTimer } from './time-tracker-status/interfaces';\r\nimport {\r\n\tInterruptedSequenceQueue,\r\n\tISequence,\r\n\tSequenceQueue,\r\n\tTimeSlotQueueService,\r\n\tViewQueueStateUpdater\r\n} from '../offline-sync';\r\nimport { ImageViewerService } from '../image-viewer/image-viewer.service';\r\nimport { AuthStrategy } from '../auth';\r\nimport { LanguageSelectorService } from '../language/language-selector.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AlwaysOnService, AlwaysOnStateEnum } from '../always-on/always-on.service';\r\nimport { TaskDurationComponent, TaskProgressComponent } from './task-render';\r\nimport { TaskRenderCellComponent } from './task-render/task-render-cell/task-render-cell.component';\r\nimport { TaskStatusComponent } from './task-render/task-status/task-status.component';\r\nimport { GAUZY_ENV } from '../constants';\r\nimport { TasksComponent } from '../tasks/tasks.component';\r\nimport { ActivityWatchViewService } from '../integrations';\r\n\r\nenum TimerStartMode {\r\n\tMANUAL = 'manual',\r\n\tREMOTE = 'remote',\r\n\tSTOP = 'stop'\r\n}\r\n\r\n@UntilDestroy({ checkProperties: true })\r\n@Component({\r\n\tselector: 'ngx-desktop-time-tracker',\r\n\ttemplateUrl: './time-tracker.component.html',\r\n\tstyleUrls: ['./time-tracker.component.scss'],\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\t\tuseExisting: forwardRef(() => TimeTrackerComponent),\r\n\t\t\tmulti: true\r\n\t\t}\r\n\t]\r\n})\r\nexport class TimeTrackerComponent implements OnInit, AfterViewInit {\r\n\tprivate _lastTotalWorkedToday$: BehaviorSubject<number> = new BehaviorSubject(0);\r\n\tprivate _lastTotalWorkedWeek$: BehaviorSubject<number> = new BehaviorSubject(0);\r\n\tprivate _permissions$: Subject<any> = new Subject();\r\n\tprivate _lastTime = 0;\r\n\tprivate _isLockSyncProcess = false;\r\n\tprivate _startMode = TimerStartMode.STOP;\r\n\tprivate _isSpecialLogout = false;\r\n\tprivate _isRestartAndUpdate = false;\r\n\tprivate _isOpenDialog = false;\r\n\tprivate _dialog: NbDialogRef<any> = null;\r\n\tprivate _timeZoneManager = TimeZoneManager;\r\n\tprivate _remoteSleepLock = false;\r\n\tprivate _isReady = false;\r\n\t@ViewChild('dialogOpenBtn') btnDialogOpen: ElementRef<HTMLElement>;\r\n\tpublic start$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tuserData: any;\r\n\torganization: any = {};\r\n\tprojectSelect = null;\r\n\ttaskSelect = null;\r\n\tteamSelect = null;\r\n\terrors: any = {};\r\n\tnote: String = null;\r\n\tpublic todayDuration$: BehaviorSubject<any> = new BehaviorSubject('--h --m');\r\n\tpublic weeklyDuration$: BehaviorSubject<any> = new BehaviorSubject('--h --m');\r\n\tpublic userOrganization$: BehaviorSubject<any> = new BehaviorSubject({});\r\n\tpublic lastScreenCapture$: BehaviorSubject<any> = new BehaviorSubject({});\r\n\tuserPermission: any = [];\r\n\tquitApp = false;\r\n\torganizationContactId = null;\r\n\temployeeId = null;\r\n\targFromMain = null;\r\n\ttoken = null;\r\n\tapiHost = null;\r\n\tscreenshots$: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\tselectedTimeSlot: any = null;\r\n\tlastTimeSlot = null;\r\n\tinvalidTimeLog = null;\r\n\tloading = false;\r\n\tappSetting$: BehaviorSubject<any> = new BehaviorSubject(null);\r\n\tisExpand$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tisCollapse$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\tdialogType = {\r\n\t\tdeleteLog: {\r\n\t\t\tname: 'deleteLog',\r\n\t\t\tmessage: 'TIMER_TRACKER.DIALOG.REMOVE_SCREENSHOT'\r\n\t\t},\r\n\t\tchangeClient: {\r\n\t\t\tname: 'changeClient',\r\n\t\t\tmessage: 'TIMER_TRACKER.DIALOG.CHANGE_CLIENT'\r\n\t\t},\r\n\t\ttimeTrackingOption: {\r\n\t\t\tname: 'timeTrackingOption',\r\n\t\t\tmessage: 'TIMER_TRACKER.DIALOG.RESUME_TIMER'\r\n\t\t}\r\n\t};\r\n\ttimerStatus: any;\r\n\texpandIcon = 'arrow-right';\r\n\tsmartTableSettings: object;\r\n\ttableData = [];\r\n\tisTrackingEnabled = true;\r\n\tisAddTask = false;\r\n\tsound: any = null;\r\n\tpublic hasTaskPermission$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tpublic hasProjectPermission$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tpublic hasContactPermission$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n\tconstructor(\r\n\t\tprivate electronService: ElectronService,\r\n\t\tprivate timeTrackerService: TimeTrackerService,\r\n\t\tprivate dialogService: NbDialogService,\r\n\t\tprivate toastrService: NbToastrService,\r\n\t\tprivate sanitize: DomSanitizer,\r\n\t\tprivate _ngZone: NgZone,\r\n\t\tprivate iconLibraries: NbIconLibraries,\r\n\t\tprivate _errorHandlerService: ErrorHandlerService,\r\n\t\tprivate _nativeNotifier: NativeNotificationService,\r\n\t\tprivate _toastrNotifier: ToastrNotificationService,\r\n\t\tprivate _store: Store,\r\n\t\tprivate _loggerService: LoggerService,\r\n\t\tprivate _timeTrackerStatus: TimeTrackerStatusService,\r\n\t\tprivate _timeSlotQueueService: TimeSlotQueueService,\r\n\t\tprivate _imageViewerService: ImageViewerService,\r\n\t\tprivate _authStrategy: AuthStrategy,\r\n\t\tprivate _languageSelectorService: LanguageSelectorService,\r\n\t\tprivate _translateService: TranslateService,\r\n\t\tprivate _alwaysOnService: AlwaysOnService,\r\n\t\t@Inject(GAUZY_ENV)\r\n\t\tprivate readonly _environment: any,\r\n\t\tprivate readonly _activityWatchViewService: ActivityWatchViewService\r\n\t) {\r\n\t\tthis.iconLibraries.registerFontPack('font-awesome', {\r\n\t\t\tpackClass: 'fas',\r\n\t\t\ticonClassPrefix: 'fa'\r\n\t\t});\r\n\t\tthis._permissions$\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((permissions: any[]) => permissions.length > 0),\r\n\t\t\t\ttap((permissions: any[]) => {\r\n\t\t\t\t\tthis.hasTaskPermission$.next(permissions.includes(PermissionsEnum.ORG_TASK_ADD));\r\n\t\t\t\t\tthis.hasProjectPermission$.next(permissions.includes(PermissionsEnum.ORG_PROJECT_ADD));\r\n\t\t\t\t\tthis.hasContactPermission$.next(permissions.includes(PermissionsEnum.ORG_CONTACT_EDIT));\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t\tthis.isOffline$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((value) => {\r\n\t\t\t\t\tthis._store.isOffline = value;\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\tprivate get _sourceData(): LocalDataSource {\r\n\t\treturn this._sourceData$.getValue();\r\n\t}\r\n\r\n\tprivate get _hasTaskPermission(): boolean {\r\n\t\treturn this.hasTaskPermission$.getValue();\r\n\t}\r\n\r\n\tprivate get _isOffline(): boolean {\r\n\t\treturn this._isOffline$.getValue();\r\n\t}\r\n\r\n\tprivate get _lastTotalWorkedToday(): number {\r\n\t\treturn this._lastTotalWorkedToday$.getValue();\r\n\t}\r\n\r\n\tprivate get _lastTotalWorkedWeek(): number {\r\n\t\treturn this._lastTotalWorkedWeek$.getValue();\r\n\t}\r\n\r\n\tprivate _teams$: BehaviorSubject<IOrganizationTeam[]> = new BehaviorSubject([]);\r\n\r\n\tpublic get teams$(): Observable<IOrganizationTeam[]> {\r\n\t\treturn this._teams$.asObservable();\r\n\t}\r\n\r\n\tpublic get teams(): IOrganizationTeam[] {\r\n\t\treturn this._teams$.getValue();\r\n\t}\r\n\r\n\tpublic get selectedTeam(): IOrganizationTeam {\r\n\t\tconst [selected] = this.teams.filter((team: IOrganizationTeam) => team.id === this.teamSelect);\r\n\t\treturn selected;\r\n\t}\r\n\r\n\tpublic get tasks(): ITask[] {\r\n\t\treturn this._tasks$.getValue();\r\n\t}\r\n\r\n\tpublic get selectedTask(): ITask {\r\n\t\tconst [selected] = this.tasks.filter((task: ITask) => task.id === this.taskSelect);\r\n\t\treturn selected;\r\n\t}\r\n\r\n\tprivate _taskTable: Angular2SmartTableComponent;\r\n\r\n\t@ViewChild('taskTable') set taskTable(content: Angular2SmartTableComponent) {\r\n\t\tif (content) {\r\n\t\t\tthis._taskTable = content;\r\n\t\t\tthis._onChangedSource();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _timeRun$: BehaviorSubject<string> = new BehaviorSubject('00:00:00');\r\n\r\n\tpublic get timeRun$(): Observable<string> {\r\n\t\treturn this._timeRun$.asObservable();\r\n\t}\r\n\r\n\tprivate _projects$: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\r\n\tpublic get projects$(): Observable<any> {\r\n\t\treturn this._projects$.asObservable();\r\n\t}\r\n\r\n\tprivate _tasks$: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\r\n\tpublic get tasks$(): Observable<any> {\r\n\t\treturn this._tasks$.asObservable();\r\n\t}\r\n\r\n\tprivate _organizationContacts$: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\r\n\tpublic get organizationContacts$(): Observable<any> {\r\n\t\treturn this._organizationContacts$.asObservable();\r\n\t}\r\n\r\n\tprivate _sourceData$: BehaviorSubject<LocalDataSource>;\r\n\r\n\tpublic get sourceData$(): Observable<LocalDataSource> {\r\n\t\treturn this._sourceData$.asObservable();\r\n\t}\r\n\r\n\tprivate _isOffline$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n\tpublic get isOffline$(): Observable<boolean> {\r\n\t\treturn this._isOffline$.asObservable();\r\n\t}\r\n\r\n\tprivate _inQueue$: BehaviorSubject<ViewQueueStateUpdater> = new BehaviorSubject({ size: 0, inProgress: false });\r\n\r\n\tpublic get inQueue$(): Observable<ViewQueueStateUpdater> {\r\n\t\treturn this._inQueue$.asObservable();\r\n\t}\r\n\r\n\tprivate _isRefresh$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n\tpublic get isRefresh$(): Observable<boolean> {\r\n\t\treturn this._isRefresh$.asObservable();\r\n\t}\r\n\r\n\tprivate _weeklyLimit$: BehaviorSubject<number> = new BehaviorSubject(Infinity);\r\n\r\n\tpublic get weeklyLimit$(): Observable<number> {\r\n\t\treturn this._weeklyLimit$.asObservable();\r\n\t}\r\n\r\n\tprivate _isOver$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n\tpublic get isOver$(): Observable<boolean> {\r\n\t\treturn this._isOver$.asObservable();\r\n\t}\r\n\r\n\tpublic get start(): boolean {\r\n\t\treturn this.start$.getValue();\r\n\t}\r\n\r\n\tpublic get todayDuration(): any {\r\n\t\treturn this.todayDuration$.getValue();\r\n\t}\r\n\r\n\tpublic get userOrganization(): any {\r\n\t\treturn this.userOrganization$.getValue();\r\n\t}\r\n\r\n\tpublic get lastScreenCapture(): any {\r\n\t\treturn this.lastScreenCapture$.getValue();\r\n\t}\r\n\r\n\tget screenshots(): any[] {\r\n\t\treturn this.screenshots$.getValue();\r\n\t}\r\n\r\n\tget appSetting(): any {\r\n\t\treturn this.appSetting$.getValue();\r\n\t}\r\n\r\n\tget isExpand(): boolean {\r\n\t\treturn this.isExpand$.getValue();\r\n\t}\r\n\r\n\tpublic get inQueue(): ViewQueueStateUpdater {\r\n\t\treturn this._inQueue$.getValue();\r\n\t}\r\n\r\n\t/**\r\n\t * It returns the project that matches the projectSelect value\r\n\t * @returns The project that matches the projectSelect id.\r\n\t */\r\n\tpublic get selectedProject() {\r\n\t\tconst projects = this._projects$.getValue();\r\n\t\treturn projects.filter((project) => project.id === this.projectSelect)[0];\r\n\t}\r\n\r\n\tpublic get _weeklyLimit(): number {\r\n\t\treturn this._weeklyLimit$.getValue();\r\n\t}\r\n\r\n\tpublic get isRemoteTimer(): boolean {\r\n\t\treturn this._startMode === TimerStartMode.REMOTE;\r\n\t}\r\n\r\n\tprivate async resetAtMidnight() {\r\n\t\tif (TimeTrackerDateManager.isMidnight) {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.restart();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate merge(tasks: ITask[], statistics: ITasksStatistics[]): (ITask & ITasksStatistics)[] {\r\n\t\tlet arr: (ITask & ITasksStatistics)[] = [];\r\n\t\tarr = arr.concat(statistics, tasks);\r\n\t\treturn arr.reduce((result, current) => {\r\n\t\t\tconst existing = result.find((item: any) => item.id === current.id);\r\n\t\t\tif (existing) {\r\n\t\t\t\tconst updatedAtMoment = moment(existing?.updatedAt, moment.ISO_8601).utc(true);\r\n\t\t\t\tObject.assign(\r\n\t\t\t\t\texisting,\r\n\t\t\t\t\tcurrent,\r\n\t\t\t\t\tupdatedAtMoment.isAfter(current?.updatedAt)\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\tupdatedAt: updatedAtMoment.toISOString()\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: {}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(current);\r\n\t\t\t}\r\n\t\t\treturn result.filter((task) => !!task?.id);\r\n\t\t}, []);\r\n\t}\r\n\r\n\tprivate countDuration(count, isForcedSync?: boolean): void {\r\n\t\tif (!this.start || isForcedSync) {\r\n\t\t\tthis._lastTotalWorkedToday$.next(count.todayDuration);\r\n\t\t\tthis._lastTotalWorkedWeek$.next(count.weekDuration);\r\n\t\t\tthis._alwaysOnService.update('00:00:00', this._lastTotalWorkedToday);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _deleteSyncedTimeslot() {\r\n\t\ttry {\r\n\t\t\tawait this.getTimerStatus(this.argFromMain);\r\n\t\t\tif (this.timerStatus.running) {\r\n\t\t\t\tawait this.toggleStart(false);\r\n\t\t\t}\r\n\t\t\tconst res = await this.timeTrackerService.deleteTimeSlot({\r\n\t\t\t\t...this.argFromMain,\r\n\t\t\t\ttimeSlotId: this.selectedTimeSlot.id\r\n\t\t\t});\r\n\t\t\tif (res) {\r\n\t\t\t\t// Delete selected time slot and return last time slot\r\n\t\t\t\tconst timeSlotId = await this.electronService.ipcRenderer.invoke(\r\n\t\t\t\t\t'DELETE_TIME_SLOT',\r\n\t\t\t\t\tthis.selectedTimeSlot.id\r\n\t\t\t\t);\r\n\t\t\t\tthis.selectedTimeSlot.id = timeSlotId;\r\n\t\t\t\t// Refresh screen\r\n\t\t\t\tawait Promise.allSettled([\r\n\t\t\t\t\tthis.getTodayTime(this.argFromMain, true),\r\n\t\t\t\t\tthis.getLastTimeSlotImage({ timeSlotId })\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('error on delete', e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check if user have required authorization to use time tracker\r\n\t */\r\n\tprivate _passedAllAuthorizations(): boolean {\r\n\t\tlet isPassed = false;\r\n\t\t// Verify if tracking is enabled\r\n\t\tif (!this.userData?.employee?.isTrackingEnabled) {\r\n\t\t\tthis.toastrService.show(this._translateService.instant('TIMER_TRACKER.TOASTR.CANT_RUN_TIMER'), `Warning`, {\r\n\t\t\t\tstatus: 'danger'\r\n\t\t\t});\r\n\t\t\tisPassed = false;\r\n\t\t}\r\n\t\t// Verify work status of user\r\n\t\telse if (\r\n\t\t\t!this.userData?.employee?.startedWorkOn ||\r\n\t\t\t!this.userData?.employee?.isActive ||\r\n\t\t\tthis.userData?.employee?.workStatus\r\n\t\t) {\r\n\t\t\t// Verify if user are already started to work for organization, if yes you can run time tracker else no\r\n\t\t\tif (!this.userData?.employee?.startedWorkOn) {\r\n\t\t\t\tthis.toastrService.show(\r\n\t\t\t\t\tthis._translateService.instant('TIMER_TRACKER.TOASTR.NOT_AUTHORIZED'),\r\n\t\t\t\t\t`Warning`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstatus: 'danger'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// Verify if user are deleted for organization, if yes can't run time tracker\r\n\t\t\tif (this.userData?.employee?.startedWorkOn && !this.userData?.employee?.isActive) {\r\n\t\t\t\tthis.toastrService.show(\r\n\t\t\t\t\tthis._translateService.instant('TIMER_TRACKER.TOASTR.ACCOUNT_DELETED'),\r\n\t\t\t\t\t`Warning`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstatus: 'danger'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tisPassed = false;\r\n\t\t} else isPassed = true;\r\n\t\treturn isPassed;\r\n\t}\r\n\r\n\tprivate _onChangedSource(): void {\r\n\t\tthis._taskTable.source.onChangedSource\r\n\t\t\t.pipe(\r\n\t\t\t\ttap(() => this._clearItem()),\r\n\t\t\t\ttap(() => {\r\n\t\t\t\t\tif (this.taskSelect) {\r\n\t\t\t\t\t\tthis._taskTable.grid.dataSet.getRows().map((row) => {\r\n\t\t\t\t\t\t\tif (row.getData().id === this.taskSelect) {\r\n\t\t\t\t\t\t\t\treturn this._taskTable.grid.dataSet.selectRow(row);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\tprivate _clearItem(): void {\r\n\t\tif (this._taskTable && this._taskTable.grid) {\r\n\t\t\tthis._taskTable.grid.dataSet['willSelect'] = 'indexed';\r\n\t\t\tthis._taskTable.grid.dataSet.deselectAll();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _mappingScreenshots(args: any[]): Promise<void> {\r\n\t\ttry {\r\n\t\t\tlet screenshots = await Promise.all(\r\n\t\t\t\targs.map(async (arg) => {\r\n\t\t\t\t\tif (!arg.screenshots.length) return null;\r\n\t\t\t\t\tconst fullUrl = 'data:image/png;base64,' + arg.screenshots[0].b64img;\r\n\t\t\t\t\tconst thumbUrl = await compressImage(fullUrl, 320, 200);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttextTime: moment(arg.recordedAt).fromNow(),\r\n\t\t\t\t\t\tcreatedAt: arg.recordedAt,\r\n\t\t\t\t\t\trecordedAt: arg.recordedAt,\r\n\t\t\t\t\t\tid: arg.id,\r\n\t\t\t\t\t\tfullUrl,\r\n\t\t\t\t\t\tthumbUrl\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tscreenshots = screenshots.filter((screenshot) => !!screenshot);\r\n\t\t\tif (screenshots.length > 0) {\r\n\t\t\t\tconst [lastCaptureScreen] = screenshots;\r\n\t\t\t\tconsole.log('Last Capture Screen:', lastCaptureScreen);\r\n\t\t\t\tthis.lastScreenCapture$.next(lastCaptureScreen);\r\n\t\t\t\tthis.screenshots$.next(screenshots);\r\n\t\t\t\tconsole.log('screenshots from db', screenshots);\r\n\t\t\t\tawait this.localImage(this.lastScreenCapture.thumbUrl);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _toggle(timer: any, onClick: boolean) {\r\n\t\ttry {\r\n\t\t\tconst { lastTimer, isStarted } = timer;\r\n\r\n\t\t\tconst isRemote =\r\n\t\t\t\tthis._timeTrackerStatus.remoteTimer &&\r\n\t\t\t\tthis.xor(!isStarted, this._timeTrackerStatus.remoteTimer.running) &&\r\n\t\t\t\tthis._startMode === TimerStartMode.REMOTE;\r\n\r\n\t\t\tconst params = {\r\n\t\t\t\ttoken: this.token,\r\n\t\t\t\tnote: this.note,\r\n\t\t\t\tprojectId: this.projectSelect,\r\n\t\t\t\ttaskId: this.taskSelect,\r\n\t\t\t\torganizationId: this._store.organizationId,\r\n\t\t\t\ttenantId: this._store.tenantId,\r\n\t\t\t\torganizationContactId: this.organizationContactId,\r\n\t\t\t\tapiHost: this.apiHost\r\n\t\t\t};\r\n\r\n\t\t\tlet timelog = null;\r\n\r\n\t\t\tconsole.log('[TIMER_STATE]', lastTimer);\r\n\r\n\t\t\tif (isStarted) {\r\n\t\t\t\tif (!this._isOffline && !this._remoteSleepLock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\ttimelog = isRemote\r\n\t\t\t\t\t\t\t? this._timeTrackerStatus.remoteTimer.lastLog\r\n\t\t\t\t\t\t\t: await this.timeTrackerService.toggleApiStart({\r\n\t\t\t\t\t\t\t\t\t...lastTimer,\r\n\t\t\t\t\t\t\t\t\t...params\r\n\t\t\t\t\t\t\t  });\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tlastTimer.isStartedOffline = true;\r\n\t\t\t\t\t\tthis._loggerService.log.error(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._isOffline) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\ttimelog =\r\n\t\t\t\t\t\t\tisRemote ||\r\n\t\t\t\t\t\t\tthis._remoteSleepLock ||\r\n\t\t\t\t\t\t\t(this.isRemoteTimer && (this._isSpecialLogout || this.quitApp))\r\n\t\t\t\t\t\t\t\t? this._timeTrackerStatus.remoteTimer.lastLog\r\n\t\t\t\t\t\t\t\t: await this.timeTrackerService.toggleApiStop({\r\n\t\t\t\t\t\t\t\t\t\t...lastTimer,\r\n\t\t\t\t\t\t\t\t\t\t...params\r\n\t\t\t\t\t\t\t\t  });\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tlastTimer.isStoppedOffline = true;\r\n\t\t\t\t\t\tthis._loggerService.log.error(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.start$.next(false);\r\n\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t}\r\n\r\n\t\t\tasapScheduler.schedule(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait this.electronService.ipcRenderer.invoke('UPDATE_SYNCED_TIMER', {\r\n\t\t\t\t\t\tlastTimer: timelog,\r\n\t\t\t\t\t\t...lastTimer\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait this.getTimerStatus(params);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tlet messageError = error.message;\r\n\t\t\tif (messageError.includes('Http failure response')) {\r\n\t\t\t\tmessageError = `Can't connect to api server`;\r\n\t\t\t} else {\r\n\t\t\t\tmessageError = 'Internal server error';\r\n\t\t\t}\r\n\t\t\tthis.toastrService.show(messageError, `Warning`, {\r\n\t\t\t\tstatus: 'danger'\r\n\t\t\t});\r\n\t\t\tthis._loggerService.log.info(`Timer Toggle Catch: ${moment().format()}`, error);\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _loadSmartTableSettings(): void {\r\n\t\tthis.smartTableSettings = {\r\n\t\t\tcolumns: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttitle: this._translateService.instant('TIMER_TRACKER.TASK'),\r\n\t\t\t\t\ttype: 'custom',\r\n\t\t\t\t\trenderComponent: TaskRenderCellComponent,\r\n\t\t\t\t\twidth: '40%',\r\n\t\t\t\t\tcomponentInitFunction: (instance: TaskRenderCellComponent, cell: Cell) => {\r\n\t\t\t\t\t\tinstance.rowData = cell.getRow().getData();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tduration: {\r\n\t\t\t\t\ttitle: this._translateService.instant('TIMESHEET.DURATION'),\r\n\t\t\t\t\ttype: 'custom',\r\n\t\t\t\t\trenderComponent: TaskDurationComponent,\r\n\t\t\t\t\tcomponentInitFunction: (instance: TaskDurationComponent, cell: Cell) => {\r\n\t\t\t\t\t\tinstance.rowData = cell.getRow().getData();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttaskProgress: {\r\n\t\t\t\t\ttitle: this._translateService.instant('MENU.IMPORT_EXPORT.PROGRESS'),\r\n\t\t\t\t\ttype: 'custom',\r\n\t\t\t\t\trenderComponent: TaskProgressComponent,\r\n\t\t\t\t\twidth: '192px',\r\n\t\t\t\t\tcomponentInitFunction: (instance: TaskProgressComponent, cell: Cell) => {\r\n\t\t\t\t\t\tinstance.rowData = cell.getRow().getData();\r\n\t\t\t\t\t\tinstance.updated.subscribe({\r\n\t\t\t\t\t\t\tnext: async (estimate: number) => {\r\n\t\t\t\t\t\t\t\tconst { tenantId, organizationId } = this._store;\r\n\t\t\t\t\t\t\t\tconst id = instance.task.id;\r\n\t\t\t\t\t\t\t\tconst title = instance.task.title;\r\n\t\t\t\t\t\t\t\tconst status = instance.task.status;\r\n\t\t\t\t\t\t\t\tconst taskUpdateInput: ITaskUpdateInput = {\r\n\t\t\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\t\t\ttenantId,\r\n\t\t\t\t\t\t\t\t\testimate,\r\n\t\t\t\t\t\t\t\t\tstatus,\r\n\t\t\t\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tawait this.timeTrackerService.updateTask(id, taskUpdateInput);\r\n\t\t\t\t\t\t\t\tthis._toastrNotifier.success(this._translateService.instant('TOASTR.MESSAGE.UPDATED'));\r\n\t\t\t\t\t\t\t\tthis.refreshTimer();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (err: any) => {\r\n\t\t\t\t\t\t\t\tconsole.warn(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttaskStatus: {\r\n\t\t\t\t\ttitle: this._translateService.instant('SM_TABLE.STATUS'),\r\n\t\t\t\t\ttype: 'custom',\r\n\t\t\t\t\trenderComponent: TaskStatusComponent,\r\n\t\t\t\t\tcomponentInitFunction: (instance: TaskStatusComponent, cell: Cell) => {\r\n\t\t\t\t\t\tinstance.rowData = cell.getRow().getData();\r\n\t\t\t\t\t\tinstance.updated.subscribe({\r\n\t\t\t\t\t\t\tnext: async (taskStatus: ITaskStatus) => {\r\n\t\t\t\t\t\t\t\tconst { tenantId, organizationId } = this._store;\r\n\t\t\t\t\t\t\t\tconst id = instance.task.id;\r\n\t\t\t\t\t\t\t\tconst title = instance.task.title;\r\n\t\t\t\t\t\t\t\tconst status = taskStatus.name as TaskStatusEnum;\r\n\t\t\t\t\t\t\t\tconst taskUpdateInput: ITaskUpdateInput = {\r\n\t\t\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\t\t\ttenantId,\r\n\t\t\t\t\t\t\t\t\tstatus,\r\n\t\t\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\t\t\ttaskStatus\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tawait this.timeTrackerService.updateTask(id, taskUpdateInput);\r\n\t\t\t\t\t\t\t\tthis._toastrNotifier.success(this._translateService.instant('TOASTR.MESSAGE.UPDATED'));\r\n\t\t\t\t\t\t\t\tthis.refreshTimer();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror: (err: any) => {\r\n\t\t\t\t\t\t\t\tconsole.warn(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thideSubHeader: true,\r\n\t\t\tactions: false,\r\n\t\t\tnoDataMessage: this._translateService.instant('SM_TABLE.NO_DATA.TASK'),\r\n\t\t\tpager: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tperPage: 10,\r\n\t\t\t\tpage: 1\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tprivate async loadStatuses(): Promise<void> {\r\n\t\tif (!this._store.organizationId && !this._store.tenantId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { organizationId, tenantId } = this._store;\r\n\r\n\t\tthis._store.statuses = await this.timeTrackerService.statuses({\r\n\t\t\ttenantId,\r\n\t\t\torganizationId,\r\n\t\t\t...(this.projectSelect\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tprojectId: this.projectSelect\r\n\t\t\t\t  }\r\n\t\t\t\t: {})\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis._sourceData$ = new BehaviorSubject(new LocalDataSource(this.tableData));\r\n\r\n\t\tthis._sourceData.setSort([{ field: 'updatedAt', direction: 'desc' }]);\r\n\r\n\t\tthis.tasks$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap(async (tasks) => {\r\n\t\t\t\t\tif (tasks.length > 0) {\r\n\t\t\t\t\t\ttasks = tasks.map((row) => ({ ...row, isSelected: row.id === this.taskSelect }));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttasks = [];\r\n\t\t\t\t\t\tthis.taskSelect = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.tableData = tasks;\r\n\t\t\t\t\tawait this._sourceData.load(this.tableData);\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._lastTotalWorkedToday$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((todayDuration: number) => {\r\n\t\t\t\t\tthis.todayDuration$.next(\r\n\t\t\t\t\t\tmoment.duration(todayDuration, 'seconds').format('hh[h] mm[m]', { trim: false, trunc: true })\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('update_tray_time_update', this.todayDuration);\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('update_tray_time_title', {\r\n\t\t\t\t\t\ttimeRun: moment.duration(todayDuration, 'seconds').format('hh:mm:ss', { trim: false })\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._timeRun$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((current: string) => {\r\n\t\t\t\t\tthis._alwaysOnService.update(current, this._lastTotalWorkedToday);\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._lastTotalWorkedWeek$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((weekDuration: number) => {\r\n\t\t\t\t\tthis.weeklyDuration$.next(\r\n\t\t\t\t\t\tmoment.duration(weekDuration, 'seconds').format('hh[h] mm[m]', { trim: false, trunc: true })\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis._isOver$.next(weekDuration > this._weeklyLimit * 3600);\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis.start$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((isStart: boolean) => {\r\n\t\t\t\t\tthis._alwaysOnService.run(isStart ? AlwaysOnStateEnum.STARTED : AlwaysOnStateEnum.STOPPED);\r\n\t\t\t\t\tthis._activityWatchViewService.isTimerRunning$.next(isStart);\r\n\t\t\t\t}),\r\n\t\t\t\tfilter((isStart: boolean) => !isStart),\r\n\t\t\t\ttap(() => {\r\n\t\t\t\t\tthis._timeRun$.next('00:00:00');\r\n\t\t\t\t\tthis._lastTime = 0;\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._timeTrackerStatus.external$\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(\r\n\t\t\t\t\t(remoteTimer: IRemoteTimer) =>\r\n\t\t\t\t\t\tthis.xor(this.start, remoteTimer.running) &&\r\n\t\t\t\t\t\t!this._isLockSyncProcess &&\r\n\t\t\t\t\t\tthis._isReady &&\r\n\t\t\t\t\t\tthis.inQueue.size === 0\r\n\t\t\t\t),\r\n\t\t\t\ttap(async (remoteTimer: IRemoteTimer) => {\r\n\t\t\t\t\tthis.projectSelect = remoteTimer.lastLog.projectId;\r\n\t\t\t\t\tthis.taskSelect = remoteTimer.lastLog.taskId;\r\n\t\t\t\t\tthis.note = remoteTimer.lastLog.description;\r\n\t\t\t\t\tthis.teamSelect = remoteTimer.lastLog.organizationTeamId;\r\n\t\t\t\t\tthis.organizationContactId = remoteTimer.lastLog.organizationContactId;\r\n\t\t\t\t\tawait this.toggleStart(remoteTimer.running, false);\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._timeSlotQueueService.updater$\r\n\t\t\t.pipe(\r\n\t\t\t\tdistinctUntilChange(),\r\n\t\t\t\ttap((interval) => from(this.getLastTimeSlotImage(interval))),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._timeSlotQueueService.viewQueueStateUpdater$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap(({ inProgress }) =>\r\n\t\t\t\t\tthis._inQueue$.next({\r\n\t\t\t\t\t\t...this.inQueue,\r\n\t\t\t\t\t\tinProgress\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis.userOrganization$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((organization: IOrganization) => (TimeTrackerDateManager.organization = organization)),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._alwaysOnService.state$\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((state: AlwaysOnStateEnum) => state === AlwaysOnStateEnum.LOADING),\r\n\t\t\t\tconcatMap(() => this.toggleStart(!this.start, true)),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis._loadSmartTableSettings();\r\n\t}\r\n\r\n\tpublic xor(a: boolean, b: boolean): boolean {\r\n\t\treturn (a && !b) || (!a && b);\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.electronService.ipcRenderer.on('timer_push', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.setTime(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('timer_tracker_show', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tif (!this._store.user?.employee) return;\r\n\t\t\t\tthis._isOffline$.next(arg.isOffline ? arg.isOffline : this._isOffline);\r\n\t\t\t\tthis._store.host = arg.apiHost;\r\n\t\t\t\tthis.apiHost = arg.apiHost;\r\n\t\t\t\tthis.argFromMain = arg;\r\n\t\t\t\tthis.taskSelect = arg.taskId;\r\n\t\t\t\tthis.projectSelect = arg.projectId;\r\n\t\t\t\tthis.organizationContactId = arg.organizationContactId;\r\n\t\t\t\tthis.teamSelect = arg.organizationTeamId;\r\n\t\t\t\tthis.token = arg.token;\r\n\t\t\t\tthis.note = arg.note;\r\n\t\t\t\tthis._activityWatchViewService.aw$.next(!!arg.aw?.isAw);\r\n\t\t\t\tthis.appSetting$.next(arg.settings);\r\n\t\t\t\tthis._timeZoneManager.changeZone(this.appSetting?.zone || ZoneEnum.LOCAL);\r\n\t\t\t\tif (!this._isReady && this.appSetting?.alwaysOn) {\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('show_ao');\r\n\t\t\t\t}\r\n\t\t\t\tconst parallelizedTasks: Promise<void>[] = [\r\n\t\t\t\t\tthis.loadStatuses(),\r\n\t\t\t\t\tthis.getTeams(arg),\r\n\t\t\t\t\tthis.getClient(arg),\r\n\t\t\t\t\tthis.getProjects(arg),\r\n\t\t\t\t\tthis.getTask(arg),\r\n\t\t\t\t\tthis.getTodayTime(arg),\r\n\t\t\t\t\tthis.setTimerDetails()\r\n\t\t\t\t];\r\n\t\t\t\tif (arg.timeSlotId) {\r\n\t\t\t\t\tparallelizedTasks.push(this.getLastTimeSlotImage(arg));\r\n\t\t\t\t}\r\n\t\t\t\tawait Promise.allSettled(parallelizedTasks);\r\n\t\t\t\tthis._isReady = true;\r\n\t\t\t\tthis._isRefresh$.next(false);\r\n\t\t\t\tif (!this._isLockSyncProcess && this.inQueue.size > 0) {\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('check-interrupted-sequences');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('start_from_tray', async (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tthis.taskSelect = arg.taskId;\r\n\t\t\t\tthis.projectSelect = arg.projectId;\r\n\t\t\t\tthis.teamSelect = arg.organizationTeamId;\r\n\t\t\t\tthis.note = arg.note;\r\n\t\t\t\tthis._activityWatchViewService.aw$.next(!!arg.aw?.isAw);\r\n\t\t\t\tawait this.setTimerDetails();\r\n\t\t\t\tawait this.toggleStart(true);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('stop_from_tray', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\t// Check if arg is defined and has the quitApp property set to true\r\n\t\t\t\tif (arg?.quitApp) {\r\n\t\t\t\t\t// Set the quitApp flag to true\r\n\t\t\t\t\tthis.quitApp = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if quitApp flag is already set, and if so, force stop the timer and return\r\n\t\t\t\tif (this.quitApp) {\r\n\t\t\t\t\tawait this.stopTimer(true, true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log('stop_from_tray this.start=', this.start);\r\n\r\n\t\t\t\t// Check if the start flag is set, and if so, toggle the start state to false\r\n\t\t\t\tif (this.start) {\r\n\t\t\t\t\tawait this.toggleStart(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('this.start is false, doing nothing.');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('set_project_task_reply', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.setProject(arg.projectId);\r\n\t\t\t\tthis.setTask(arg.taskId);\r\n\t\t\t\tthis.note = arg.note;\r\n\t\t\t\tthis._activityWatchViewService.aw$.next(arg.aw && arg.aw.isAw ? arg.aw.isAw : false);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('take_screenshot', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._loggerService.log.info(`Take Screenshot:`, arg);\r\n\t\t\t\t\tconst screens = [];\r\n\t\t\t\t\tconst thumbSize = this.determineScreenshot(arg.screenSize);\r\n\t\t\t\t\tconst sources = await this.electronService.desktopCapturer.getSources({\r\n\t\t\t\t\t\ttypes: ['screen'],\r\n\t\t\t\t\t\tthumbnailSize: thumbSize\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsources.forEach((source) => {\r\n\t\t\t\t\t\tthis._loggerService.log.info('screenshot_res', source);\r\n\t\t\t\t\t\tscreens.push({\r\n\t\t\t\t\t\t\timg: source.thumbnail.toPNG(),\r\n\t\t\t\t\t\t\tname: source.name,\r\n\t\t\t\t\t\t\tid: source.display_id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._loggerService.log.info('screenshot data', screens);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (!arg.isTemp) {\r\n\t\t\t\t\t\tevent.sender.send('save_screen_shoot', {\r\n\t\t\t\t\t\t\tscreens: screens,\r\n\t\t\t\t\t\t\ttimeSlotId: arg.timeSlotId,\r\n\t\t\t\t\t\t\tquitApp: this.quitApp\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tevent.sender.send('save_temp_screenshot', {\r\n\t\t\t\t\t\t\tscreens: screens,\r\n\t\t\t\t\t\t\ttimeSlotId: arg.timeSlotId,\r\n\t\t\t\t\t\t\tquitApp: this.quitApp\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('refresh_time_log', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.getTodayTime(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('show_last_capture', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.getLastTimeSlotImage(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('last_capture_local', (event, arg) =>\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tconsole.log('Last Capture Screenshot:');\r\n\t\t\t\tthis.lastScreenCapture$.next({\r\n\t\t\t\t\tfullUrl: this.sanitize.bypassSecurityTrustUrl(arg.fullUrl),\r\n\t\t\t\t\tthumbUrl: this.sanitize.bypassSecurityTrustUrl(arg.fullUrl),\r\n\t\t\t\t\ttextTime: moment().fromNow(),\r\n\t\t\t\t\tcreatedAt: Date.now(),\r\n\t\t\t\t\trecordedAt: Date.now()\r\n\t\t\t\t});\r\n\t\t\t\tthis.screenshots$.next([...this.screenshots]);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('get_user_detail', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await this.timeTrackerService.getUserDetail();\r\n\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\tevent.sender.send('user_detail', res);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log('[User Error]: ', error);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('update_setting_value', (event, arg) =>\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis.appSetting$.next(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('device_sleep', () =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tif (this.start) await this.toggleStart(false);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('activity-proof-request', () => {\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis._dialog?.close();\r\n\t\t\t\tthis._isOpenDialog = false;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('inactivity-result-not-accepted', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tif (this.start) {\r\n\t\t\t\t\tawait this.toggleStart(false);\r\n\t\t\t\t\tthis._dialog?.close();\r\n\t\t\t\t\tthis._isOpenDialog = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('stop_from_inactivity_handler', () => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tif (this.start) await this.toggleStart(false);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('start_from_inactivity_handler', () => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.toggleStart(true);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('device_wake_up', () =>\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tif (!this._isOpenDialog) {\r\n\t\t\t\t\tconst elBtn: HTMLElement = this.btnDialogOpen.nativeElement;\r\n\t\t\t\t\telBtn.click();\r\n\t\t\t\t\tthis._isOpenDialog = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('timer_status', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.getTimerStatus(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('timer_already_stop', (event, arg) =>\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('logout', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tthis._isRestartAndUpdate = arg;\r\n\t\t\t\tif (this.isExpand) this.expand();\r\n\t\t\t\tif (this.start && !this.isRemoteTimer) {\r\n\t\t\t\t\tthis._isSpecialLogout = true;\r\n\t\t\t\t\tawait this.stopTimer();\r\n\t\t\t\t}\r\n\t\t\t\tif (!this._isSpecialLogout) {\r\n\t\t\t\t\tawait this.logout();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('prepare_activities_screenshot', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.sendActivities(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('play_sound', (event, arg) =>\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (!this.sound && arg.soundFile) {\r\n\t\t\t\t\t\tthis.sound = new Audio(arg.soundFile);\r\n\t\t\t\t\t\tthis.sound.play();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.sound.play();\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('show_error_message', (event, arg) =>\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis.showErrorMessage(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('expand', (event, arg) =>\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis.isExpand$.next(arg);\r\n\t\t\t\tthis.expandIcon = arg ? 'arrow-left' : 'arrow-right';\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('refresh_today_worked_time', (event, arg) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.getTodayTime(arg);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('offline-handler', (event, isOffline) => {\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis._isOffline$.next(isOffline);\r\n\t\t\t\tthis._loggerService.log.info('You switched to ' + (isOffline ? 'offline' : 'online') + ' mode now');\r\n\t\t\t\tif (!isOffline) {\r\n\t\t\t\t\tthis.refreshTimer();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('count-synced', (event, arg) => {\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis._inQueue$.next(arg);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('latest_screenshots', (event, args) => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tif (this._isOffline) {\r\n\t\t\t\t\tawait this._mappingScreenshots(args);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('backup-timers-no-synced', (event, args: ISequence[]) => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tif (this._isLockSyncProcess || this.isRemoteTimer) {\r\n\t\t\t\t\tthis._inQueue$.next({\r\n\t\t\t\t\t\t...this.inQueue,\r\n\t\t\t\t\t\tinProgress: false\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._isLockSyncProcess = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._inQueue$.next({\r\n\t\t\t\t\t...this.inQueue,\r\n\t\t\t\t\tinProgress: true\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log('🛠 - Preprocessing sequence');\r\n\t\t\t\tconst sequenceQueue = new SequenceQueue(\r\n\t\t\t\t\tthis.electronService,\r\n\t\t\t\t\tthis._errorHandlerService,\r\n\t\t\t\t\tthis._store,\r\n\t\t\t\t\tthis._timeSlotQueueService,\r\n\t\t\t\t\tthis.timeTrackerService,\r\n\t\t\t\t\tthis._timeTrackerStatus\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log('⌗', args);\r\n\t\t\t\tfor (const arg of args) sequenceQueue.enqueue(arg);\r\n\t\t\t\targs = []; // empty the array\r\n\t\t\t\tconsole.log('🚀 - Begin processing sequence queue');\r\n\t\t\t\tawait sequenceQueue.process();\r\n\t\t\t\tconsole.log('🚨 - End processing sequence queue');\r\n\t\t\t\tasapScheduler.schedule(async () => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait this.electronService.ipcRenderer.invoke('FINISH_SYNCED_TIMER');\r\n\t\t\t\t\t\tthis._isLockSyncProcess = false;\r\n\t\t\t\t\t\tif (!this.start) {\r\n\t\t\t\t\t\t\tthis.refreshTimer();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.electronService.ipcRenderer.send('check-interrupted-sequences');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log('✅ - Finish synced');\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (!this._isReady) {\r\n\t\t\tthis.electronService.ipcRenderer.send('time_tracker_ready');\r\n\t\t}\r\n\r\n\t\tthis.electronService.ipcRenderer.on('remove_idle_time', (event, arg) => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { tenantId, organizationId } = this._store;\r\n\t\t\t\t\tconst { employeeId } = this.userData;\r\n\r\n\t\t\t\t\tconst timeSlotPayload = {\r\n\t\t\t\t\t\ttimeslotIds: [...new Set(arg.timeslotIds)],\r\n\t\t\t\t\t\ttoken: this.token,\r\n\t\t\t\t\t\tapiHost: this.apiHost,\r\n\t\t\t\t\t\ttenantId,\r\n\t\t\t\t\t\torganizationId\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst notification = {\r\n\t\t\t\t\t\tmessage: 'Idle time successfully deleted',\r\n\t\t\t\t\t\ttitle: this._environment.DESCRIPTION\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst isReadyForDeletion = !this._isOffline && timeSlotPayload.timeslotIds.length > 0;\r\n\r\n\t\t\t\t\tif (isReadyForDeletion) {\r\n\t\t\t\t\t\tconst apiParams = {\r\n\t\t\t\t\t\t\ttoken: this.token,\r\n\t\t\t\t\t\t\tnote: this.note,\r\n\t\t\t\t\t\t\tprojectId: this.projectSelect,\r\n\t\t\t\t\t\t\ttaskId: this.taskSelect,\r\n\t\t\t\t\t\t\torganizationId,\r\n\t\t\t\t\t\t\ttenantId,\r\n\t\t\t\t\t\t\torganizationContactId: this.organizationContactId,\r\n\t\t\t\t\t\t\tapiHost: this.apiHost\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlet timeLog = null;\r\n\r\n\t\t\t\t\t\tif (arg.isWorking) {\r\n\t\t\t\t\t\t\tif (this.start) {\r\n\t\t\t\t\t\t\t\tawait this.timeTrackerService.toggleApiStop({\r\n\t\t\t\t\t\t\t\t\t...apiParams,\r\n\t\t\t\t\t\t\t\t\t...arg.timer,\r\n\t\t\t\t\t\t\t\t\tstoppedAt: new Date()\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst isDeleted = await this.timeTrackerService.deleteTimeSlots(timeSlotPayload);\r\n\r\n\t\t\t\t\t\t\tif (isDeleted) {\r\n\t\t\t\t\t\t\t\tconsole.log('SUCCESS: Deleted');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.warn('WARN: Unexpected error appears.');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttimeLog = await this.timeTrackerService.toggleApiStart({\r\n\t\t\t\t\t\t\t\t...apiParams,\r\n\t\t\t\t\t\t\t\tstartedAt: new Date()\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tawait this.getTodayTime({ ...timeSlotPayload, employeeId }, true);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst timer = await this.electronService.ipcRenderer.invoke('STOP_TIMER', {\r\n\t\t\t\t\t\t\t\tquitApp: this.quitApp\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\ttimeLog = await this.timeTrackerService.toggleApiStop({\r\n\t\t\t\t\t\t\t\t...apiParams,\r\n\t\t\t\t\t\t\t\t...timer,\r\n\t\t\t\t\t\t\t\tstoppedAt: new Date()\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tconst isDeleted = await this.timeTrackerService.deleteTimeSlots(timeSlotPayload);\r\n\r\n\t\t\t\t\t\t\tif (isDeleted) {\r\n\t\t\t\t\t\t\t\tconsole.log('SUCCESS: Deleted');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.warn('WARN: Unexpected error appears.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tasapScheduler.schedule(async () => {\r\n\t\t\t\t\t\t\tevent.sender.send('update_session', { ...timeLog });\r\n\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tconst timeSlotId = arg.timer?.timeslotId;\r\n\r\n\t\t\t\t\t\t\t\tawait this.electronService.ipcRenderer.invoke('UPDATE_SYNCED_TIMER', {\r\n\t\t\t\t\t\t\t\t\tlastTimer: timeLog,\r\n\t\t\t\t\t\t\t\t\t...arg.timer,\r\n\t\t\t\t\t\t\t\t\t...(timeSlotId && { timeSlotId })\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._isOffline || isReadyForDeletion) {\r\n\t\t\t\t\t\tthis.refreshTimer();\r\n\t\t\t\t\t\tthis._toastrNotifier.success(notification.message);\r\n\t\t\t\t\t\tthis._nativeNotifier.success(notification.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('update_view', (event, arg) => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tconst idle = arg?.idleDuration ?? 0;\r\n\t\t\t\tthis._lastTotalWorkedToday$.next(this._lastTotalWorkedToday - idle);\r\n\t\t\t\tthis._lastTotalWorkedWeek$.next(this._lastTotalWorkedWeek - idle);\r\n\r\n\t\t\t\tawait this.electronService.ipcRenderer.invoke('UPDATE_SYNCED_TIMER', {\r\n\t\t\t\t\t...arg?.timer,\r\n\t\t\t\t\tstartedAt: arg?.stoppedAt\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (this.start) {\r\n\t\t\t\t\tevent.sender.send('update_session', arg);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('auth_success_tray_init', (event, arg) => {\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tif (!this._isReady) {\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('time_tracker_ready');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('emergency_stop', (event, arg) => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tconsole.log('Emergency stop');\r\n\r\n\t\t\t\tif (this.start) {\r\n\t\t\t\t\tconsole.log('Emergency stop timer');\r\n\t\t\t\t\tawait this.stopTimer(!this.isRemoteTimer, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('clear_store', (event, arg) => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tawait this.getTimerStatus(this.argFromMain);\r\n\t\t\t\tthis._store.clear();\r\n\t\t\t\tlocalStorage.clear();\r\n\t\t\t\tevent.sender.send('remove_current_user');\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('interrupted-sequences', (event, args: ISequence[]) =>\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tif (this._isLockSyncProcess || this.isRemoteTimer) {\r\n\t\t\t\t\tthis._inQueue$.next({\r\n\t\t\t\t\t\t...this.inQueue,\r\n\t\t\t\t\t\tinProgress: false\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._isLockSyncProcess = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._inQueue$.next({\r\n\t\t\t\t\t...this.inQueue,\r\n\t\t\t\t\tinProgress: true\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log('🛠 - Preprocessing sequence');\r\n\t\t\t\tconst sequenceQueue = new InterruptedSequenceQueue(\r\n\t\t\t\t\tthis.electronService,\r\n\t\t\t\t\tthis._errorHandlerService,\r\n\t\t\t\t\tthis._store,\r\n\t\t\t\t\tthis._timeSlotQueueService,\r\n\t\t\t\t\tthis.timeTrackerService,\r\n\t\t\t\t\tthis._timeTrackerStatus\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log('⌗', args);\r\n\t\t\t\tfor (const arg of args) sequenceQueue.enqueue(arg);\r\n\t\t\t\targs = []; // empty the array\r\n\t\t\t\tconsole.log('🚀 - Begin processing interrupted sequence queue');\r\n\t\t\t\tawait sequenceQueue.process();\r\n\t\t\t\tconsole.log('🚨 - End processing interrupted sequence queue');\r\n\t\t\t\tasapScheduler.schedule(async () => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait this.electronService.ipcRenderer.invoke('FINISH_SYNCED_TIMER');\r\n\t\t\t\t\t\tthis._isLockSyncProcess = false;\r\n\t\t\t\t\t\tif (!this.start) {\r\n\t\t\t\t\t\t\tthis.refreshTimer();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log('✅ - Finish synced');\r\n\t\t\t\t\t\tif (this.inQueue.size > 0) {\r\n\t\t\t\t\t\t\tthis.electronService.ipcRenderer.send('check-waiting-sequences');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.electronService.ipcRenderer.on('preferred_language_change', (event, language: LanguagesEnum) => {\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis._languageSelectorService.setLanguage(language, this._translateService);\r\n\t\t\t\tTimeTrackerDateManager.locale(language);\r\n\t\t\t\tasyncScheduler.schedule(() => this._loadSmartTableSettings(), 150);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tfrom(this.electronService.ipcRenderer.invoke('PREFERRED_LANGUAGE'))\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((language: LanguagesEnum) => {\r\n\t\t\t\t\tthis._languageSelectorService.setLanguage(language, this._translateService);\r\n\t\t\t\t\tTimeTrackerDateManager.locale(language);\r\n\t\t\t\t\tasyncScheduler.schedule(() => this._loadSmartTableSettings(), 150);\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\r\n\t\tthis.electronService.ipcRenderer.on('sleep_remote_lock', (event, state: boolean) => {\r\n\t\t\tthis._ngZone.run(async () => {\r\n\t\t\t\tof(state)\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tdistinctUntilChange(),\r\n\t\t\t\t\t\ttap((isPaused: boolean) => (this._remoteSleepLock = isPaused)),\r\n\t\t\t\t\t\tfilter((isPaused: boolean) => !!isPaused && this.start),\r\n\t\t\t\t\t\tconcatMap(() => this.toggleStart(false, false)),\r\n\t\t\t\t\t\tuntilDestroyed(this)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.subscribe();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.electronService.ipcRenderer.on('ready_to_show_renderer', (event, arg) => {\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tif (!this._isReady) {\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('time_tracker_ready');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t\tStart/Stop Timer\r\n\t\tif val is true, we start the timer\r\n\t\tif val is false, we stop the timer\r\n\t */\r\n\tasync toggleStart(val, onClick = true) {\r\n\t\t// check that user is authorized to track time. If not, we return.\r\n\t\tif (val && !this.start && !this._passedAllAuthorizations()) return;\r\n\r\n\t\tthis.loading = true;\r\n\r\n\t\tif (!val) {\r\n\t\t\tconsole.log('Stop tracking');\r\n\r\n\t\t\tawait this.stopTimer(onClick);\r\n\r\n\t\t\tthis.refreshTimer();\r\n\r\n\t\t\tthis.loading = false;\r\n\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconsole.log('Start tracking');\r\n\r\n\t\t\t// check that required inputs are set before we can start timer\r\n\t\t\tif (this.validationField()) {\r\n\t\t\t\tconsole.log('Validation passed');\r\n\r\n\t\t\t\tif (!this.start) {\r\n\t\t\t\t\tconsole.log('Starting timer');\r\n\t\t\t\t\tawait this.startTimer(onClick);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Timer is already running');\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.refreshTimer();\r\n\t\t\t} else {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tconsole.log('Error', 'validation failed');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync setTime({ second }) {\r\n\t\tif (second < this._lastTime) this._lastTime = 0;\r\n\t\tconst dt = second - this._lastTime;\r\n\t\tthis._lastTotalWorkedToday$.next(this._lastTotalWorkedToday + dt);\r\n\t\tthis._lastTotalWorkedWeek$.next(this._lastTotalWorkedWeek + dt);\r\n\t\tthis._lastTime = second;\r\n\t\tthis._timeRun$.next(moment.duration(second, 'seconds').format('hh:mm:ss', { trim: false }));\r\n\t\tif (second % 5 === 0) {\r\n\t\t\tawait this._activityWatchViewService.pingActivityWatchServer();\r\n\t\t\tif (this.lastScreenCapture.createdAt) {\r\n\t\t\t\tthis.lastScreenCapture$.next({\r\n\t\t\t\t\t...this.lastScreenCapture,\r\n\t\t\t\t\ttextTime: moment(this.lastScreenCapture.createdAt).fromNow()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tawait this.resetAtMidnight();\r\n\t}\r\n\r\n\tpublic async startTimer(onClick = true): Promise<void> {\r\n\t\ttry {\r\n\t\t\tthis.loading = true;\r\n\r\n\t\t\tif (onClick) {\r\n\t\t\t\tawait this.getTodayTime(this.argFromMain);\r\n\t\t\t\tthis._startMode = TimerStartMode.MANUAL;\r\n\t\t\t} else {\r\n\t\t\t\tthis._startMode = TimerStartMode.REMOTE;\r\n\t\t\t}\r\n\r\n\t\t\tthis.start$.next(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tthis.electronService.ipcRenderer.send('update_tray_start');\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('Error in update_tray_start', error);\r\n\t\t\t}\r\n\r\n\t\t\tconst timer = await this.electronService.ipcRenderer.invoke('START_TIMER', {\r\n\t\t\t\tprojectId: this.projectSelect,\r\n\t\t\t\ttaskId: this.taskSelect,\r\n\t\t\t\tnote: this.note,\r\n\t\t\t\torganizationContactId: this.organizationContactId,\r\n\t\t\t\taw: {\r\n\t\t\t\t\thost: this._environment?.AWHost,\r\n\t\t\t\t\tisAw: this._activityWatchViewService.aw\r\n\t\t\t\t},\r\n\t\t\t\ttimeLog: null,\r\n\t\t\t\tisRemoteTimer: this.isRemoteTimer,\r\n\t\t\t\torganizationTeamId: this.teamSelect\r\n\t\t\t});\r\n\r\n\t\t\t// update counter\r\n\t\t\tif (this.isRemoteTimer) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('update_session', {\r\n\t\t\t\t\t\tstartedAt: this._timeTrackerStatus.remoteTimer.startedAt\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log('Error in update_session', error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tawait this._toggle(timer, onClick);\r\n\r\n\t\t\tif (this._startMode === TimerStartMode.MANUAL) {\r\n\t\t\t\tconsole.log('Taking screen capture in startTimer');\r\n\r\n\t\t\t\tconst activities = await this.electronService.ipcRenderer.invoke('TAKE_SCREEN_CAPTURE', {\r\n\t\t\t\t\tquitApp: this.quitApp\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconsole.log('Sending activities');\r\n\r\n\t\t\t\tawait this.sendActivities(activities);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log('Updating Task Status');\r\n\t\t\tawait this.updateTaskStatus();\r\n\r\n\t\t\tconsole.log('Updating Organization Team Employee');\r\n\t\t\tawait this.updateOrganizationTeamEmployee();\r\n\r\n\t\t\tthis.electronService.ipcRenderer.send('request_permission');\r\n\t\t} catch (error) {\r\n\t\t\tthis._startMode = TimerStartMode.STOP;\r\n\t\t\tthis.start$.next(false);\r\n\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t} finally {\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async stopTimer(onClick = true, isEmergency = false): Promise<void> {\r\n\t\ttry {\r\n\t\t\tthis.loading = true;\r\n\r\n\t\t\tconst config = { quitApp: this.quitApp, isEmergency };\r\n\r\n\t\t\tif (this._startMode === TimerStartMode.MANUAL) {\r\n\t\t\t\tconsole.log('Stopping timer');\r\n\t\t\t\tconst timer = await this.electronService.ipcRenderer.invoke('STOP_TIMER', config);\r\n\r\n\t\t\t\tconsole.log('Toggling timer');\r\n\t\t\t\tawait this._toggle(timer, onClick);\r\n\r\n\t\t\t\t// when we stop timer, let's try to make final screenshot in background after tiny delay of 1 sec\r\n\t\t\t\tsetTimeout(async () => {\r\n\t\t\t\t\tconsole.log('Taking screen capture');\r\n\t\t\t\t\tconst activities = await this.electronService.ipcRenderer.invoke('TAKE_SCREEN_CAPTURE', config);\r\n\r\n\t\t\t\t\tconsole.log('Sending activities');\r\n\t\t\t\t\tawait this.sendActivities(activities);\r\n\t\t\t\t}, 1000);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Stopping timer');\r\n\t\t\t\tconst timer = await this.electronService.ipcRenderer.invoke('STOP_TIMER', config);\r\n\r\n\t\t\t\tconsole.log('Toggling timer');\r\n\t\t\t\tawait this._toggle(timer, onClick);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log('Updating Tray stop');\r\n\r\n\t\t\tthis.electronService.ipcRenderer.send('update_tray_stop');\r\n\r\n\t\t\tthis._startMode = TimerStartMode.STOP;\r\n\r\n\t\t\tif (this._isSpecialLogout) {\r\n\t\t\t\tthis._isSpecialLogout = false;\r\n\t\t\t\t// wait 3 sec and logout\r\n\t\t\t\tawait this.logout();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.quitApp) {\r\n\t\t\t\tconsole.log('Quitting app from stopTimer after 3 seconds delay');\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.electronService.remote.app.quit();\r\n\t\t\t\t}, 3000);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('[ERROR_STOP_TIMER]', error);\r\n\t\t} finally {\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync getTask(arg) {\r\n\t\ttry {\r\n\t\t\tconst tasks = await this.timeTrackerService.getTasks(arg);\r\n\t\t\tif (tasks.length) {\r\n\t\t\t\tconst statistics = await this.timeTrackerService.getTasksStatistics({\r\n\t\t\t\t\t...arg,\r\n\t\t\t\t\ttaskIds: tasks.map((task) => task.id)\r\n\t\t\t\t});\r\n\t\t\t\tthis._tasks$.next(this.merge(tasks, statistics));\r\n\t\t\t\tif (!this._tasks$.getValue().some((task) => task.id === this.taskSelect)) {\r\n\t\t\t\t\tthis.taskSelect = null;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._tasks$.next([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis._tasks$.next([]);\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getProjects(arg) {\r\n\t\ttry {\r\n\t\t\tconst projects = await this.timeTrackerService.getProjects(arg);\r\n\r\n\t\t\t// Check if the selected project is not in the response\r\n\t\t\tif (projects && !projects.some((project) => project.id === this.projectSelect)) {\r\n\t\t\t\tthis.projectSelect = null;\r\n\t\t\t\tthis.argFromMain.projectId = null;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the projects observable with the response (or an empty array if it's falsy)\r\n\t\t\tthis._projects$.next(projects || []);\r\n\t\t} catch (error) {\r\n\t\t\t// Handle errors by logging them and updating the projects observable with an empty array\r\n\t\t\tconsole.error('ERROR', error);\r\n\t\t\tthis._projects$.next([]);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getClient(arg) {\r\n\t\ttry {\r\n\t\t\tconst res = await this.timeTrackerService.getClient(arg);\r\n\t\t\tthis._organizationContacts$.next(res || []);\r\n\t\t} catch (error) {\r\n\t\t\tthis._organizationContacts$.next([]);\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Get last running/completed timer status\r\n\t * Get last running/completed timer status\r\n\t * Get last running/completed timer status\r\n\t */\r\n\tasync getTimerStatus(arg) {\r\n\t\tif (this._isOffline || !arg?.organizationId || !arg?.tenantId) return;\r\n\t\ttry {\r\n\t\t\tthis.timerStatus = await this.timeTrackerService.getTimerStatus(arg);\r\n\t\t\tconsole.log('Get Last Timer Status:', this.timerStatus);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync setClient(item, dialog) {\r\n\t\tif (this.start) {\r\n\t\t\tthis.open(dialog, {\r\n\t\t\t\ttype: this.dialogType.changeClient.name,\r\n\t\t\t\tval: item\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.selectClient(item);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('ERROR', error);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async selectClient(item: string): Promise<void> {\r\n\t\tthis.organizationContactId = item;\r\n\t\tthis.argFromMain.organizationContactId = item;\r\n\t\tthis.electronService.ipcRenderer.send('update_project_on', {\r\n\t\t\torganizationContactId: this.organizationContactId\r\n\t\t});\r\n\t\tif (item) {\r\n\t\t\tawait this.getProjects({\r\n\t\t\t\t...this.argFromMain,\r\n\t\t\t\torganizationContactId: this.organizationContactId\r\n\t\t\t});\r\n\t\t\tthis._tasks$.next([]);\r\n\t\t\tthis.teamSelect = null;\r\n\t\t\tthis.errors.client = false;\r\n\t\t} else {\r\n\t\t\tawait this.getProjects(this.argFromMain);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async setProject(item: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst parallelizedTasks: Promise<void>[] = [\r\n\t\t\t\tthis.getTeams({\r\n\t\t\t\t\t...this.argFromMain,\r\n\t\t\t\t\tprojectId: item\r\n\t\t\t\t}),\r\n\t\t\t\tthis.getTask({\r\n\t\t\t\t\t...this.argFromMain,\r\n\t\t\t\t\tprojectId: item\r\n\t\t\t\t})\r\n\t\t\t];\r\n\t\t\tthis.projectSelect = item;\r\n\t\t\tthis.argFromMain.projectId = item;\r\n\t\t\tthis.electronService.ipcRenderer.send('update_project_on', {\r\n\t\t\t\tprojectId: this.projectSelect\r\n\t\t\t});\r\n\t\t\tif (item) {\r\n\t\t\t\tthis.errors.project = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.errorBind();\r\n\t\t\t}\r\n\t\t\tawait Promise.allSettled(parallelizedTasks);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setTask(item: string): void {\r\n\t\tthis.taskSelect = item;\r\n\t\tthis.electronService.ipcRenderer.send('update_project_on', {\r\n\t\t\ttaskId: this.taskSelect\r\n\t\t});\r\n\t\tif (item) this.errors.task = false;\r\n\t}\r\n\r\n\tpublic descriptionChange(e): void {\r\n\t\tif (e) this.errors.note = false;\r\n\t\tthis.clearSelectedTaskAndRefresh();\r\n\t\tthis._clearItem();\r\n\t\tthis.electronService.ipcRenderer.send('update_project_on', {\r\n\t\t\tnote: this.note\r\n\t\t});\r\n\t}\r\n\r\n\tpublic validationField(): boolean {\r\n\t\tthis.errorBind();\r\n\t\tconst errors = [];\r\n\t\tconst requireField = {\r\n\t\t\ttask: 'requireTask',\r\n\t\t\tproject: 'requireProject',\r\n\t\t\tclient: 'requireClient',\r\n\t\t\tnote: 'requireDescription'\r\n\t\t};\r\n\t\tObject.keys(this.errors).forEach((key) => {\r\n\t\t\tif (this.errors[key] && this.userOrganization[requireField[key]]) errors.push(true);\r\n\t\t});\r\n\t\treturn errors.length === 0;\r\n\t}\r\n\r\n\tpublic errorBind(): void {\r\n\t\tif (!this.projectSelect && this.userOrganization.requireProject) this.errors.project = true;\r\n\t\tif (!this.taskSelect && this.userOrganization.requireTask) this.errors.task = true;\r\n\t\tif (!this.organizationContactId && this.userOrganization.requireClient) this.errors.client = true;\r\n\t\tif (!this.note && this.userOrganization.requireDescription) this.errors.note = true;\r\n\t}\r\n\r\n\tpublic doShoot(): void {\r\n\t\tthis.electronService.ipcRenderer.send('screen_shoot');\r\n\t}\r\n\r\n\tpublic determineScreenshot(screenSize): { width: number; height: number } {\r\n\t\tconst maxDimension = Math.max(screenSize.width, screenSize.height);\r\n\t\tconsole.log(maxDimension);\r\n\r\n\t\treturn {\r\n\t\t\twidth: Math.floor(maxDimension * window.devicePixelRatio),\r\n\t\t\theight: Math.floor(maxDimension * window.devicePixelRatio)\r\n\t\t};\r\n\t}\r\n\r\n\tpublic async getTodayTime(arg, isForcedSync?: boolean): Promise<void> {\r\n\t\tif (this._isOffline) return;\r\n\t\ttry {\r\n\t\t\tconst res = await this.timeTrackerService.getTimeLogs(arg);\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.countDuration(res, isForcedSync);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async getLastTimeSlotImage(arg): Promise<void> {\r\n\t\tif (this._isOffline) return;\r\n\t\ttry {\r\n\t\t\tconst res = await this.timeTrackerService.getTimeSlot(arg);\r\n\t\t\tlet { screenshots }: any = res;\r\n\t\t\tconsole.log('Get Last Timeslot Image Response:', screenshots);\r\n\t\t\tif (screenshots && screenshots.length > 0) {\r\n\t\t\t\tscreenshots = _.sortBy(screenshots, 'recordedAt').reverse();\r\n\t\t\t\tconst [lastCaptureScreen] = screenshots;\r\n\t\t\t\tconsole.log('Last Capture Screen:', lastCaptureScreen);\r\n\t\t\t\tthis.lastScreenCapture$.next(lastCaptureScreen);\r\n\t\t\t\tawait this.localImage(this.lastScreenCapture);\r\n\t\t\t\tthis.screenshots$.next(screenshots);\r\n\t\t\t\tthis.lastTimeSlot = res;\r\n\t\t\t}\r\n\t\t\tif (this.lastScreenCapture.recordedAt) {\r\n\t\t\t\tthis.lastScreenCapture$.next({\r\n\t\t\t\t\t...this.lastScreenCapture,\r\n\t\t\t\t\ttextTime: moment(this.lastScreenCapture.recordedAt).fromNow()\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateImageUrl();\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async localImage(img, originalBase64Image?: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst convScreenshot =\r\n\t\t\t\timg && img.thumbUrl ? await this._imageViewerService.getBase64ImageFromUrl(img.thumbUrl) : img;\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\t'lastScreenCapture',\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tthumbUrl: convScreenshot,\r\n\t\t\t\t\ttextTime: moment().fromNow(),\r\n\t\t\t\t\tcreatedAt: Date.now(),\r\n\t\t\t\t\trecordedAt: Date.now(),\r\n\t\t\t\t\t...(originalBase64Image && {\r\n\t\t\t\t\t\tfullUrl: originalBase64Image\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updateImageUrl(e?: string): void {\r\n\t\tlet localLastScreenCapture: any = localStorage.getItem('lastScreenCapture');\r\n\t\tif (localLastScreenCapture) {\r\n\t\t\tlocalLastScreenCapture = JSON.parse(localLastScreenCapture);\r\n\t\t\tthis.lastScreenCapture$.next({\r\n\t\t\t\t...localLastScreenCapture\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (e) {\r\n\t\t\tconsole.log('image error', e);\r\n\t\t\tthis.lastScreenCapture$.next({});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async setTimerDetails(): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst res: any = await this.timeTrackerService.getUserDetail();\r\n\t\t\tif (res.employee && res.employee.organization) {\r\n\t\t\t\tthis.userData = res;\r\n\t\t\t\tif (res.role && res.role.rolePermissions) {\r\n\t\t\t\t\tthis._store.userRolePermissions = res.role.rolePermissions;\r\n\t\t\t\t\tthis.userPermission = res.role.rolePermissions\r\n\t\t\t\t\t\t.map((permission) => (permission.enabled ? permission.permission : null))\r\n\t\t\t\t\t\t.filter((permission) => !!permission);\r\n\t\t\t\t\tthis._permissions$.next(this.userPermission);\r\n\t\t\t\t}\r\n\t\t\t\tif (res.employee.reWeeklyLimit) {\r\n\t\t\t\t\tthis._weeklyLimit$.next(res.employee.reWeeklyLimit);\r\n\t\t\t\t}\r\n\t\t\t\tthis.userOrganization$.next(res.employee.organization);\r\n\t\t\t\tlet isAllowScreenCapture = true;\r\n\t\t\t\tconst employee = res.employee;\r\n\t\t\t\tif ('allowScreenshotCapture' in employee || 'allowScreenshotCapture' in employee.organization) {\r\n\t\t\t\t\tisAllowScreenCapture =\r\n\t\t\t\t\t\temployee.allowScreenshotCapture === true &&\r\n\t\t\t\t\t\temployee.organization.allowScreenshotCapture === true;\r\n\t\t\t\t}\r\n\t\t\t\tthis.electronService.ipcRenderer.send('update_timer_auth_config', {\r\n\t\t\t\t\tactivityProofDuration: res.employee.organization.activityProofDuration,\r\n\t\t\t\t\tinactivityTimeLimit: res.employee.organization.inactivityTimeLimit,\r\n\t\t\t\t\tallowTrackInactivity: res.employee.organization.allowTrackInactivity,\r\n\t\t\t\t\tisRemoveIdleTime: res.employee.organization.isRemoveIdleTime,\r\n\t\t\t\t\tallowScreenshotCapture: isAllowScreenCapture\r\n\t\t\t\t});\r\n\t\t\t\tconst enforced = res.employee.organization.enforced;\r\n\t\t\t\tconst settings = {\r\n\t\t\t\t\ttimer: { updatePeriod: res.employee.organization.screenshotFrequency },\r\n\t\t\t\t\ttrackOnPcSleep: res.employee.organization.trackOnSleep,\r\n\t\t\t\t\trandomScreenshotTime: res.employee.organization.randomScreenshot\r\n\t\t\t\t};\r\n\t\t\t\tthis.electronService.ipcRenderer.send('update_app_setting', {\r\n\t\t\t\t\tvalues: {\r\n\t\t\t\t\t\tenforced,\r\n\t\t\t\t\t\t...(enforced && settings)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.isTrackingEnabled =\r\n\t\t\t\t\ttypeof res.employee.isTrackingEnabled !== 'undefined' ? res.employee.isTrackingEnabled : true;\r\n\t\t\t\tthis.electronService.ipcRenderer.send(this.isTrackingEnabled ? 'show_ao' : 'hide_ao');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('[User Error]: ', error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic showImage(): void {\r\n\t\tthis.electronService.ipcRenderer.send('show_image', this.screenshots);\r\n\t}\r\n\r\n\tpublic open(dialog: TemplateRef<any>, option): void {\r\n\t\ttry {\r\n\t\t\tthis.selectedTimeSlot = this.lastTimeSlot;\r\n\t\t\tthis._dialog = this.dialogService.open(dialog, {\r\n\t\t\t\tcontext: this.dialogType[option.type].message,\r\n\t\t\t\tbackdropClass: 'backdrop-blur'\r\n\t\t\t});\r\n\t\t\tthis._dialog.onClose.subscribe(async (selectedOption) => {\r\n\t\t\t\tif (selectedOption) {\r\n\t\t\t\t\tswitch (option.type) {\r\n\t\t\t\t\t\tcase this.dialogType.changeClient.name:\r\n\t\t\t\t\t\t\tawait this.selectClient(option.val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase this.dialogType.deleteLog.name:\r\n\t\t\t\t\t\t\tawait this.deleteTimeSlot();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase this.dialogType.timeTrackingOption.name:\r\n\t\t\t\t\t\t\tthis._isOpenDialog = false;\r\n\t\t\t\t\t\t\tawait this.toggleStart(true);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.start && option.type === this.dialogType.timeTrackingOption.name) {\r\n\t\t\t\t\tthis._isOpenDialog = false;\r\n\t\t\t\t\tawait this.stopTimer();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync deleteTimeSlot(): Promise<void> {\r\n\t\tthis._isOffline\r\n\t\t\t? await this.electronService.ipcRenderer.invoke('DELETE_TIME_SLOT', this.screenshots[0].id)\r\n\t\t\t: await this._deleteSyncedTimeslot();\r\n\t}\r\n\r\n\tasync removeInvalidTimeLog(arg) {\r\n\t\ttry {\r\n\t\t\tawait this.getTimerStatus(arg);\r\n\t\t\tconsole.log('this is time status', this.timerStatus);\r\n\t\t\tif (this.timerStatus.running) {\r\n\t\t\t\tawait this.timeTrackerService.toggleApiStop(arg);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error get last status timer');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic openSetting(): void {\r\n\t\tthis.electronService.ipcRenderer.send('open_setting_window');\r\n\t}\r\n\r\n\tpublic expand(): void {\r\n\t\tthis.isCollapse$.next(this.isExpand);\r\n\t\tthis.electronService.ipcRenderer.send('expand', !this.isExpand);\r\n\t}\r\n\r\n\tpublic handleRowSelection(selectionEvent): void {\r\n\t\tif (this.isNoRowSelected(selectionEvent)) {\r\n\t\t\tthis.clearSelectedTaskAndRefresh();\r\n\t\t} else {\r\n\t\t\tconst selectedRow = selectionEvent.selected[0];\r\n\t\t\tthis.handleSelectedTaskChange(selectedRow.id);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isNoRowSelected(selectionEvent): boolean {\r\n\t\treturn !selectionEvent.selected.length;\r\n\t}\r\n\r\n\tprivate clearSelectedTaskAndRefresh(): void {\r\n\t\tthis.setTask(null);\r\n\t}\r\n\r\n\tprivate handleSelectedTaskChange(selectedTaskId): void {\r\n\t\tif (this.isDifferentTask(selectedTaskId)) {\r\n\t\t\tthis.setTask(selectedTaskId);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isDifferentTask(selectedTaskId): boolean {\r\n\t\treturn this.taskSelect !== selectedTaskId;\r\n\t}\r\n\r\n\tpublic onSearch(query: string = ''): void {\r\n\t\tif (query) {\r\n\t\t\tthis._sourceData.setFilter(\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfield: 'title',\r\n\t\t\t\t\t\tsearch: query\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfield: 'taskNumber',\r\n\t\t\t\t\t\tsearch: query\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis._sourceData.reset();\r\n\t\t\tthis._sourceData.refresh();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async getScreenshot(arg, isThumb: boolean | null = false): Promise<any> {\r\n\t\ttry {\r\n\t\t\tlet thumbSize = this.determineScreenshot(arg.screenSize);\r\n\r\n\t\t\tif (isThumb)\r\n\t\t\t\tthumbSize = {\r\n\t\t\t\t\twidth: 320,\r\n\t\t\t\t\theight: 240\r\n\t\t\t\t};\r\n\r\n\t\t\tconst sources = await this.electronService.desktopCapturer.getSources({\r\n\t\t\t\ttypes: ['screen'],\r\n\t\t\t\tthumbnailSize: thumbSize\r\n\t\t\t});\r\n\r\n\t\t\tconst screens = [];\r\n\r\n\t\t\tsources.forEach((source) => {\r\n\t\t\t\tthis._loggerService.log.info('screenshot_res', source);\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.appSetting &&\r\n\t\t\t\t\tthis.appSetting.monitor &&\r\n\t\t\t\t\tthis.appSetting.monitor.captured &&\r\n\t\t\t\t\tthis.appSetting.monitor.captured === 'active-only'\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (arg.activeWindow && source.display_id === arg.activeWindow.id.toString()) {\r\n\t\t\t\t\t\tscreens.push({\r\n\t\t\t\t\t\t\timg: source.thumbnail.toPNG(),\r\n\t\t\t\t\t\t\tname: source.name,\r\n\t\t\t\t\t\t\tid: source.display_id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (arg.activeWindow) {\r\n\t\t\t\t\t\tscreens.push({\r\n\t\t\t\t\t\t\timg: source.thumbnail.toPNG(),\r\n\t\t\t\t\t\t\tname: source.name,\r\n\t\t\t\t\t\t\tid: source.display_id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._loggerService.log.info('screenshot data', screens);\r\n\r\n\t\t\treturn screens;\r\n\t\t} catch (error) {\r\n\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async sendActivities(arg): Promise<void> {\r\n\t\tconsole.log('sendActivities');\r\n\r\n\t\tif (this.isRemoteTimer) {\r\n\t\t\tconsole.log('isRemoteTimer exit from sendActivities');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// screenshot process\r\n\t\tlet screenshotImg = [];\r\n\r\n\t\tlet thumbScreenshotImg = [];\r\n\r\n\t\ttry {\r\n\t\t\tif (!arg.displays) {\r\n\t\t\t\tscreenshotImg = await this.getScreenshot(arg, false);\r\n\t\t\t\tthumbScreenshotImg = await this.getScreenshot(arg, true);\r\n\t\t\t} else {\r\n\t\t\t\tscreenshotImg = arg.displays;\r\n\t\t\t}\r\n\r\n\t\t\t// notify\r\n\t\t\tthis.screenshotNotify(arg, thumbScreenshotImg);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error on screenshot', error);\r\n\t\t}\r\n\r\n\t\tconst paramActivity = {\r\n\t\t\temployeeId: arg.employeeId,\r\n\t\t\tprojectId: arg.projectId,\r\n\t\t\tduration: arg.duration,\r\n\t\t\tkeyboard: arg.keyboard,\r\n\t\t\tmouse: arg.mouse,\r\n\t\t\toverall: arg.system,\r\n\t\t\tstartedAt: arg.startedAt,\r\n\t\t\tactivities: arg.activities,\r\n\t\t\ttimeLogId: arg.timeLogId,\r\n\t\t\torganizationId: arg.organizationId,\r\n\t\t\ttenantId: arg.tenantId,\r\n\t\t\torganizationContactId: arg.organizationContactId,\r\n\t\t\tapiHost: arg.apiHost,\r\n\t\t\ttoken: arg.token,\r\n\t\t\tisAw: arg.isAw,\r\n\t\t\tisAwConnected: arg.isAwConnected\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst resActivities: any = await this.timeTrackerService.pushToTimeSlot(paramActivity);\r\n\r\n\t\t\tconsole.log('Result of TimeSlot', resActivities);\r\n\r\n\t\t\tconst timeLogs = resActivities.timeLogs;\r\n\r\n\t\t\tif (!timeLogs?.length) {\r\n\t\t\t\t// Stop process if there is no time logs associate to activity result.\r\n\t\t\t\tconsole.error('[@SendActivities]', 'No time logs');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.electronService.ipcRenderer.send('return_time_slot', {\r\n\t\t\t\ttimerId: arg.timerId,\r\n\t\t\t\ttimeSlotId: resActivities.id,\r\n\t\t\t\tquitApp: arg.quitApp,\r\n\t\t\t\ttimeLogs: timeLogs\r\n\t\t\t});\r\n\r\n\t\t\tthis.electronService.ipcRenderer.send('remove_aw_local_data');\r\n\r\n\t\t\tthis.electronService.ipcRenderer.send('remove_wakatime_local_data', {\r\n\t\t\t\tidsWakatime: arg.idsWakatime\r\n\t\t\t});\r\n\r\n\t\t\tif (!this._isOffline && screenshotImg.length > 0) {\r\n\t\t\t\t/* Converting the screenshot image to a base64 string. */\r\n\t\t\t\tconst original = `data:image/png;base64, ${this.buffToB64(screenshotImg[0])}`;\r\n\r\n\t\t\t\t/* Compressing the image to 320x200 */\r\n\t\t\t\tconst compressed = await compressImage(original, 320, 200);\r\n\r\n\t\t\t\t/*  Saving compressed image to the local storage. */\r\n\t\t\t\tawait this.localImage(compressed, original);\r\n\r\n\t\t\t\t/* Update image waiting for server response*/\r\n\t\t\t\tthis.updateImageUrl(null);\r\n\r\n\t\t\t\t/* Adding the last screen capture to the screenshots array. */\r\n\t\t\t\tthis.screenshots$.next([...this.screenshots, this.lastScreenCapture]);\r\n\t\t\t}\r\n\r\n\t\t\t// upload screenshot to TimeSlot api\r\n\t\t\ttry {\r\n\t\t\t\tawait Promise.all(\r\n\t\t\t\t\tscreenshotImg.map(async (img) => {\r\n\t\t\t\t\t\treturn await this.uploadsScreenshot(arg, img, resActivities.id);\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('ERROR', error);\r\n\t\t\t}\r\n\r\n\t\t\tconst timeSlotId = resActivities.id;\r\n\r\n\t\t\tconsole.log('Get last time slot image');\r\n\t\t\tawait this.getLastTimeSlotImage({\r\n\t\t\t\t...arg,\r\n\t\t\t\ttoken: this.token,\r\n\t\t\t\tapiHost: this.apiHost,\r\n\t\t\t\ttimeSlotId\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log('Sending create-synced-interval event...');\r\n\t\t\tthis.electronService.ipcRenderer.send('create-synced-interval', {\r\n\t\t\t\t...paramActivity,\r\n\t\t\t\tremoteId: timeSlotId,\r\n\t\t\t\tb64Imgs: []\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error send to api timeslot', error);\r\n\t\t\tthis._loggerService.log.error('Error send to api timeslot', error);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log('Sending failed_synced_timeslot event...');\r\n\t\t\t\tthis.electronService.ipcRenderer.send('failed_synced_timeslot', {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t...paramActivity,\r\n\t\t\t\t\t\tb64Imgs: screenshotImg.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tb64img: this.buffToB64(img),\r\n\t\t\t\t\t\t\t\tfileName: this.fileNameFormat(img)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Failed to send failed_synced_timeslot event', e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic screenshotNotify(arg, imgs: any[]): void {\r\n\t\tif (imgs.length > 0) {\r\n\t\t\tconst img: any = imgs[0];\r\n\t\t\timg.img = this.buffToB64(img);\r\n\t\t\tthis.electronService.ipcRenderer.send('show_screenshot_notif_window', img);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async uploadsScreenshot(arg, imgs: any[], timeSlotId: string): Promise<Object> {\r\n\t\tconst b64img = this.buffToB64(imgs);\r\n\t\tconst fileName = this.fileNameFormat(imgs);\r\n\t\ttry {\r\n\t\t\tconst resImg = await this.timeTrackerService.uploadImages(\r\n\t\t\t\t{ ...arg, timeSlotId },\r\n\t\t\t\t{\r\n\t\t\t\t\tb64Img: b64img,\r\n\t\t\t\t\tfileName: fileName\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn resImg;\r\n\t\t} catch (error) {\r\n\t\t\tthis._loggerService.log.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconvertToSlug(text: string) {\r\n\t\treturn text\r\n\t\t\t.toString()\r\n\t\t\t.toLowerCase()\r\n\t\t\t.replace(/\\s+/g, '-') // Replace spaces with -\r\n\t\t\t.replace(/\\-\\-+/g, '-') // Replace multiple - with single -\r\n\t\t\t.replace(/^-+/, '') // Trim - from start of text\r\n\t\t\t.replace(/-+$/, ''); // Trim - from end of text\r\n\t}\r\n\r\n\tbuffToB64(imgs) {\r\n\t\tconst bufferImg: Buffer = Buffer.isBuffer(imgs.img) ? imgs.img : Buffer.from(imgs.img);\r\n\t\tconst b64img = bufferImg.toString('base64');\r\n\t\treturn b64img;\r\n\t}\r\n\r\n\tfileNameFormat(imgs) {\r\n\t\tconst fileName = `screenshot-${moment().format('YYYYMMDDHHmmss')}-${imgs.name}.png`;\r\n\t\treturn this.convertToSlug(fileName);\r\n\t}\r\n\r\n\tpublic refreshTimer(): void {\r\n\t\tconsole.log('refresh timer');\r\n\t\tthis.loading = true;\r\n\t\ttry {\r\n\t\t\tthis._isRefresh$.next(true);\r\n\t\t\tthis.electronService.ipcRenderer.send('refresh-timer');\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('Error', err);\r\n\t\t} finally {\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic checkOnlineStatus(): boolean {\r\n\t\tif (navigator.onLine) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addTask(): void {\r\n\t\tthis.isAddTask = !this._isOffline && this._hasTaskPermission;\r\n\t\tif (!this.isAddTask) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.dialogService\r\n\t\t\t.open(TasksComponent, {\r\n\t\t\t\tcontext: {\r\n\t\t\t\t\temployee: this.userData,\r\n\t\t\t\t\thasProjectPermission: this.hasProjectPermission$.getValue(),\r\n\t\t\t\t\tselected: {\r\n\t\t\t\t\t\tprojectId: this.projectSelect,\r\n\t\t\t\t\t\tteamId: this.teamSelect,\r\n\t\t\t\t\t\tcontactId: this.organizationContactId\r\n\t\t\t\t\t},\r\n\t\t\t\t\tuserData: this.argFromMain\r\n\t\t\t\t},\r\n\t\t\t\tbackdropClass: 'backdrop-blur'\r\n\t\t\t})\r\n\t\t\t.onClose.pipe(\r\n\t\t\t\ttap(() => this.closeAddTask()),\r\n\t\t\t\tfilter((result) => !!result),\r\n\t\t\t\ttap((result) => this.callbackNewTask(result)),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\tpublic closeAddTask(): void {\r\n\t\tthis.isAddTask = false;\r\n\t\tthis.electronService.ipcRenderer.send('refresh-timer');\r\n\t}\r\n\r\n\tpublic callbackNewTask(e): void {\r\n\t\tif (e.isSuccess) {\r\n\t\t\tthis.toastrService.show(e.message, `Success`, {\r\n\t\t\t\tstatus: 'success'\r\n\t\t\t});\r\n\t\t\tthis.electronService.ipcRenderer.send('refresh-timer');\r\n\t\t} else {\r\n\t\t\tthis.toastrService.show(e.message, `Warning`, {\r\n\t\t\t\tstatus: 'danger'\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic showErrorMessage(msg): void {\r\n\t\tthis.toastrService.show(`${msg}`, `Warning`, {\r\n\t\t\tstatus: 'danger'\r\n\t\t});\r\n\t}\r\n\r\n\tpublic toggle(event: boolean) {\r\n\t\tthis._isOffline$.next(this._isOffline);\r\n\t}\r\n\r\n\t/**\r\n\t * It takes a date and returns a string\r\n\t * @param {Date} date - The date to humanize\r\n\t * @returns A string\r\n\t */\r\n\r\n\tpublic humanize(date: Date): string {\r\n\t\treturn moment(date).fromNow();\r\n\t}\r\n\r\n\t/* Adding a new project to the list of projects. */\r\n\tpublic addProject = async (name: string) => {\r\n\t\ttry {\r\n\t\t\tconst { tenantId } = this._store;\r\n\t\t\tconst organizationId = this._store.organizationId;\r\n\t\t\tconst request = {\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\towner: ProjectOwnerEnum.CLIENT,\r\n\t\t\t\t...(this.organizationContactId ? { organizationContactId: this.organizationContactId } : {})\r\n\t\t\t};\r\n\r\n\t\t\trequest['members'] = [{ ...this.userData.employee }];\r\n\r\n\t\t\tconsole.log('Request', request);\r\n\t\t\tconst project = await this.timeTrackerService.createNewProject(request, {\r\n\t\t\t\t...this.userData,\r\n\t\t\t\ttoken: this.token,\r\n\t\t\t\tapiHost: this.apiHost\r\n\t\t\t});\r\n\t\t\tconst projects = this._projects$.getValue();\r\n\t\t\tthis._projects$.next(projects.concat([project]));\r\n\t\t\tthis.projectSelect = project.id;\r\n\t\t\tthis._toastrNotifier.success(this._translateService.instant('TIMER_TRACKER.TOASTR.PROJECT_ADDED'));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t/* Adding a new task to the list of tasks. */\r\n\tpublic addNewTask = async (title: ITask['title']) => {\r\n\t\tif (!title) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst { tenantId, organizationId } = this._store;\r\n\t\tconst data = {\r\n\t\t\ttenantId,\r\n\t\t\torganizationId,\r\n\t\t\ttoken: this.token,\r\n\t\t\tapiHost: this.apiHost,\r\n\t\t\tprojectId: this.projectSelect\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst member: any = { ...this.userData.employee };\r\n\t\t\tconst task: any = await this.timeTrackerService.saveNewTask(data, {\r\n\t\t\t\ttitle,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\tstatus: TaskStatusEnum.IN_PROGRESS,\r\n\t\t\t\tdueDate: moment().add(1, 'day').utc().toDate(),\r\n\t\t\t\testimate: 3600,\r\n\t\t\t\t...(member.id && { members: [member] }),\r\n\t\t\t\t...(this.projectSelect && {\r\n\t\t\t\t\tprojectId: this.projectSelect,\r\n\t\t\t\t\tproject: this.selectedProject\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst tasks = this._tasks$.getValue();\r\n\t\t\tthis._tasks$.next(tasks.concat(task));\r\n\t\t\tthis.taskSelect = task.id;\r\n\t\t\tthis._toastrNotifier.success(this._translateService.instant('TIMER_TRACKER.TOASTR.TASK_ADDED'));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t};\r\n\r\n\t/* Creating a new contact for the organization. */\r\n\tpublic addContact = async (name: IOrganizationContact['name']) => {\r\n\t\ttry {\r\n\t\t\tconst { tenantId, organizationId } = this._store;\r\n\t\t\tconst member: any = { ...this.userData.employee };\r\n\t\t\tconst payload = {\r\n\t\t\t\tname,\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\tcontactType: ContactType.CLIENT,\r\n\t\t\t\t...(member.id && { members: [member] })\r\n\t\t\t};\r\n\t\t\tconst contact = await this.timeTrackerService.createNewContact(payload, {\r\n\t\t\t\t...this.userData,\r\n\t\t\t\ttoken: this.token,\r\n\t\t\t\tapiHost: this.apiHost\r\n\t\t\t});\r\n\t\t\tconst contacts = this._organizationContacts$.getValue();\r\n\t\t\tthis._organizationContacts$.next(contacts.concat([contact]));\r\n\t\t\tthis.organizationContactId = contact.id;\r\n\t\t\tthis._toastrNotifier.success(this._translateService.instant('TIMER_TRACKER.TOASTR.CLIENT_ADDED'));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic selectOrganization(organization: IOrganization) {\r\n\t\tconsole.log('Organization', organization);\r\n\t}\r\n\r\n\tpublic noLimit(value: number): boolean {\r\n\t\treturn value === Infinity;\r\n\t}\r\n\r\n\tpublic async logout() {\r\n\t\t// we wait 3 sec and then logout\r\n\t\tsetTimeout(async () => {\r\n\t\t\tawait firstValueFrom(this._authStrategy.logout());\r\n\t\t\tthis.electronService.ipcRenderer.send(\r\n\t\t\t\tthis._isRestartAndUpdate ? 'restart_and_update' : 'navigate_to_login'\r\n\t\t\t);\r\n\t\t\tlocalStorage.clear();\r\n\t\t}, 3000);\r\n\t}\r\n\r\n\tpublic async restart(): Promise<void> {\r\n\t\t// if timer's running as viewer we no need to restart\r\n\t\tif (this.isRemoteTimer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// wait 3 sec and then restart\r\n\t\tsetTimeout(async () => {\r\n\t\t\ttry {\r\n\t\t\t\t// lock restart process\r\n\t\t\t\tthis._isLockSyncProcess = true;\r\n\t\t\t\t// resolve promise and add debounce time to avoid riding\r\n\t\t\t\tawait lastValueFrom(\r\n\t\t\t\t\tfrom(this.toggleStart(false)).pipe(\r\n\t\t\t\t\t\tdebounceTime(200),\r\n\t\t\t\t\t\tconcatMap(() => this.toggleStart(true)),\r\n\t\t\t\t\t\tuntilDestroyed(this)\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// force stop timer\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait this.stopTimer(false, true);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error('Error in force stop timer', e);\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\t// unlock restart process\r\n\t\t\t\tthis._isLockSyncProcess = false;\r\n\t\t\t}\r\n\t\t}, 3000);\r\n\t}\r\n\r\n\tpublic async updateOrganizationTeamEmployee(): Promise<void> {\r\n\t\ttry {\r\n\t\t\tif (!this.taskSelect || !this.teamSelect) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst organizationTeamId = this.teamSelect;\r\n\t\t\tconst { tenantId, organizationId } = this._store;\r\n\t\t\tconst { employeeId } = this._store.user;\r\n\t\t\tconst activeTaskId = this.taskSelect;\r\n\t\t\tconst payload = {\r\n\t\t\t\tactiveTaskId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\torganizationId,\r\n\t\t\t\torganizationTeamId\r\n\t\t\t};\r\n\t\t\tawait this.timeTrackerService.updateOrganizationTeamEmployee(employeeId, payload);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async getTeams(arg?: any): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst teams = await this.timeTrackerService.getTeams(arg);\r\n\t\t\t// Check if the selected team is not in the response\r\n\t\t\tif (!teams.some((team) => team.id === this.teamSelect)) {\r\n\t\t\t\tthis.teamSelect = null;\r\n\t\t\t\tthis.argFromMain.organizationTeamId = null;\r\n\t\t\t}\r\n\t\t\tthis._teams$.next(teams);\r\n\t\t} catch (error) {\r\n\t\t\tthis._teams$.next([]);\r\n\t\t\tthis._errorHandlerService.handleError(error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async setTeams(organizationTeamId: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst parallelizedTasks: Promise<void>[] = [\r\n\t\t\t\tthis.getProjects({\r\n\t\t\t\t\t...this.argFromMain,\r\n\t\t\t\t\torganizationTeamId\r\n\t\t\t\t}),\r\n\t\t\t\tthis.getTask({\r\n\t\t\t\t\t...this.argFromMain,\r\n\t\t\t\t\torganizationTeamId\r\n\t\t\t\t})\r\n\t\t\t];\r\n\t\t\tthis.teamSelect = organizationTeamId;\r\n\t\t\tthis.electronService.ipcRenderer.send('update_project_on', {\r\n\t\t\t\torganizationTeamId\r\n\t\t\t});\r\n\t\t\tthis.argFromMain.organizationTeamId = organizationTeamId;\r\n\t\t\tif (organizationTeamId) {\r\n\t\t\t\tthis.errors.teams = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.errorBind();\r\n\t\t\t}\r\n\t\t\tawait Promise.allSettled(parallelizedTasks);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('ERROR', error);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async updateTaskStatus() {\r\n\t\ttry {\r\n\t\t\tconst { tenantId, organizationId } = this._store;\r\n\t\t\tif (!this.taskSelect || this.selectedTask.status === TaskStatusEnum.IN_PROGRESS) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst id = this.selectedTask.id;\r\n\t\t\tconst title = this.selectedTask.title;\r\n\t\t\tconst status = TaskStatusEnum.IN_PROGRESS;\r\n\t\t\tconst taskStatus = this._store.statuses.find((taskStatus) => taskStatus.name === status);\r\n\t\t\tconst taskUpdateInput: ITaskUpdateInput = {\r\n\t\t\t\torganizationId,\r\n\t\t\t\ttenantId,\r\n\t\t\t\tstatus,\r\n\t\t\t\ttitle,\r\n\t\t\t\ttaskStatus\r\n\t\t\t};\r\n\t\t\tawait this.timeTrackerService.updateTask(id, taskUpdateInput);\r\n\t\t} catch (error) {\r\n\t\t\tthis._loggerService.log.error(error);\r\n\t\t}\r\n\t}\r\n}\r\n"]}