{"version":3,"file":"language.service.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/language/language.service.ts"],"names":[],"mappings":";;;;AAAA,+CAAkD;AAClD,wCAA2C;AAE3C,iDAAgD;AAChD,+BAAwD;AACxD,8DAAwD;AACxD,0CAAmD;AAK5C,IAAM,eAAe,6BAArB,MAAM,eAAe;IAC3B,YAAoB,KAAiB,EAAU,qBAA2C;QAAtE,UAAK,GAAL,KAAK,CAAY;QAAU,0BAAqB,GAArB,qBAAqB,CAAsB;IAAG,CAAC;IAEvF,GAAG;QACT,MAAM,GAAG,GAAG,KAAK,CAAC;QAClB,IAAI,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,EAAE;YAChB,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAyB,GAAG,0BAAU,YAAY,CAAC,CAAC,IAAI,CAClF,IAAA,UAAG,EAAC,CAAC,QAAgC,EAAE,EAAE,CAAC,QAAQ,CAAC,EACnD,IAAA,kBAAW,EAAC,CAAC,CAAC,CACd,CAAC;YACF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;SACrD;QACD,OAAO,IAAA,qBAAc,EAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAEM,MAAM;QACZ,MAAM,MAAM,GAAG,IAAA,iBAAQ,EAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,EAAE;YAChB,UAAU,GAAG,IAAI,CAAC,KAAK;iBACrB,GAAG,CAAyB,GAAG,0BAAU,YAAY,EAAE;gBACvD,MAAM;aACN,CAAC;iBACD,IAAI,CACJ,IAAA,UAAG,EAAC,CAAC,QAAgC,EAAE,EAAE,CAAC,QAAQ,CAAC,EACnD,IAAA,kBAAW,EAAC,CAAC,CAAC,CACd,CAAC;YACH,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;SACxD;QACD,OAAO,IAAA,qBAAc,EAAC,UAAU,CAAC,CAAC;IACnC,CAAC;CACD,CAAA;0BAhCY,eAAe;IAH3B,IAAA,iBAAU,EAAC;QACX,UAAU,EAAE,MAAM;KAClB,CAAC;6CAE0B,iBAAU,EAAiC,+BAAoB;GAD9E,eAAe,CAgC3B","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ILanguage } from '@gauzy/contracts';\r\nimport { toParams } from '@gauzy/ui-sdk/common';\r\nimport { firstValueFrom, map, shareReplay } from 'rxjs';\r\nimport { API_PREFIX } from '../constants/app.constants';\r\nimport { LanguageCacheService } from '../services';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n\tconstructor(private _http: HttpClient, private _languageCacheService: LanguageCacheService) {}\r\n\r\n\tpublic all(): Promise<{ items: ILanguage[] }> {\r\n\t\tconst KEY = 'all';\r\n\t\tlet languages$ = this._languageCacheService.getValue(KEY);\r\n\t\tif (!languages$) {\r\n\t\t\tlanguages$ = this._http.get<{ items: ILanguage[] }>(`${API_PREFIX}/languages`).pipe(\r\n\t\t\t\tmap((response: { items: ILanguage[] }) => response),\r\n\t\t\t\tshareReplay(1)\r\n\t\t\t);\r\n\t\t\tthis._languageCacheService.setValue(languages$, KEY);\r\n\t\t}\r\n\t\treturn firstValueFrom(languages$);\r\n\t}\r\n\r\n\tpublic system(): Promise<{ items: ILanguage[] }> {\r\n\t\tconst params = toParams({ is_system: 1 });\r\n\t\tlet languages$ = this._languageCacheService.getValue(params);\r\n\t\tif (!languages$) {\r\n\t\t\tlanguages$ = this._http\r\n\t\t\t\t.get<{ items: ILanguage[] }>(`${API_PREFIX}/languages`, {\r\n\t\t\t\t\tparams\r\n\t\t\t\t})\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((response: { items: ILanguage[] }) => response),\r\n\t\t\t\t\tshareReplay(1)\r\n\t\t\t\t);\r\n\t\t\tthis._languageCacheService.setValue(languages$, params);\r\n\t\t}\r\n\t\treturn firstValueFrom(languages$);\r\n\t}\r\n}\r\n"]}