{"version":3,"file":"unauthorized.interceptor.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/interceptors/unauthorized.interceptor.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAQ3C,+BAAyD;AACzD,8CAA4C;AAC5C,kCAAuC;AACvC,mDAAuD;AACvD,4CAAyC;AACzC,0CAAoC;AAG7B,IAAM,uBAAuB,qCAA7B,MAAM,uBAAuB;IACnC,YACS,YAA0B,EAC1B,eAAgC,EAChC,MAAc,EACd,KAAY;QAHZ,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAO;IAClB,CAAC;IAEJ,SAAS,CACR,OAAyB,EACzB,IAAiB;QAEjB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC/B,IAAA,sBAAU,EAAC,CAAC,KAAK,EAAE,EAAE;YACpB,wCAAwC;YACxC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACzB,OAAO;aACP;YACD,8BAA8B;YAC9B,IAAI,KAAK,CAAC,MAAM,0CAAgC,EAAE;gBACjD,mBAAmB;gBACnB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;gBAC3B,sBAAsB;gBACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,yBAAyB;gBACzB,IAAA,gBAAS,EAAC,GAAG,EAAE,CACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE;oBACvC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;iBAC3C,CAAC,CACF,CAAC;aACF;YACD,OAAO,IAAA,iBAAU,EAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC,CACF,CAAC;IACH,CAAC;CACD,CAAA;kCAnCY,uBAAuB;IADnC,IAAA,iBAAU,GAAE;6CAGW,mBAAY;QACT,0BAAe;QACxB,eAAM;QACP,gBAAK;GALT,uBAAuB,CAmCnC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n\tHttpEvent,\r\n\tHttpHandler,\r\n\tHttpInterceptor,\r\n\tHttpRequest,\r\n\tHttpStatusCode,\r\n} from '@angular/common/http';\r\nimport { concatMap, Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthStrategy } from '../auth';\r\nimport { ElectronService } from '../electron/services';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '../services';\r\n\r\n@Injectable()\r\nexport class UnauthorizedInterceptor implements HttpInterceptor {\r\n\tconstructor(\r\n\t\tprivate authStrategy: AuthStrategy,\r\n\t\tprivate electronService: ElectronService,\r\n\t\tprivate router: Router,\r\n\t\tprivate store: Store\r\n\t) {}\r\n\r\n\tintercept(\r\n\t\trequest: HttpRequest<any>,\r\n\t\tnext: HttpHandler\r\n\t): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(request).pipe(\r\n\t\t\tcatchError((error) => {\r\n\t\t\t\t// Early return if offline is triggered.\r\n\t\t\t\tif (this.store.isOffline) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Unauthorized error occurred\r\n\t\t\t\tif (error.status === HttpStatusCode.Unauthorized) {\r\n\t\t\t\t\t// Log out the user\r\n\t\t\t\t\tthis.authStrategy.logout();\r\n\t\t\t\t\t// logout from desktop\r\n\t\t\t\t\tthis.electronService.ipcRenderer.send('logout');\r\n\t\t\t\t\t// redirect to login page\r\n\t\t\t\t\tconcatMap(() =>\r\n\t\t\t\t\t\tthis.router.navigate(['auth', 'login'], {\r\n\t\t\t\t\t\t\tqueryParams: { returnUrl: this.router.url },\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn throwError(() => error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n"]}