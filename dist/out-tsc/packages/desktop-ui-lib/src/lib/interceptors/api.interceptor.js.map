{"version":3,"file":"api.interceptor.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/interceptors/api.interceptor.ts"],"names":[],"mappings":";;;;AAAA,wCAAmD;AAQnD,gEAAqE;AACrE,0CAAoC;AAG7B,IAAM,cAAc,4BAApB,MAAM,cAAc;IAC1B,YACkB,MAAa,EAEb,WAAgB;QAFhB,WAAM,GAAN,MAAM,CAAO;QAEb,gBAAW,GAAX,WAAW,CAAK;IAC/B,CAAC;IAEJ,SAAS,CACR,OAAyB,EACzB,IAAiB;QAEjB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC;QAC/C,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QACxD,IAAI,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,0BAAU,EAAE,CAAC,EAAE;YAC1D,MAAM,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3C,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACvB,GAAG,EAAE,GAAG;aACR,CAAC,CAAC;SACH;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;CACD,CAAA;yBArBY,cAAc;IAD1B,IAAA,iBAAU,GAAE;IAIV,mBAAA,IAAA,aAAM,EAAC,yBAAS,CAAC,CAAA;6CADO,gBAAK;GAFnB,cAAc,CAqB1B","sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport {\r\n\tHttpRequest,\r\n\tHttpHandler,\r\n\tHttpEvent,\r\n\tHttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { API_PREFIX, GAUZY_ENV } from './../constants/app.constants';\r\nimport { Store } from '../services';\r\n\r\n@Injectable()\r\nexport class APIInterceptor implements HttpInterceptor {\r\n\tconstructor(\r\n\t\tprivate readonly _store: Store,\r\n\t\t@Inject(GAUZY_ENV)\r\n\t\tprivate readonly environment: any\r\n\t) {}\r\n\r\n\tintercept(\r\n\t\trequest: HttpRequest<any>,\r\n\t\tnext: HttpHandler\r\n\t): Observable<HttpEvent<any>> {\r\n\t\tconst baseUrl = this.environment?.API_BASE_URL;\r\n\t\tconst apiBaseUrl = baseUrl ? baseUrl : this._store.host;\r\n\t\tif (apiBaseUrl && request.url.startsWith(`${API_PREFIX}`)) {\r\n\t\t\tconst url = apiBaseUrl.concat(request.url);\r\n\t\t\trequest = request.clone({\r\n\t\t\t\turl: url,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn next.handle(request);\r\n\t}\r\n}\r\n"]}