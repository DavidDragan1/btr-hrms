{"version":3,"file":"language.interceptor.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/interceptors/language.interceptor.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAQ3C,+DAAoD;AACpD,8CAAuD;AAIhD,IAAM,mBAAmB,iCAAzB,MAAM,mBAAmB;IAC/B,YACS,MAAa,EACb,iBAAmC;QADnC,WAAM,GAAN,MAAM,CAAO;QACb,sBAAiB,GAAjB,iBAAiB,CAAkB;IACxC,CAAC;IAEL,SAAS,CACR,OAAyB,EACzB,IAAiB;QAEjB,MAAM,QAAQ,GACb,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB;YAC3C,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB;YAC/B,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QAC5C,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACvB,UAAU,EAAE;gBACX,QAAQ,EAAE,QAAQ;aAClB;SACD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;CACD,CAAA;8BAtBY,mBAAmB;IAD/B,IAAA,iBAAU,GAAE;6CAGK,qBAAK;QACM,uBAAgB;GAHhC,mBAAmB,CAsB/B","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n\tHttpRequest,\r\n\tHttpHandler,\r\n\tHttpEvent,\r\n\tHttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from './../services/store.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LanguagesEnum } from '@gauzy/contracts';\r\n\r\n@Injectable()\r\nexport class LanguageInterceptor implements HttpInterceptor {\r\n\tconstructor(\r\n\t\tprivate _store: Store,\r\n\t\tprivate _translateService: TranslateService\r\n\t) { }\r\n\r\n\tintercept(\r\n\t\trequest: HttpRequest<any>,\r\n\t\tnext: HttpHandler\r\n\t): Observable<HttpEvent<any>> {\r\n\t\tconst language: LanguagesEnum =\r\n\t\t\tthis._store && this._store.preferredLanguage\r\n\t\t\t\t? this._store.preferredLanguage\r\n\t\t\t\t: this._translateService.getBrowserLang();\r\n\t\trequest = request.clone({\r\n\t\t\tsetHeaders: {\r\n\t\t\t\tLanguage: language,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn next.handle(request);\r\n\t}\r\n}\r\n"]}