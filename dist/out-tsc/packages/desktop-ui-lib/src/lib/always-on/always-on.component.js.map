{"version":3,"file":"always-on.component.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/always-on/always-on.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, NgZone, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LanguagesEnum } from '@gauzy/contracts';\r\nimport { BehaviorSubject, from, Observable, tap } from 'rxjs';\r\nimport { ElectronService } from '../electron/services';\r\nimport { LanguageSelectorService } from '../language/language-selector.service';\r\nimport { TimeTrackerDateManager } from '../services';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { AlwaysOnService, AlwaysOnStateEnum, ITimeCounter } from './always-on.service';\r\nimport { NbIconLibraries } from '@nebular/theme';\r\n\r\n@UntilDestroy({ checkProperties: true })\r\n@Component({\r\n\tselector: 'gauzy-always-on',\r\n\ttemplateUrl: './always-on.component.html',\r\n\tstyleUrls: ['./always-on.component.scss'],\r\n})\r\nexport class AlwaysOnComponent implements OnInit, AfterViewInit {\r\n\tpublic start$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tpublic isOffline$: BehaviorSubject<boolean> = new BehaviorSubject(false)\r\n\tpublic loading: boolean = false;\r\n\tpublic isTrackingEnabled: boolean = true;\r\n\r\n\tprivate _counter$: BehaviorSubject<ITimeCounter> = new BehaviorSubject({\r\n\t\tcurrent: '--:--:--',\r\n\t\ttoday: '--:--'\r\n\t});\r\n\r\n\tconstructor(\r\n\t\tprivate _languageSelectorService: LanguageSelectorService,\r\n\t\tprivate _electronService: ElectronService,\r\n\t\tprivate _translateService: TranslateService,\r\n\t\tprivate _alwaysOnService: AlwaysOnService,\r\n\t\tprivate _iconLibraries: NbIconLibraries,\r\n\t\tprivate _ngZone: NgZone\r\n\t) {\r\n\t\tthis._iconLibraries.registerFontPack('font-awesome', {\r\n\t\t\tpackClass: 'fas',\r\n\t\t\ticonClassPrefix: 'fa',\r\n\t\t});\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tfrom(this._electronService.ipcRenderer.invoke('PREFERRED_LANGUAGE'))\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((language: LanguagesEnum) => {\r\n\t\t\t\t\tthis._languageSelectorService.setLanguage(\r\n\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\tthis._translateService\r\n\t\t\t\t\t);\r\n\t\t\t\t\tTimeTrackerDateManager.locale(language);\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis._alwaysOnService.state$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((state: AlwaysOnStateEnum) => {\r\n\t\t\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\t\t\tswitch (state) {\r\n\t\t\t\t\t\t\tcase AlwaysOnStateEnum.STARTED:\r\n\t\t\t\t\t\t\t\tthis.start$.next(true);\r\n\t\t\t\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase AlwaysOnStateEnum.STOPPED:\r\n\t\t\t\t\t\t\t\tthis.start$.next(false);\r\n\t\t\t\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase AlwaysOnStateEnum.LOADING:\r\n\t\t\t\t\t\t\t\tthis.loading = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t\tthis._alwaysOnService.counter$\r\n\t\t\t.pipe(\r\n\t\t\t\ttap((time: ITimeCounter) => {\r\n\t\t\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\t\t\tthis._counter$.next(time);\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\t\t\t\tuntilDestroyed(this)\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t\tthis._electronService.ipcRenderer.on(\r\n\t\t\t'preferred_language_change',\r\n\t\t\t(event, language: LanguagesEnum) => {\r\n\t\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\t\tthis._languageSelectorService.setLanguage(\r\n\t\t\t\t\t\tlanguage,\r\n\t\t\t\t\t\tthis._translateService\r\n\t\t\t\t\t);\r\n\t\t\t\t\tTimeTrackerDateManager.locale(language);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis._electronService.ipcRenderer.on('offline-handler', (event, isOffline) => {\r\n\t\t\tthis._ngZone.run(() => {\r\n\t\t\t\tthis.isOffline$.next(isOffline);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic run(): void {\r\n\t\tthis._alwaysOnService.run(AlwaysOnStateEnum.LOADING);\r\n\t}\r\n\r\n\tpublic get counter$(): Observable<ITimeCounter> {\r\n\t\treturn this._counter$.asObservable();\r\n\t}\r\n}\r\n"]}