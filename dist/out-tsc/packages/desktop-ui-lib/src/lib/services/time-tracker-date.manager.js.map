{"version":3,"file":"time-tracker-date.manager.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/services/time-tracker-date.manager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as moment from 'moment';\r\nimport { IOrganization, LanguagesEnum } from '@gauzy/contracts';\r\n\r\nexport class TimeTrackerDateManager {\r\n\tprivate static _instance: TimeTrackerDateManager;\r\n\tprivate _organization: IOrganization;\r\n\tprivate _utcOffset: number;\r\n\tprivate _language: LanguagesEnum;\r\n\r\n\tprivate constructor() {\r\n\t\tthis._utcOffset = moment().utcOffset();\r\n\t\tthis._language = LanguagesEnum.ENGLISH;\r\n\t}\r\n\r\n\tprivate static get instance(): TimeTrackerDateManager {\r\n\t\tif (!this._instance) {\r\n\t\t\tthis._instance = new TimeTrackerDateManager();\r\n\t\t}\r\n\t\treturn this._instance;\r\n\t}\r\n\r\n\tprivate static get _startWeekDayNumber(): number {\r\n\t\treturn moment()\r\n\t\t\t.day(this.organization?.startWeekOn || 'Monday')\r\n\t\t\t.isoWeekday();\r\n\t}\r\n\r\n\tpublic static get startWeek(): string {\r\n\t\treturn moment()\r\n\t\t\t.startOf('week')\r\n\t\t\t.subtract(this.utcOffset, 'minutes')\r\n\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\t}\r\n\r\n\tpublic static get endWeek(): string {\r\n\t\treturn moment()\r\n\t\t\t.endOf('week')\r\n\t\t\t.subtract(this.utcOffset, 'minutes')\r\n\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\t}\r\n\r\n\tpublic static get startToday(): string {\r\n\t\treturn moment()\r\n\t\t\t.startOf('day')\r\n\t\t\t.subtract(this.utcOffset, 'minutes')\r\n\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\t}\r\n\r\n\tpublic static get endToday(): string {\r\n\t\treturn moment()\r\n\t\t\t.endOf('day')\r\n\t\t\t.subtract(this.utcOffset, 'minutes')\r\n\t\t\t.format('YYYY-MM-DD HH:mm:ss');\r\n\t}\r\n\r\n\tpublic static get utcOffset(): number {\r\n\t\treturn this.instance._utcOffset;\r\n\t}\r\n\r\n\tpublic static get organization(): IOrganization {\r\n\t\treturn this.instance._organization;\r\n\t}\r\n\r\n\tpublic static set organization(value: IOrganization) {\r\n\t\tthis.instance._organization = value;\r\n\t\t// Set the start of the week when organization's change\r\n\t\tthis._instance.startWeekDay();\r\n\t}\r\n\r\n\tpublic static set utcOffset(value: number) {\r\n\t\tthis.instance._utcOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns True If it's currently midnight, otherwise False.\r\n\t */\r\n\tpublic static get isMidnight(): boolean {\r\n\t\tconst now = moment();\r\n\t\tconst endOfDay = now.clone().endOf('day');\r\n\t\treturn moment(now.format('YYYY-MM-DD HH:mm:ss')).isSame(\r\n\t\t\tendOfDay.format('YYYY-MM-DD HH:mm:ss')\r\n\t\t);\r\n\t}\r\n\r\n\t// Set the start of the week\r\n\tprivate startWeekDay() {\r\n\t\tmoment.updateLocale(this._language, {\r\n\t\t\tweek: {\r\n\t\t\t\tdow: TimeTrackerDateManager._startWeekDayNumber,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static locale(language = LanguagesEnum.ENGLISH) {\r\n\t\tmoment.locale(language);\r\n\t\tthis.instance._language = language;\r\n\t}\r\n}\r\n"]}