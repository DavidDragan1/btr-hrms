{"version":3,"file":"store.service.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/services/store.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tDefaultValueDateTypeEnum,\r\n\tIOrganization,\r\n\tPermissionsEnum,\r\n\tIRolePermission,\r\n\tIUser,\r\n\tLanguagesEnum,\r\n\tIOrganizationProject,\r\n\tILanguage,\r\n\tIProposalViewModel,\r\n\tIFeatureToggle,\r\n\tIFeatureOrganization,\r\n\tFeatureEnum,\r\n\tComponentLayoutStyleEnum,\r\n\tITaskStatus,\r\n} from '@gauzy/contracts';\r\nimport { Injectable } from '@angular/core';\r\nimport { StoreConfig, Store as AkitaStore, Query } from '@datorama/akita';\r\nimport {\r\n\tComponentEnum,\r\n\tSYSTEM_DEFAULT_LAYOUT,\r\n} from '../constants/layout.constants';\r\nimport { map } from 'rxjs/operators';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport * as _ from 'underscore';\r\n\r\nexport interface AppState {\r\n\tuser: IUser;\r\n\tuserRolePermissions: IRolePermission[];\r\n\tselectedOrganization: IOrganization;\r\n\tselectedProposal: IProposalViewModel;\r\n\tselectedProject: IOrganizationProject;\r\n\tselectedDate: Date;\r\n\tsystemLanguages: ILanguage[];\r\n\tfeatureToggles: IFeatureToggle[];\r\n\tfeatureOrganizations: IFeatureOrganization[];\r\n\tfeatureTenant: IFeatureOrganization[];\r\n\tisOffline: boolean;\r\n\tstatuses: ITaskStatus[];\r\n}\r\n\r\nexport interface PersistState {\r\n\torganizationId?: string;\r\n\tclientId?: string;\r\n\ttenantId: string;\r\n\ttoken: string;\r\n\tuserId: string;\r\n\tserverConnection: number;\r\n\tpreferredLanguage: LanguagesEnum;\r\n\tpreferredComponentLayout: ComponentLayoutStyleEnum;\r\n\tcomponentLayout: any[]; //This would be a Map but since Maps can't be serialized/deserialized it is stored as an array\r\n\thost: string;\r\n}\r\n\r\nexport function createInitialAppState(): AppState {\r\n\treturn {\r\n\t\tselectedDate: new Date(),\r\n\t\tuserRolePermissions: [],\r\n\t\tfeatureToggles: [],\r\n\t\tfeatureOrganizations: [],\r\n\t\tfeatureTenant: [],\r\n\t\tisOffline: false,\r\n\t\tstatuses: [],\r\n\t} as AppState;\r\n}\r\n\r\nexport function createInitialPersistState(): PersistState {\r\n\tconst token = localStorage.getItem('token') || null;\r\n\tconst userId = localStorage.getItem('_userId') || null;\r\n\tconst organizationId = localStorage.getItem('_organizationId') || null;\r\n\tconst serverConnection =\r\n\t\tparseInt(localStorage.getItem('serverConnection')) || null;\r\n\tconst preferredLanguage = localStorage.getItem('preferredLanguage') || null;\r\n\tconst componentLayout = localStorage.getItem('componentLayout') || [];\r\n\tconst tenantId = localStorage.getItem('tenantId') || null;\r\n\tconst host = localStorage.getItem('_host') || null;\r\n\r\n\treturn {\r\n\t\ttoken,\r\n\t\tuserId,\r\n\t\torganizationId,\r\n\t\tserverConnection,\r\n\t\tpreferredLanguage,\r\n\t\tcomponentLayout,\r\n\t\ttenantId,\r\n\t\thost,\r\n\t} as PersistState;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'app' })\r\nexport class AppStore extends AkitaStore<AppState> {\r\n\tconstructor() {\r\n\t\tsuper(createInitialAppState());\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'persist' })\r\nexport class PersistStore extends AkitaStore<PersistState> {\r\n\tconstructor() {\r\n\t\tsuper(createInitialPersistState());\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppQuery extends Query<AppState> {\r\n\tconstructor(protected store: AppStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PersistQuery extends Query<PersistState> {\r\n\tconstructor(protected store: PersistStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class Store {\r\n\tconstructor(\r\n\t\tprotected appStore: AppStore,\r\n\t\tprotected appQuery: AppQuery,\r\n\t\tprotected persistStore: PersistStore,\r\n\t\tprotected persistQuery: PersistQuery\r\n\t) {}\r\n\r\n\tuser$ = this.appQuery.select((state) => state.user);\r\n\tselectedOrganization$ = this.appQuery.select(\r\n\t\t(state) => state.selectedOrganization\r\n\t);\r\n\tselectedProject$ = this.appQuery.select((state) => state.selectedProject);\r\n\tselectedDate$ = this.appQuery.select((state) => state.selectedDate);\r\n\tuserRolePermissions$ = this.appQuery.select(\r\n\t\t(state) => state.userRolePermissions\r\n\t);\r\n\tfeatureToggles$ = this.appQuery.select((state) => state.featureToggles);\r\n\r\n\tfeatureOrganizations$ = this.appQuery.select(\r\n\t\t(state) => state.featureOrganizations\r\n\t);\r\n\r\n\tstatuses$: Observable<ITaskStatus[]> = this.appQuery.select(\r\n\t\t(state) => state.statuses\r\n\t);\r\n\r\n\tfeatureTenant$ = this.appQuery.select((state) => state.featureTenant);\r\n\tpreferredLanguage$ = this.persistQuery.select(\r\n\t\t(state) => state.preferredLanguage\r\n\t);\r\n\tpreferredComponentLayout$ = this.persistQuery.select(\r\n\t\t(state) => state.preferredComponentLayout\r\n\t);\r\n\tcomponentLayoutMap$ = this.persistQuery\r\n\t\t.select((state) => state.componentLayout)\r\n\t\t.pipe(map((componentLayout) => new Map(componentLayout)));\r\n\tsystemLanguages$ = this.appQuery.select((state) => state.systemLanguages);\r\n\tisOffline$ = this.appQuery.select((state) => state.isOffline);\r\n\r\n\tsubject = new Subject<ComponentEnum>();\r\n\r\n\t/**\r\n\t * Observe any change to the component layout.\r\n\t * Returns the layout for the component given in the params in the following order of preference\r\n\t * 1. If overridden at component level, return that.\r\n\t * Else\r\n\t * 2. If preferred layout set, then return that\r\n\t * Else\r\n\t * 3. Return the system default layout\r\n\t */\r\n\tcomponentLayout$(component: ComponentEnum) {\r\n\t\treturn merge(\r\n\t\t\tthis.persistQuery\r\n\t\t\t\t.select((state) => state.preferredComponentLayout)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((preferredLayout) => {\r\n\t\t\t\t\t\tconst dataLayout =\r\n\t\t\t\t\t\t\tthis.getLayoutForComponent(component);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\tdataLayout ||\r\n\t\t\t\t\t\t\tpreferredLayout ||\r\n\t\t\t\t\t\t\tSYSTEM_DEFAULT_LAYOUT\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\tthis.persistQuery\r\n\t\t\t\t.select((state) => state.componentLayout)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((componentLayout) => {\r\n\t\t\t\t\t\tconst componentMap = new Map(componentLayout);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\tcomponentMap.get(component) ||\r\n\t\t\t\t\t\t\tthis.preferredComponentLayout ||\r\n\t\t\t\t\t\t\tSYSTEM_DEFAULT_LAYOUT\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tget selectedOrganization(): IOrganization {\r\n\t\tconst { selectedOrganization } = this.appQuery.getValue();\r\n\t\treturn selectedOrganization;\r\n\t}\r\n\r\n\tset selectedOrganization(organization: IOrganization) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedOrganization: organization,\r\n\t\t});\r\n\t}\r\n\r\n\tset selectedProject(project: IOrganizationProject) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedProject: project,\r\n\t\t});\r\n\t}\r\n\r\n\tset systemLanguages(languages: ILanguage[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tsystemLanguages: languages,\r\n\t\t});\r\n\t}\r\n\r\n\tget systemLanguages(): ILanguage[] {\r\n\t\tconst { systemLanguages } = this.appQuery.getValue();\r\n\t\treturn systemLanguages;\r\n\t}\r\n\r\n\tget token(): string | null {\r\n\t\tconst { token } = this.persistQuery.getValue();\r\n\t\treturn token;\r\n\t}\r\n\r\n\tset token(token: string) {\r\n\t\tthis.persistStore.update({\r\n\t\t\ttoken: token,\r\n\t\t});\r\n\t}\r\n\r\n\tget userId(): IUser['id'] | null {\r\n\t\tconst { userId } = this.persistQuery.getValue();\r\n\t\treturn userId;\r\n\t}\r\n\r\n\tset userId(id: IUser['id'] | null) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tuserId: id,\r\n\t\t});\r\n\t}\r\n\r\n\tget organizationId(): IOrganization['id'] | null {\r\n\t\tconst { organizationId } = this.persistQuery.getValue();\r\n\t\treturn organizationId;\r\n\t}\r\n\r\n\tset organizationId(id: IOrganization['id'] | null) {\r\n\t\tthis.persistStore.update({\r\n\t\t\torganizationId: id,\r\n\t\t});\r\n\t}\r\n\r\n\tget user(): IUser {\r\n\t\tconst { user } = this.appQuery.getValue();\r\n\t\treturn user;\r\n\t}\r\n\r\n\tset user(user: IUser) {\r\n\t\tthis.appStore.update({\r\n\t\t\tuser: user,\r\n\t\t});\r\n\t}\r\n\r\n\tget selectedDate() {\r\n\t\tconst { selectedDate } = this.appQuery.getValue();\r\n\t\tif (selectedDate instanceof Date) {\r\n\t\t\treturn selectedDate;\r\n\t\t}\r\n\r\n\t\tconst date = new Date(selectedDate);\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedDate: date,\r\n\t\t});\r\n\r\n\t\treturn date;\r\n\t}\r\n\r\n\tset selectedDate(date: Date) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedDate: date,\r\n\t\t});\r\n\t}\r\n\r\n\tget selectedProposal(): IProposalViewModel {\r\n\t\tconst { selectedProposal } = this.appQuery.getValue();\r\n\t\treturn selectedProposal;\r\n\t}\r\n\r\n\tset selectedProposal(proposal: IProposalViewModel) {\r\n\t\tthis.appStore.update({\r\n\t\t\tselectedProposal: proposal,\r\n\t\t});\r\n\t}\r\n\r\n\tget featureToggles(): IFeatureToggle[] {\r\n\t\tconst { featureToggles } = this.appQuery.getValue();\r\n\t\treturn featureToggles;\r\n\t}\r\n\r\n\tset featureToggles(featureToggles: IFeatureToggle[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tfeatureToggles: featureToggles,\r\n\t\t});\r\n\t}\r\n\r\n\tget featureTenant(): IFeatureOrganization[] {\r\n\t\tconst { featureTenant } = this.appQuery.getValue();\r\n\t\treturn featureTenant;\r\n\t}\r\n\r\n\tset featureTenant(featureOrganizations: IFeatureOrganization[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tfeatureTenant: featureOrganizations,\r\n\t\t});\r\n\t}\r\n\r\n\tget statuses(): ITaskStatus[] {\r\n\t\tconst { statuses } = this.appQuery.getValue();\r\n\t\treturn statuses;\r\n\t}\r\n\r\n\tset statuses(statuses: ITaskStatus[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tstatuses,\r\n\t\t});\r\n\t}\r\n\r\n\tget featureOrganizations(): IFeatureOrganization[] {\r\n\t\tconst { featureOrganizations } = this.appQuery.getValue();\r\n\t\treturn featureOrganizations;\r\n\t}\r\n\r\n\tset featureOrganizations(featureOrganizations: IFeatureOrganization[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tfeatureOrganizations: featureOrganizations,\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t * Check features are enabled/disabled for tenant organization\r\n\t */\r\n\thasFeatureEnabled(feature: FeatureEnum) {\r\n\t\tconst {\r\n\t\t\tfeatureTenant = [],\r\n\t\t\tfeatureOrganizations = [],\r\n\t\t\tfeatureToggles = [],\r\n\t\t} = this.appQuery.getValue();\r\n\t\tconst filtered = _.uniq(\r\n\t\t\t[...featureOrganizations, ...featureTenant],\r\n\t\t\t(x) => x.featureId\r\n\t\t);\r\n\r\n\t\tconst unleashToggle = featureToggles.find(\r\n\t\t\t(toggle) => toggle.name === feature && toggle.enabled === false\r\n\t\t);\r\n\t\tif (unleashToggle) {\r\n\t\t\treturn unleashToggle.enabled;\r\n\t\t}\r\n\r\n\t\treturn !!filtered.find(\r\n\t\t\t(item) => item.feature.code === feature && item.isEnabled\r\n\t\t);\r\n\t}\r\n\r\n\tget userRolePermissions(): IRolePermission[] {\r\n\t\tconst { userRolePermissions } = this.appQuery.getValue();\r\n\t\treturn userRolePermissions;\r\n\t}\r\n\r\n\tset userRolePermissions(rolePermissions: IRolePermission[]) {\r\n\t\tthis.appStore.update({\r\n\t\t\tuserRolePermissions: rolePermissions,\r\n\t\t});\r\n\t\t// this.loadPermissions();\r\n\t}\r\n\r\n\tget isOffline(): boolean {\r\n\t\tconst { isOffline } = this.appQuery.getValue();\r\n\t\treturn isOffline;\r\n\t}\r\n\r\n\tset isOffline(value: boolean) {\r\n\t\tthis.appStore.update({\r\n\t\t\tisOffline: value,\r\n\t\t});\r\n\t}\r\n\r\n\thasPermission(permission: PermissionsEnum) {\r\n\t\tconst { userRolePermissions } = this.appQuery.getValue();\r\n\t\treturn !!(userRolePermissions || []).find(\r\n\t\t\t(p) => p.permission === permission && p.enabled\r\n\t\t);\r\n\t}\r\n\r\n\thasPermissions(...permissions: PermissionsEnum[]) {\r\n\t\tconst { userRolePermissions } = this.appQuery.getValue();\r\n\r\n\t\t// Check if userRolePermissions is defined and not an empty array\r\n\t\tif (!userRolePermissions || userRolePermissions.length === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use some for a more concise check\r\n\t\treturn userRolePermissions.some(\r\n\t\t\t(p) => p.enabled && permissions.includes(p.permission as PermissionsEnum) // Check if the permission is in the provided list\r\n\t\t);\r\n\t}\r\n\r\n\tgetDateFromOrganizationSettings() {\r\n\t\tconst dateObj = this.selectedDate;\r\n\t\tswitch (\r\n\t\t\tthis.selectedOrganization &&\r\n\t\t\tthis.selectedOrganization.defaultValueDateType\r\n\t\t) {\r\n\t\t\tcase DefaultValueDateTypeEnum.TODAY: {\r\n\t\t\t\treturn new Date(Date.now());\r\n\t\t\t}\r\n\t\t\tcase DefaultValueDateTypeEnum.END_OF_MONTH: {\r\n\t\t\t\treturn new Date(dateObj.getFullYear(), dateObj.getMonth(), 0);\r\n\t\t\t}\r\n\t\t\tcase DefaultValueDateTypeEnum.START_OF_MONTH: {\r\n\t\t\t\treturn new Date(dateObj.getFullYear(), dateObj.getMonth(), 1);\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\treturn new Date(Date.now());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget serverConnection() {\r\n\t\tconst { serverConnection } = this.persistQuery.getValue();\r\n\t\treturn serverConnection;\r\n\t}\r\n\r\n\tset serverConnection(val: number) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tserverConnection: val,\r\n\t\t});\r\n\t}\r\n\r\n\tget preferredLanguage(): any | null {\r\n\t\tconst { preferredLanguage } = this.persistQuery.getValue();\r\n\t\treturn preferredLanguage;\r\n\t}\r\n\r\n\tset preferredLanguage(preferredLanguage) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tpreferredLanguage: preferredLanguage,\r\n\t\t});\r\n\t}\r\n\r\n\tget preferredComponentLayout(): any | null {\r\n\t\tconst { preferredComponentLayout } = this.persistQuery.getValue();\r\n\t\treturn preferredComponentLayout;\r\n\t}\r\n\r\n\tset preferredComponentLayout(preferredComponentLayout) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tpreferredComponentLayout: preferredComponentLayout,\r\n\t\t});\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.appStore.reset();\r\n\t\tthis.persistStore.reset();\r\n\t}\r\n\r\n\tloadRoles() {\r\n\t\tconst { user } = this.appQuery.getValue();\r\n\t}\r\n\r\n\tgetLayoutForComponent(\r\n\t\tcomponentName: ComponentEnum\r\n\t): ComponentLayoutStyleEnum {\r\n\t\tconst { componentLayout } = this.persistQuery.getValue();\r\n\t\tconst componentLayoutMap = new Map(componentLayout);\r\n\t\treturn componentLayoutMap.get(\r\n\t\t\tcomponentName\r\n\t\t) as ComponentLayoutStyleEnum;\r\n\t}\r\n\r\n\tsetLayoutForComponent(\r\n\t\tcomponentName: ComponentEnum,\r\n\t\tstyle: ComponentLayoutStyleEnum\r\n\t) {\r\n\t\tconst { componentLayout } = this.persistQuery.getValue();\r\n\t\tconst componentLayoutMap = new Map(componentLayout);\r\n\t\tcomponentLayoutMap.set(componentName, style);\r\n\t\tconst componentLayoutArray = Array.from(\r\n\t\t\tcomponentLayoutMap.entries()\r\n\t\t) as any;\r\n\t\tthis.persistStore.update({\r\n\t\t\tcomponentLayout: componentLayoutArray,\r\n\t\t});\r\n\t}\r\n\r\n\tset componentLayout(componentLayout: any[]) {\r\n\t\tthis.persistStore.update({\r\n\t\t\tcomponentLayout,\r\n\t\t});\r\n\t}\r\n\r\n\tget tenantId(): string | null {\r\n\t\tconst { tenantId } = this.persistQuery.getValue();\r\n\t\treturn tenantId;\r\n\t}\r\n\r\n\tset tenantId(value: string) {\r\n\t\tthis.persistStore.update({\r\n\t\t\ttenantId: value,\r\n\t\t});\r\n\t}\r\n\r\n\tget host(): string {\r\n\t\tconst { host } = this.persistQuery.getValue();\r\n\t\treturn host;\r\n\t}\r\n\r\n\tset host(value: string) {\r\n\t\tthis.persistStore.update({\r\n\t\t\thost: value,\r\n\t\t});\r\n\t}\r\n}\r\n"]}