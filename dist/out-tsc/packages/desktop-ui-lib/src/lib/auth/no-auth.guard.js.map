{"version":3,"file":"no-auth.guard.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/auth/no-auth.guard.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,4CAKyB;AACzB,0CAAoC;AACpC,yCAAyC;AAEzC;;GAEG;AAEI,IAAM,WAAW,yBAAjB,MAAM,WAAW;IACvB,YACkB,MAAc,EACvB,WAAwB,EACf,KAAY;QAFZ,WAAM,GAAN,MAAM,CAAQ;QACvB,gBAAW,GAAX,WAAW,CAAa;QACf,UAAK,GAAL,KAAK,CAAO;IAC3B,CAAC;IAEJ,KAAK,CAAC,WAAW,CAChB,KAA6B,EAC7B,KAA0B;QAE1B,IAAI,eAAe,GAAG,KAAK,CAAC;QAC5B,IAAI;YACH,eAAe,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;SAC3D;QAAC,OAAO,KAAK,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACrB;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,eAAe,EAAE;YAC1C,OAAO,IAAI,CAAC;SACZ;QACD,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAC9C,OAAO,KAAK,CAAC;IACd,CAAC;CACD,CAAA;sBAvBY,WAAW;IADvB,IAAA,iBAAU,GAAE;6CAGc,eAAM;QACV,sBAAW;QACR,gBAAK;GAJlB,WAAW,CAuBvB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n\tActivatedRouteSnapshot,\r\n\tCanActivate,\r\n\tRouter,\r\n\tRouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Store } from '../services';\r\nimport { AuthService } from './services';\r\n\r\n/**\r\n * Use for routes which only need to be displayed if user is NOT logged in\r\n */\r\n@Injectable()\r\nexport class NoAuthGuard implements CanActivate {\r\n\tconstructor(\r\n\t\tprivate readonly router: Router,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate readonly store: Store\r\n\t) {}\r\n\r\n\tasync canActivate(\r\n\t\troute: ActivatedRouteSnapshot,\r\n\t\tstate: RouterStateSnapshot\r\n\t) {\r\n\t\tlet isAuthenticated = false;\r\n\t\ttry {\r\n\t\t\tisAuthenticated = await this.authService.isAuthenticated();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tif (!this.store.token || !isAuthenticated) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tawait this.router.navigate(['/time-tracker']);\r\n\t\treturn false;\r\n\t}\r\n}\r\n"]}