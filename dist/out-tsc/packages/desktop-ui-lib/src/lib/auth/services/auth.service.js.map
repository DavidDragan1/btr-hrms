{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["../../../../../../../../packages/desktop-ui-lib/src/lib/auth/services/auth.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAAkD;AAQlD,+BAAkD;AAClD,iEAA2D;AAGpD,IAAM,WAAW,yBAAjB,MAAM,WAAW;IACvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,eAAe;QACd,OAAO,IAAA,qBAAc,EAAC,IAAI,CAAC,IAAI;aAC7B,GAAG,CAAU,GAAG,0BAAU,qBAAqB,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,KAAK,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,0BAAU,aAAa,EAC1B,UAAU,CACV,CAAC;IACH,CAAC;IAED,QAAQ,CAAC,aAAqC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,0BAAU,gBAAgB,EAC7B,aAAa,CACb,CAAC;IACH,CAAC;IAED,eAAe,CACd,oBAAoB;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,0BAAU,wBAAwB,EACrC,oBAAoB,CACpB,CAAC;IACH,CAAC;IAED,aAAa,CAAC,kBAAkB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,0BAAU,sBAAsB,EACnC,kBAAkB,CAClB,CAAC;IACH,CAAC;IAED,OAAO,CAAC,KAAkB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,0BAAU,YAAY,EAAE;YACxD,MAAM,EAAE,EAAE,KAAK,EAAE;SACjB,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,UAA2B;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,0BAAU,kBAAkB,EAAE;YAC9D,MAAM,EAAE,EAAE,UAAU,EAAE;SACtB,CAAC,CAAC;IACJ,CAAC;CACD,CAAA;sBAjDY,WAAW;IADvB,IAAA,iBAAU,GAAE;6CAEc,iBAAU;GADxB,WAAW,CAiDvB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n\tIUser,\r\n\tRolesEnum,\r\n\tIUserRegistrationInput,\r\n\tPermissionsEnum,\r\n\tIAuthResponse\r\n} from '@gauzy/contracts';\r\nimport { Observable, firstValueFrom } from 'rxjs';\r\nimport { API_PREFIX } from '../../constants/app.constants';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tisAuthenticated(): Promise<boolean> {\r\n\t\treturn firstValueFrom(this.http\r\n\t\t\t.get<boolean>(`${API_PREFIX}/auth/authenticated`));\r\n\t}\r\n\r\n\tlogin(loginInput): Observable<IAuthResponse> {\r\n\t\treturn this.http.post<IAuthResponse>(\r\n\t\t\t`${API_PREFIX}/auth/login`,\r\n\t\t\tloginInput\r\n\t\t);\r\n\t}\r\n\r\n\tregister(registerInput: IUserRegistrationInput): Observable<IUser> {\r\n\t\treturn this.http.post<IUser>(\r\n\t\t\t`${API_PREFIX}/auth/register`,\r\n\t\t\tregisterInput\r\n\t\t);\r\n\t}\r\n\r\n\trequestPassword(\r\n\t\trequestPasswordInput\r\n\t): Observable<{ token: string }> {\r\n\t\treturn this.http.post<IAuthResponse>(\r\n\t\t\t`${API_PREFIX}/auth/request-password`,\r\n\t\t\trequestPasswordInput\r\n\t\t);\r\n\t}\r\n\r\n\tresetPassword(resetPasswordInput) {\r\n\t\treturn this.http.post(\r\n\t\t\t`${API_PREFIX}/auth/reset-password`,\r\n\t\t\tresetPasswordInput\r\n\t\t);\r\n\t}\r\n\r\n\thasRole(roles: RolesEnum[]): Observable<boolean> {\r\n\t\treturn this.http.get<boolean>(`${API_PREFIX}/auth/role`, {\r\n\t\t\tparams: { roles }\r\n\t\t});\r\n\t}\r\n\r\n\thasPermission(permission: PermissionsEnum): Observable<boolean> {\r\n\t\treturn this.http.get<boolean>(`${API_PREFIX}/auth/permission`, {\r\n\t\t\tparams: { permission }\r\n\t\t});\r\n\t}\r\n}\r\n"]}