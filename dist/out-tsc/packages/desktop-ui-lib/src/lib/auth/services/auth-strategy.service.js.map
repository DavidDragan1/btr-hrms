{"version":3,"file":"auth-strategy.service.js","sourceRoot":"","sources":["../../../../../../../../packages/desktop-ui-lib/src/lib/auth/services/auth-strategy.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable, from, of } from 'rxjs';\r\nimport { NbAuthResult, NbAuthStrategy } from '@nebular/auth';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { IAuthResponse } from '@gauzy/contracts';\r\nimport { NbAuthStrategyClass } from '@nebular/auth/auth.options';\r\nimport { AuthService } from './auth.service';\r\nimport { Store, TimeTrackerDateManager } from '../../services';\r\nimport { ElectronService } from '../../electron/services';\r\n\r\n@Injectable()\r\nexport class AuthStrategy extends NbAuthStrategy {\r\n\tprivate static config = {\r\n\t\tlogin: {\r\n\t\t\tredirect: {\r\n\t\t\t\tsuccess: '/time-tracker',\r\n\t\t\t\tfailure: null,\r\n\t\t\t},\r\n\t\t\tdefaultErrors: [\r\n\t\t\t\t'Login/Email combination is not correct, please try again.',\r\n\t\t\t],\r\n\t\t\tdefaultMessages: ['You have been successfully logged in.'],\r\n\t\t\troleErrors: ['Your account is not an employee'],\r\n\t\t},\r\n\t\tregister: {\r\n\t\t\tredirect: {\r\n\t\t\t\tsuccess: '/time-tracker',\r\n\t\t\t\tfailure: null,\r\n\t\t\t},\r\n\t\t\tdefaultErrors: ['Something went wrong, please try again.'],\r\n\t\t\tdefaultMessages: ['You have been successfully registered.'],\r\n\t\t},\r\n\t\tlogout: {\r\n\t\t\tredirect: {\r\n\t\t\t\tsuccess: '/auth/login',\r\n\t\t\t\tfailure: null,\r\n\t\t\t},\r\n\t\t\tdefaultErrors: ['Something went wrong, please try again.'],\r\n\t\t\tdefaultMessages: ['You have been successfully logged out.'],\r\n\t\t},\r\n\t\trequestPass: {\r\n\t\t\tredirect: {\r\n\t\t\t\tsuccess: '/',\r\n\t\t\t\tfailure: null,\r\n\t\t\t},\r\n\t\t\tdefaultErrors: ['Email is not correct, please try again.'],\r\n\t\t\tdefaultMessages: [\r\n\t\t\t\t'Reset password instructions have been sent to your email.',\r\n\t\t\t],\r\n\t\t},\r\n\t\tresetPass: {\r\n\t\t\tredirect: {\r\n\t\t\t\tsuccess: '/',\r\n\t\t\t\tfailure: null,\r\n\t\t\t},\r\n\t\t\tresetPasswordTokenKey: 'reset_password_token',\r\n\t\t\tdefaultErrors: ['Something went wrong, please try again.'],\r\n\t\t\tdefaultMessages: ['Your password has been successfully changed.'],\r\n\t\t},\r\n\t};\r\n\r\n\tconstructor(\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly store: Store,\r\n\t\tprivate readonly electronService: ElectronService\r\n\t) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic setup(options: { name: string }): [NbAuthStrategyClass, any] {\r\n\t\treturn [AuthStrategy, options];\r\n\t}\r\n\r\n\tauthenticate(args: {\r\n\t\temail: string;\r\n\t\tpassword: string;\r\n\t\trememberMe?: boolean | null;\r\n\t}): Observable<NbAuthResult> {\r\n\t\tconst { email, password } = args;\r\n\t\t// TODO implement remember me feature\r\n\t\t// const rememberMe = !!args.rememberMe;\r\n\t\treturn this.login({\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t});\r\n\t}\r\n\r\n\tregister(data?: any): Observable<NbAuthResult> {\r\n\t\treturn of(\r\n\t\t\tnew NbAuthResult(\r\n\t\t\t\tfalse,\r\n\t\t\t\t{},\r\n\t\t\t\tfalse,\r\n\t\t\t\tAuthStrategy.config.register.defaultErrors,\r\n\t\t\t\t[AuthStrategy.config.register.defaultErrors]\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tresetPassword(data?: any): Observable<NbAuthResult> {\r\n\t\treturn of(\r\n\t\t\tnew NbAuthResult(\r\n\t\t\t\tfalse,\r\n\t\t\t\t{},\r\n\t\t\t\tfalse,\r\n\t\t\t\tAuthStrategy.config.register.defaultErrors,\r\n\t\t\t\t[AuthStrategy.config.register.defaultErrors]\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\trequestPassword(args: { email: string }): Observable<NbAuthResult> {\r\n\t\tconst { email } = args;\r\n\t\treturn this.authService\r\n\t\t\t.requestPassword({\r\n\t\t\t\temail,\r\n\t\t\t})\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((res: { token: string }) => {\r\n\t\t\t\t\tlet token;\r\n\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\ttoken = res.token;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!token) {\r\n\t\t\t\t\t\treturn new NbAuthResult(\r\n\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\tres,\r\n\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\tAuthStrategy.config.requestPass.defaultErrors\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn new NbAuthResult(\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tres,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t[],\r\n\t\t\t\t\t\tAuthStrategy.config.requestPass.defaultMessages\r\n\t\t\t\t\t);\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tnew NbAuthResult(\r\n\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\terr,\r\n\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\tAuthStrategy.config.requestPass.defaultErrors,\r\n\t\t\t\t\t\t\t[AuthStrategy.config.requestPass.defaultErrors]\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\trefreshToken(data?: any): Observable<NbAuthResult> {\r\n\t\tthrow new Error('Not implemented yet');\r\n\t}\r\n\r\n\tlogout(): Observable<NbAuthResult> {\r\n\t\treturn from(this._logout());\r\n\t}\r\n\r\n\tprivate async _logout(): Promise<NbAuthResult> {\r\n\t\tthis.store.clear();\r\n\t\tthis.store.serverConnection = 200;\r\n\t\tif (this.electronService.isElectron) {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.electronService.ipcRenderer.invoke('FINAL_LOGOUT');\r\n\t\t\t} catch (error) {}\r\n\t\t}\r\n\r\n\t\treturn new NbAuthResult(\r\n\t\t\ttrue,\r\n\t\t\tnull,\r\n\t\t\tAuthStrategy.config.logout.redirect.success,\r\n\t\t\t[],\r\n\t\t\tAuthStrategy.config.logout.defaultMessages\r\n\t\t);\r\n\t}\r\n\r\n\tpublic login(loginInput): Observable<NbAuthResult> {\r\n\t\treturn this.authService.login(loginInput).pipe(\r\n\t\t\tmap((res: IAuthResponse) => {\r\n\t\t\t\tlet user, token;\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tuser = res.user;\r\n\t\t\t\t\ttoken = res.token;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!user) {\r\n\t\t\t\t\treturn new NbAuthResult(\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\tres,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\tAuthStrategy.config.login.defaultErrors\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!user.employee) {\r\n\t\t\t\t\treturn new NbAuthResult(\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\tres,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\tAuthStrategy.config.login.roleErrors\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set stored values on login\r\n\t\t\t\tconst { id, employee, tenantId } = user;\r\n\t\t\t\tTimeTrackerDateManager.organization = employee.organization;\r\n\t\t\t\tthis.store.organizationId = employee.organizationId;\r\n\t\t\t\tthis.store.tenantId = tenantId;\r\n\t\t\t\tthis.store.userId = id;\r\n\t\t\t\tthis.store.token = token;\r\n\t\t\t\tthis.store.user = user;\r\n\r\n\t\t\t\tthis.electronAuthentication({ user, token });\r\n\r\n\t\t\t\treturn new NbAuthResult(\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\tres,\r\n\t\t\t\t\tAuthStrategy.config.login.redirect.success,\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tAuthStrategy.config.login.defaultMessages\r\n\t\t\t\t);\r\n\t\t\t}),\r\n\t\t\tcatchError((err) => {\r\n\t\t\t\tconst isLoginOffline =\r\n\t\t\t\t\t!!this.store?.user && !!this.store?.token;\r\n\t\t\t\tif (isLoginOffline) {\r\n\t\t\t\t\tconst res: IAuthResponse = {\r\n\t\t\t\t\t\tuser: this.store.user,\r\n\t\t\t\t\t\ttoken: this.store.token,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.electronAuthentication(res);\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tnew NbAuthResult(\r\n\t\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\t\tres,\r\n\t\t\t\t\t\t\tAuthStrategy.config.login.redirect.success,\r\n\t\t\t\t\t\t\t[],\r\n\t\t\t\t\t\t\tAuthStrategy.config.login.defaultMessages\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn of(\r\n\t\t\t\t\tnew NbAuthResult(\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\terr,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\tAuthStrategy.config.login.defaultErrors,\r\n\t\t\t\t\t\t[AuthStrategy.config.login.defaultErrors]\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tpublic electronAuthentication({ user, token }: IAuthResponse) {\r\n\t\ttry {\r\n\t\t\tif (this.electronService.isElectron) {\r\n\t\t\t\tthis.electronService.ipcRenderer.send('auth_success', {\r\n\t\t\t\t\tuser: user,\r\n\t\t\t\t\ttoken: token,\r\n\t\t\t\t\tuserId: user.id,\r\n\t\t\t\t\temployeeId: user.employee ? user.employee.id : null,\r\n\t\t\t\t\torganizationId: user.employee\r\n\t\t\t\t\t\t? user.employee.organizationId\r\n\t\t\t\t\t\t: null,\r\n\t\t\t\t\ttenantId: user.tenantId ? user.tenantId : null,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n}\r\n"]}