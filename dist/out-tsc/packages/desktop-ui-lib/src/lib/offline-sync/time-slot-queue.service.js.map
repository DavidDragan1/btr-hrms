{"version":3,"file":"time-slot-queue.service.js","sourceRoot":"","sources":["../../../../../../../packages/desktop-ui-lib/src/lib/offline-sync/time-slot-queue.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAE3C,+BAA4C;AAMrC,IAAM,oBAAoB,kCAA1B,MAAM,oBAAoB;IAIhC,IAAW,qBAAqB,CAAC,KAA4B;QAC5D,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,IAAW,sBAAsB;QAChC,OAAO,IAAI,iBAAU,CACpB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC,CACvD,CAAC;IACH,CAAC;IAED,IAAW,OAAO,CAAC,KAAgB;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,IAAW,QAAQ;QAClB,OAAO,IAAI,iBAAU,CACpB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CACzC,CAAC;IACH,CAAC;CACD,CAAA;+BAvBY,oBAAoB;IAHhC,IAAA,iBAAU,EAAC;QACX,UAAU,EAAE,MAAM;KAClB,CAAC;GACW,oBAAoB,CAuBhC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ITimeSlot } from '@gauzy/contracts';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { Updatable, ViewQueueStateUpdater } from './interfaces';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class TimeSlotQueueService implements Updatable<ITimeSlot> {\r\n\tprivate _updater$: Observer<ITimeSlot>;\r\n\tprivate _viewQueueStateUpdater$: Observer<ViewQueueStateUpdater>;\r\n\r\n\tpublic set viewQueueStateUpdater(value: ViewQueueStateUpdater) {\r\n\t\tthis._viewQueueStateUpdater$.next(value);\r\n\t}\r\n\r\n\tpublic get viewQueueStateUpdater$(): Observable<ViewQueueStateUpdater> {\r\n\t\treturn new Observable<ViewQueueStateUpdater>(\r\n\t\t\t(observer) => (this._viewQueueStateUpdater$ = observer)\r\n\t\t);\r\n\t}\r\n\r\n\tpublic set updater(value: ITimeSlot) {\r\n\t\tthis._updater$.next(value);\r\n\t}\r\n\r\n\tpublic get updater$(): Observable<ITimeSlot> {\r\n\t\treturn new Observable<ITimeSlot>(\r\n\t\t\t(observer) => (this._updater$ = observer)\r\n\t\t);\r\n\t}\r\n}\r\n"]}