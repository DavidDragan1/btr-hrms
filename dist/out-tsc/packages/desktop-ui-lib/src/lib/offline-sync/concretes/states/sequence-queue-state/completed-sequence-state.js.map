{"version":3,"file":"completed-sequence-state.js","sourceRoot":"","sources":["../../../../../../../../../../packages/desktop-ui-lib/src/lib/offline-sync/concretes/states/sequence-queue-state/completed-sequence-state.ts"],"names":[],"mappings":";;;AAAA,wBAA4C;AAC5C,iEAA6D;AAG7D,MAAa,sBAAuB,SAAQ,wBAAqB;IACzD,OAAO,CAAC,IAAe;QAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,0BAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACM,OAAO;QACb,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC9B,CAAC;CACD;AARD,wDAQC","sourcesContent":["import { InProgressSequenceState } from '.';\r\nimport { QueueState } from '../../../interfaces/queue-state';\r\nimport { ISequence } from '../../sequence-queue';\r\n\r\nexport class CompletedSequenceState extends QueueState<ISequence> {\r\n\tpublic enqueue(data: ISequence): void {\r\n\t\tthis.context.state = new InProgressSequenceState(this.context);\r\n\t\tthis.context.queue.append(data);\r\n\t}\r\n\tpublic dequeue(): void {\r\n\t\tconsole.log('âœ… - Completed');\r\n\t}\r\n}\r\n"]}