{"version":3,"file":"interrupted-sequence-queue.js","sourceRoot":"","sources":["../../../../../../../../packages/desktop-ui-lib/src/lib/offline-sync/concretes/interrupted-sequence-queue.ts"],"names":[],"mappings":";;;AACA,qDAAiD;AAEjD,wBAAkC;AAOlC,MAAa,wBAAyB,SAAQ,8BAAa;IAC1D,YACW,gBAAiC,EACjC,oBAAyC,EACzC,MAAa,EACb,qBAA2C,EAC3C,mBAAuC,EACvC,yBAAmD;QAE7D,KAAK,CACJ,gBAAgB,EAChB,oBAAoB,EACpB,MAAM,EACN,qBAAqB,EACrB,mBAAmB,EACnB,yBAAyB,CACzB,CAAC;QAdQ,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,WAAM,GAAN,MAAM,CAAO;QACb,0BAAqB,GAArB,qBAAqB,CAAsB;QAC3C,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,8BAAyB,GAAzB,yBAAyB,CAA0B;IAU9D,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,SAAS,EAAa;QACvD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,mBAAmB;QACnB,MAAM,aAAa,GAAG,IAAI,gBAAa,CACtC,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,MAAM,CACX,CAAC;QACF,wBAAwB;QACxB,KAAK,MAAM,QAAQ,IAAI,SAAS;YAC/B,aAAa,CAAC,OAAO,CAAC;gBACrB,GAAG,QAAQ;gBACX,WAAW,EAAE,KAAK,CAAC,WAAW;aAC9B,CAAC,CAAC;QACJ,SAAS,GAAG,EAAE,CAAC,CAAC,kBAAkB;QAClC,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;QACjE,mBAAmB;QACnB,MAAM,aAAa,CAAC,OAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAC9D,iBAAiB;IAClB,CAAC;CACD;AAzCD,4DAyCC","sourcesContent":["import { ISequence } from './sequence-queue';\r\nimport { SequenceQueue } from './sequence-queue';\r\nimport { Store } from '../../services/store.service';\r\nimport { TimeSlotQueue } from '.';\r\nimport { TimeSlotQueueService } from '..';\r\nimport { ElectronService } from '../../electron/services';\r\nimport { ErrorHandlerService } from '../../services';\r\nimport { TimeTrackerStatusService } from '../../time-tracker/time-tracker-status/time-tracker-status.service';\r\nimport { TimeTrackerService } from '../../time-tracker/time-tracker.service';\r\n\r\nexport class InterruptedSequenceQueue extends SequenceQueue {\r\n\tconstructor(\r\n\t\tprotected _electronService: ElectronService,\r\n\t\tprotected _errorHandlerService: ErrorHandlerService,\r\n\t\tprotected _store: Store,\r\n\t\tprotected _timeSlotQueueService: TimeSlotQueueService,\r\n\t\tprotected _timeTrackerService: TimeTrackerService,\r\n\t\tprotected _timeTrackerStatusService: TimeTrackerStatusService\r\n\t) {\r\n\t\tsuper(\r\n\t\t\t_electronService,\r\n\t\t\t_errorHandlerService,\r\n\t\t\t_store,\r\n\t\t\t_timeSlotQueueService,\r\n\t\t\t_timeTrackerService,\r\n\t\t\t_timeTrackerStatusService\r\n\t\t);\r\n\t}\r\n\r\n\tpublic async synchronize({ timer, intervals }: ISequence): Promise<void> {\r\n\t\tconsole.log('üõ† - Create queue');\r\n\t\t// Create the queue\r\n\t\tconst timeSlotQueue = new TimeSlotQueue(\r\n\t\t\tthis._timeTrackerService,\r\n\t\t\tthis._timeSlotQueueService,\r\n\t\t\tthis._electronService,\r\n\t\t\tthis._store\r\n\t\t);\r\n\t\t// append data to queue;\r\n\t\tfor (const interval of intervals)\r\n\t\t\ttimeSlotQueue.enqueue({\r\n\t\t\t\t...interval,\r\n\t\t\t\ttimesheetId: timer.timesheetId\r\n\t\t\t});\r\n\t\tintervals = []; // empty the array\r\n\t\tconsole.log('üèó - Begin processing interrupted time slot queue');\r\n\t\t// Begin processing\r\n\t\tawait timeSlotQueue.process();\r\n\t\tconsole.log('‚úÖ - End processing interrupted time slot queue');\r\n\t\t// End processing\r\n\t}\r\n}\r\n"]}